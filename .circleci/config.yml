version: 2.1

commands:
  setup-sccache:
    steps:
      - run:
          name: Install sccache
          command: |
            cargo install sccache
            # This configures Rust to use sccache.
            echo 'export "RUSTC_WRAPPER"="sccache"' >> $BASH_ENV
            # This is the maximum space sccache cache will use on disk.
            echo 'export "SCCACHE_CACHE_SIZE"="1G"' >> $BASH_ENV
            sccache --version
  restore-sccache-cache:
    steps:
      - restore_cache:
          name: Restore sccache cache
          key: sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
  save-sccache-cache:
    steps:
      - save_cache:
          name: Save sccache cache
          # We use {{ epoch }} to always upload a fresh cache:
          # Of course, restore_cache will not find this exact key,
          # but it will fall back to the closest key (aka the most recent).
          # See https://discuss.circleci.com/t/add-mechanism-to-update-existing-cache-key/9014/13
          key: sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}
          paths:
            - "~/.cache/sccache"
# Define the jobs we want to run for this project
jobs:
  build:
    machine:
      docker:
        - image: circleci/rust:latest    steps:
      - checkout
      - run:
          name: "pre-install"
          command: | 
           sudo apt-get clean
           sudo apt-get update
           sudo apt-get install dpkg
      - run:
          name: "Install Test Env"
          command: | 
           sudo apt-get install nodejs
           sudo apt install npm
           npm install -g testcafe
           npm install grunt
           npm install grunt-contrib-qunit
           wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
           sudo dpkg -i --force-depends google-chrome-stable_current_amd64.deb
      - run:
          name: "Install"
          command: | 
           sudo apt install rustc
           ./tools/install-tarantool.sh
           ./control-install.sh
           go version
           rustc -V
      - setup-sccache
      - restore-sccache-cache
      - run:
          name: "Build"
          command: | 
           source $HOME/.cargo/env
           ./build.sh 
      - save-sccache-cache
      - run:
          name: "test"
          command: | 
            ./control-start.sh
            sleep 200
            grunt test --stack --verbose
            testcafe chrome:headless qa/testcafe/testLogin.js --screenshots screens --screenshots-on-fails screens --speed 0.8
            testcafe chrome:headless qa/testcafe/testPerson.js --screenshots screens --screenshots-on-fails screens --speed 0.2
            testcafe chrome:headless qa/testcafe/testLanguage.js --screenshots screens --screenshots-on-fails screens --speed 0.8
            testcafe chrome:headless qa/testcafe/testComment.js --screenshots screens --screenshots-on-fails screens --speed 0.5
            testcafe chrome:headless qa/testcafe/testSearch.js --screenshots screens --screenshots-on-fails screens --speed 0.8
            testcafe chrome:headless qa/testcafe/testCreatingNetInterface.js --screenshots screens --screenshots-on-fails screens --speed 0.8
            testcafe chrome:headless qa/testcafe/testDeleteAndRecovery.js --screenshots screens --screenshots-on-fails screens --speed 0.7
            testcafe chrome:headless qa/testcafe/testJournal.js --screenshots screens --screenshots-on-fails screens --speed 0.8
            testcafe chrome:headless qa/testcafe/testRights.js --screenshots screens --screenshots-on-fails screens --speed 0.8
            testcafe chrome:headless qa/testcafe/testSearchRangeOfDates.js --screenshots screens --screenshots-on-fails screens --speed 0.8
            testcafe chrome:headless qa/testcafe/testSimpleNet.js --screenshots screens --screenshots-on-fails screens --speed 0.2
            testcafe chrome:headless qa/testcafe/testSimpleNet2.js --screenshots screens --screenshots-on-fails screens --speed 0.2
            testcafe chrome:headless qa/testcafe/testSimpleNet3.js --screenshots screens --screenshots-on-fails screens --speed 0.2
            testcafe chrome:headless qa/testcafe/testSimpleNetLowPriority.js --screenshots screens --screenshots-on-fails screens --speed 0.8
            testcafe chrome:headless qa/testcafe/testControls.js --screenshots screens --screenshots-on-fails screens --speed 0.8
            testcafe chrome:headless qa/testcafe/testDropDown.js --screenshots screens --screenshots-on-fails screens --speed 0.7
            testcafe chrome:headless qa/testcafe/testAttributiveSearch.js --screenshots screens --screenshots-on-fails screens --speed 0.7

# Orchestrate our job run sequence
workflows:
  build_and_test:
    jobs:
      - build
