global
  maxconn 2048
  tune.ssl.default-dh-param 2048
  log /dev/log local0
  log /dev/log local1 notice
  chroot /var/lib/haproxy
  stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 30s
  user haproxy
  group haproxy
  daemon

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # Default ciphers to use on SSL-enabled listening sockets.
  # For more information, see ciphers(1SSL). This list is from:
  #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
  ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
  ssl-default-bind-options no-sslv3

defaults
  log     global
  mode    http
  option  httplog
  option  dontlognull
  option  dontlog-normal
  timeout connect 5s
  timeout client  50s
  timeout server  50s
  timeout tunnel  1h

  option forwardfor
  option http-server-close

  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

frontend proxy
  bind *:80
#  bind *:443 ssl crt /etc/letsencrypt/live/name.semantic-machines.com/name.semantic-machines.com.pem
#  http-request redirect location https://name.semantic-machines.com%[req.uri] if !{ hdr(host) -i name.semantic-machines.com }
#  http-request redirect scheme https if !{ ssl_fc }
  use_backend letsencrypt if { path_beg /.well-known/acme-challenge/ }
  use_backend monitor if { path_beg /monitor }
  use_backend jasperserver if { path_beg /jasperserver } { query -m beg _flowId=viewReportFlow }
  http-request deny if { path_beg /jasperserver } !{ query -m beg _flowId=viewReportFlow }
  use_backend query if { path_beg /query }
  use_backend ccus if { path_beg /ccus }
  default_backend web

backend letsencrypt
  server letsencrypt 127.0.0.1:8888

backend web
  balance roundrobin
  option forwardfor
  option httpchk HEAD / HTTP/1.1\r\nHost:localhost
  server web8081 127.0.0.1:8081 check

backend monitor
  balance roundrobin
  server netdata19999 127.0.0.1:19999
  http-request set-path %[path,regsub(monitor,,g)]
  http-request set-header X-Forwarded-For %[src]

backend ccus
  balance roundrobin
  server ccus8088 127.0.0.1:8088

backend jasperserver
  balance roundrobin
  server jasperserver8080 127.0.0.1:8080

backend query
  balance roundrobin
  option forwardfor
  option httpchk HEAD / HTTP/1.1\r\nHost:localhost
  server query8081 127.0.0.1:8081 check

listen stats
  bind *:19998
  stats enable
  stats uri /
  stats hide-version
