Платформа Veda. Отличительные черты платформы:

1) Платформа предоставляет общую среду для аналитиков и разработчиков.

* Аналитики и разработчики в равной степени используют описание предметной области (онтологию) для создания приложений.
  Онтология одновременно является формальным описанием предметной области для аналитика и объектной моделью для разработчика.
  Сама схема данных тоже является объектом платформы. Т.е. определение классов, их литеральных свойств и отношений также хранятся и обрабатываются в платформе, как и индивиды созданные на их основе.
  Структурный элемент описания онтологии - индивид, является единственным способом хранения, обработки, представления, импорта и экспорта информации.

* Аналитики проектируют классы сущностей, их свойства и отношения, потоки работ, полномочия пользователей.

* Разработчики, "читая" онтологию, создают пользовательский интерфейс и требуемую логику работы с объектами предметной области (или самой схемой), дополняя при этом онтологию (шаблоны и скрипты - это тоже индивиды).

* Если в ходе реализации программисты и аналитики меняют описание предметной области, это изменение сразу доступно всем участникам проекта.
  Традиционные инструменты и методы взаимодействия разработчиков и аналитиков обеспечивают передачу знаний только в одну сторону (формальные требования ТЗ, use-cases, и т.д.)
  Инструменты с потенциалом автоматизации этой задачи (например, UML) были восприняты отраслью довольно прохладно, поскольку требовали от аналитиков глубоких навыков программирования.
  Например, на основе UML-диаграмм на заданном языке программирования могут автоматически генерироваться заготовки для классов, методов, соответствующие таблицы в базе данных.
  В итоге, UML в основном используется архитекторами ПО для создания каркаса приложения, который передается в реализацию "дешевым" программистам (индусам, фрилансерам,...)

* Формально описанная онтология является общим понятийным аппаратом и взаимным контрактом для разработчика и аналитика при решении задачи.

В итоге получаем:
  - существенное увеличение скорости разработки ;
  - естественное разделение труда программистов и аналитиков в унифицированной среде ;
  - высокую вероятность повторного использования моделей предметной области.

2) Для целей разработки приложений на платформе и на клиентской, и на серверной стороне используется язык javascript (скрипты визуализации, трансформация данных, обработчики событий и т.п.)

3) Платформа отличается высокой производительностью, что подтверждается нагрузочными тестами и реальными продуктивными системами на стороне заказчика.
   Самое крупное внедрение - 1500 пользователей (и > 20 000 000 документов), для которых разработанный продукт является инструментом ежедневного использования.
