@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix v-s: <http://semantic-machines.com/veda/veda-schema/> .
@prefix v-ui: <http://semantic-machines.com/veda/veda-ui/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix cfg: <http://semantic-machines.com/veda/config/> .
@prefix v-fc: <http://semantic-machines.com/veda/veda-function-create/> .
@prefix td: <http://semantic-machines.com/veda/test-data/> .
@prefix v-ft: <http://semantic-machines.com/veda/veda-function-tasks/> .

@prefix v-fs: <http://semantic-machines.com/veda/veda-function-search/> .
<http://semantic-machines.com/veda/veda-function-search>
  rdf:type owl:Ontology ;
  rdfs:label "Онтология функции 'Поиск' системы Веда"@ru ;
  rdfs:label "Veda system function 'Search' ontology"@en ;
#  owl:versionInfo "0.2" ;
  v-s:loadPriority 9 ;
.

########## SEARCH FUNCTION ###########

v-fs:fulltextQuery
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Запрос"@ru ;
  rdfs:label "Query"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:string ;
.
v-fs:sortOrder
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Порядок сортировки"@ru ;
  rdfs:label "Sort order"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:string ;
.
v-fs:EnterQuery
  rdf:type v-s:Bundle ;
  rdfs:label "Введите запрос"@ru ;
  rdfs:label "Enter query"@en ;
.
v-fs:Find
  rdf:type v-s:Bundle ;
  rdfs:label "Найти"@ru ;
  rdfs:label "Find"@en ;
.
v-fs:Reset
  rdf:type v-s:Bundle ;
  rdfs:label "Сбросить"@ru ;
  rdfs:label "Reset"@en ;
.
v-fs:Excel
  rdf:type v-s:Bundle ;
  rdfs:label "Excel"@ru ;
  rdfs:label "Excel"@en ;
.
v-fs:FilesRegistry
  rdf:type v-s:Bundle ;
  rdfs:label "Реестр с файлами"@ru ;
  rdfs:label "Registry with files"@en ;
.
v-fs:SetColumns
  rdf:type v-s:Bundle ;
  rdfs:label "Настроить столбцы"@ru ;
  rdfs:label "Set columns"@en ;
.
v-fs:Results
  rdf:type v-s:Bundle ;
  rdfs:label "Результаты"@ru ;
  rdfs:label "Results"@en ;
.
v-fs:Empty
  rdf:type v-s:Bundle ;
  rdfs:label "Пусто!"@ru ;
  rdfs:label "Empty!"@en ;
.
v-fs:NothingFound
  rdf:type v-s:Bundle ;
  rdfs:label "По Вашему запросу ничего не найдено. Пожалуйста, уточните запрос."@ru ;
  rdfs:label "Nothing found for your request. Please refine the query."@en ;
.
v-fs:MoreResults
  rdf:type v-s:Bundle ;
  rdfs:label "Еще результаты"@ru ;
  rdfs:label "More results"@en ;
.
v-fs:AllResults
  rdf:type v-s:Bundle ;
  rdfs:label "Загрузить все"@ru ;
  rdfs:label "Load all"@en ;
.
v-fs:NoMoreResults
  rdf:type v-s:Bundle ;
  rdfs:label "Все результаты загружены"@ru ;
  rdfs:label "All results loaded"@en ;
.
v-fs:SearchForContentBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Содержание"@ru ;
  rdfs:label "Content"@en ;
.
v-fs:AdvancedSearchBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Расширенный поиск"@ru ;
  rdfs:label "Advanced search"@en ;
.

v-fs:AttributiveSearch
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:Function ;
  rdfs:label "Найти"@ru ;
  rdfs:label "Search"@en ;
  v-ui:hasModel v-fs:AttributiveSearchModel ;
.

v-fs:requiredClass
  rdf:type owl:ObjectProperty ;
  rdfs:label "Тип"@ru ;
  rdfs:label "Required class"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range owl:Class ;
.

v-fs:PersonalSearch
  rdf:type owl:Class ;
  rdfs:subClassOf v-fs:AttributiveSearch ;
  rdfs:label "Найти"@ru ;
  rdfs:label "Search"@en ;
  v-ui:hasModel v-fs:AttributiveSearchModel ;
.

v-fs:applicableOperation
  rdf:type owl:ObjectProperty ;
  rdfs:label "Применимая операция"@ru ;
  rdfs:label "Applicable operation"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range v-s:Operation ;
.

v-fs:searchBlankTemplate
  rdf:type owl:ObjectProperty ;
  rdfs:label "Шаблон формы поиска"@ru ;
  rdfs:label "Search form template"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range v-ui:ClassTemplate ;
.

v-fs:searchResultTemplate
  rdf:type owl:ObjectProperty ;
  rdfs:label "Шаблон результатов поиска"@ru ;
  rdfs:label "Search result template"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range v-ui:ClassTemplate ;
.

v-fs:searchBlank
  rdf:type owl:ObjectProperty ;
  rdfs:label "Бланк поиска"@ru ;
  rdfs:label "Search blank"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range v-fc:Blank ;
.

v-fs:searchResult
  rdf:type owl:ObjectProperty ;
  rdfs:label "Результат"@ru ;
  rdfs:label "Result"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range rdfs:Resource ;
.
v-fs:searchOnLoad
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Искать сразу"@ru ;
  rdfs:label "Search on load"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:boolean ;
.
v-fs:query
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Запрос"@ru ;
  rdfs:label "Query"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:boolean ;
.
v-fs:queryBuilder
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Построитель запроса"@ru ;
  rdfs:label "Query builder"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:string ;
.
v-fs:loadAll
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Загрузить все"@ru ;
  rdfs:label "Load all"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:boolean ;
.
v-fs:cursor
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Обработано"@ru ;
  rdfs:label "Processed"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:integer ;
.
v-fs:top
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Топ"@ru ;
  rdfs:label "Top"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:integer ;
.
v-fs:limit
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Ограничение"@ru ;
  rdfs:label "Limit"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:integer ;
.
v-fs:estimated
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Найдено"@ru ;
  rdfs:label "Estimated"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:integer ;
.
v-fs:authorized
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Авторизовано"@ru ;
  rdfs:label "Authorized"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range xsd:integer ;
.
v-fs:selected
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Выбрано"@ru ;
  rdfs:label "Selected"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range rdfs:Resource ;
.
v-fs:operation
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Выбрано"@ru ;
  rdfs:label "Selected"@en ;
  rdfs:domain v-fs:AttributiveSearch ;
  rdfs:range v-s:Operation ;
.
v-fs:SearchBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Поиск"@ru ;
  rdfs:label "Search"@en ;
.

v-fs:CtrlEnterBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Нажмите 'Ctrl + Enter' чтобы начать поиск"@ru ;
  rdfs:label "Press 'Ctrl + Enter' to begin search"@en ;
.

v-fs:ClickToViewContent
  rdf:type v-s:Bundle ;
  rdfs:label "Кликните, чтобы увидеть всё содержимое"@ru ;
  rdfs:label "Click to view all contents"@en ;
.

v-fs:AttributiveSearchModel
  rdf:type v-ui:ClassModel ;
  v-ui:forClass v-fs:AttributiveSearch ;
  rdfs:label "Шаблон для класса v-fs:AttributiveSearch"@ru ;
  rdfs:label "Template for v-fs:AttributiveSearch class"@en ;
  v-s:script """
  var self = this;

  // Defaults
  this["v-fs:cursor"] = [ this["v-fs:cursor"][0] || 0 ];
  this["v-fs:top"] = [ veda.user.preferences.displayedElements || 10 ];
  this["v-fs:limit"] = [ this["v-fs:limit"][0] || 10000 ];
  this["v-fs:estimated"] = [ this["v-fs:estimated"][0] || 0 ];
  this["v-fs:authorized"] = [ this["v-fs:authorized"][0] || 0 ];
  this["v-fs:sortOrder"] = [ this["v-fs:sortOrder"][0] || "'v-s:created' desc" ];
  var queryBuilder = this.hasValue("v-fs:queryBuilder") ? eval(this.get("v-fs:queryBuilder")[0].valueOf()) : veda.Util.queryFromIndividualTT_JOIN;

  function evalQuery (query) {
    return new Promise(function (resolve, reject) {
      try {
        var result = query.replace(/{(.*)}/g, function (match) {
          return eval(match);
        });
        resolve(result);
      } catch (error) {
        console.log("Query evaluation error", error);
        reject(error);
      }
    });
  };

  // Search method
  this.search = function (cursor) {
    if (cursor > 0) {
      self["v-fs:cursor"] = [cursor];
    } else {
      self["v-fs:cursor"] = [0];
      self["v-fs:authorized"] = [0];
      self["v-fs:searchResult"] = [];
    }

    var ft = self.hasValue("v-fs:fulltextQuery") && evalQuery(self["v-fs:fulltextQuery"][0]);

    return Promise.resolve(ft)
      .then(function (ft) {
        var query = {};
        if ( self.hasValue("v-fs:searchBlank") ) {
          return self["v-fs:searchBlank"][0].load()
            .then(function (searchBlank) {
              return searchBlank.initBlank();
            })
            .then(function (blankObject) {
              var vql = veda.Util.queryFromIndividual(blankObject);
              var sort = self["v-fs:sortOrder"][0];
              var sql = queryBuilder(blankObject, sort);
              if (ft && !vql) {
                query.vql = ft;
              } else if (ft && vql) {
                query.vql = ft + " && " + vql;
              } else if (!ft && vql) {
                query.vql = vql;
                if (sql) {
                  query.sql = sql;
                }
              }
              return query;
            })
        } else {
          query.vql = ft;
          return query;
        }
      })
      .then(performQuery.bind(self));
  };

  function performQuery(query) {
    var self = this;
    this["v-fs:query"] = [ query.vql ];
    if ( !query.vql ) {
      this["v-fs:searchResult"] = [];
      return Promise.resolve([]);
    }
    return veda.Backend.query({
      ticket: veda.ticket,
      query: query.vql,
      sort: self["v-fs:sortOrder"][0],
      top: self["v-fs:top"][0] || veda.user.preferences.displayedElements || 10,
      limit: self["v-fs:limit"][0] || 10000,
      from: self["v-fs:cursor"][0],
      sql: query.sql
    }).then(function (results) {
      self["v-fs:estimated"] = [ results.estimated ];
      self["v-fs:cursor"] = [ results.cursor ];
      return results.result;
    }).then(function (resultDelta) {
      var prefetch = [];
      resultDelta.map(function (uri) {
        if ( !veda.cache.get(uri) ) {
          prefetch.push( uri );
        }
      });
      if (prefetch.length) {
        return veda.Backend.get_individuals({
          ticket: veda.ticket,
          uris: prefetch
        }).then(function (prefetched) {
          prefetched.forEach(function (json) {
            var fetched = new veda.IndividualModel(json);
          });
          return resultDelta;
        });
      } else {
        return resultDelta;
      }
    }).then(function (resultDelta) {
      self["v-fs:authorized"] = [ self["v-fs:authorized"][0] + resultDelta.length ];
      var delta = resultDelta.map(function (uri) {
        return new veda.IndividualModel(uri);
      });
      self.addValue("v-fs:searchResult", delta);
      if ( self.hasValue("v-fs:loadAll", true) && self["v-fs:cursor"][0] < self["v-fs:estimated"][0] ) {
        return self.search( self["v-fs:cursor"][0] );
      } else if ( self.hasValue("v-fs:loadAll", true) ) {
        self.trigger("search:complete", self["v-fs:searchResult"]);
        return self["v-fs:searchResult"];
      } else {
        return delta ;
      }
    });
  }

//# sourceURL=v-fs:AttributiveSearchModel
  """ ;
.

v-fs:EnterLabel
  rdf:type v-s:Bundle ;
  rdfs:label "Введите название"@ru ;
  rdfs:label "Enter label"@en ;
.

v-fs:SavePersonalRegistry
  rdf:type v-s:Bundle ;
  rdfs:label "Сохранить личный реестр"@ru ;
  rdfs:label "Save personal registry"@en ;
.

v-fs:UpdatePersonalRegistry
  rdf:type v-s:Bundle ;
  rdfs:label "Обновить личный реестр"@ru ;
  rdfs:label "Update personal registry"@en ;
.

v-fs:RegistrySuccessfullySaved
  rdf:type v-s:Bundle ;
  rdfs:label "Реестр успешно сохранен"@ru ;
  rdfs:label "Registry successfully saved"@en ;
.

v-fs:RegistrySuccessfullyUpdated
  rdf:type v-s:Bundle ;
  rdfs:label "Реестр успешно обновлен"@ru ;
  rdfs:label "Registry successfully updated"@en ;
.

v-fs:RegistrySuccessfullyDeleted
  rdf:type v-s:Bundle ;
  rdfs:label "Реестр успешно удален"@ru ;
  rdfs:label "Registry successfully deleted"@en ;
.

v-s:TS_AttributiveSearch
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-fs:AttributiveSearchManagementTemplate;
  v-ui:forClass v-fs:AttributiveSearch
.
v-s:TS_PersonalSearch
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-fs:AttributiveSearchManagementTemplate;
  v-ui:forClass v-fs:PersonalSearch
.

v-fs:AttributiveSearchManagementTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-fs:AttributiveSearch ;
  rdfs:label "Шаблон для класса v-fs:AttributiveSearch"@ru ;
  rdfs:label "Template for v-fs:AttributiveSearch class"@en ;
  v-ui:template """
<script>
  var notify = new veda.Notify();

  if ( !individual.hasValue("v-s:creator", veda.appointment || veda.user) ) {
    $(".action.save-registry", template).click(function () {
      var personalLabel = prompt( new veda.IndividualModel("v-fs:EnterLabel").toString(), individual.toString() );
      if (!personalLabel) { return; }
      individual.clone()
      .then(function (personalRegistry) {
        personalRegistry["rdf:type"] = [ new veda.IndividualModel("v-fs:PersonalSearch") ];
        personalRegistry["v-fs:searchResult"] = [];
        personalRegistry["v-fs:selected"] = [];
        personalRegistry["v-fs:operation"] = [];
        personalRegistry["v-fs:authorized"] = [];
        personalRegistry["v-fs:cursor"] = [];
        personalRegistry["v-fs:estimated"] = [];
        personalRegistry["v-fs:limit"] = [];
        personalRegistry["v-fs:top"] = [];
        personalRegistry["v-s:creator"] = [];
        personalRegistry["v-s:created"] = [];
        personalRegistry["rdfs:isDefinedBy"] = [];
        personalRegistry["rdfs:label"] = [ personalLabel ];
        var searchBlank = individual.hasValue("v-fs:searchBlank") ? individual["v-fs:searchBlank"][0] : undefined;
        if (searchBlank && searchBlank.object) {
          return searchBlank.clone()
          .then(function(personalRegistryBlank) {
            personalRegistryBlank["rdfs:isDefinedBy"] = [];
            personalRegistryBlank.object = searchBlank.object;
            return personalRegistryBlank.updateBlank();
          })
          .then(function(personalRegistryBlank) {
            personalRegistry["v-fs:searchBlank"] = [ personalRegistryBlank ];
            return personalRegistry.save();
          });
        } else {
          return personalRegistry.save();
        }
      })
      .then(function(personalRegistry) {
        return veda.user.aspect.load().then(function (aspect) {
          aspect.addValue("v-s:hasRegistry", personalRegistry);
          return aspect.save();
        });
      })
      .then(function () {
        return new veda.IndividualModel("v-fs:RegistrySuccessfullySaved").load();
      })
      .then(function (message) {
        notify("success", { message: message });
      })
      .catch(function (error) {
        notify("danger", { message: error });
      });
    });
  } else {
    $(".action.save-registry", template).remove();
  }

  individual.rights.then(function (rights) {
    if ( rights.hasValue("v-s:canUpdate", true) ) {
      $(".action.update-registry", template).click(function () {
        individual["v-fs:searchResult"] = [];
        var searchBlank = individual.hasValue("v-fs:searchBlank") ? individual["v-fs:searchBlank"][0] : undefined;
        if (searchBlank && searchBlank.object) {
          searchBlank.updateBlank()
          .then(function () {
            return new veda.IndividualModel("v-fs:RegistrySuccessfullyUpdated").load();
          })
          .then(function (message) {
            notify("success", { message: message.toString() });
          })
          .catch(function (error) {
            notify("danger", { message: error });
          });
        }
      });
    } else {
      $(".action.update-registry", template).remove();
    }

    if ( rights.hasValue("v-s:canDelete", true) ) {
      $(".action.delete-registry", template).click(function () {
        veda.user.aspect.load()
        .then(function (aspect) {
          aspect.removeValue("v-s:hasRegistry", individual);
          return aspect.save();
        })
        .then(function () {
          return individual.delete();
        })
        .then(function () {
          return new veda.IndividualModel("v-fs:RegistrySuccessfullyDeleted").load();
        })
        .then(function (message) {
          return notify("success", { message: message });
        })
        .catch(function (error) {
          notify("danger", { message: error });
        });
      });
    } else {
      $(".action.delete-registry", template).remove();
    }
  });

//# sourceURL=v-fs:AttributiveSearchManagementTemplate_pre
</script>
<div>
  <div class="container sheet">
    <div class="ribbon-wrapper top-left">
      <div class="ribbon top-left primary" about="v-fs:SearchBundle" property="rdfs:label"></div>
    </div>
    <div class="actions text-right">
      <button class="action save-registry btn btn-primary" about="v-fs:SavePersonalRegistry" property="rdfs:label"></button>
      <button class="action update-registry btn btn-primary" about="v-fs:UpdatePersonalRegistry" property="rdfs:label"></button>
      <button class="action delete-registry btn btn-link" about="v-s:Delete" property="rdfs:label"></button>
    </div>
  </div>
  <div class="margin-lg" about="@" data-template="v-fs:AttributiveSearchTemplate">
</div>
  """ ;
.

v-fs:AttributiveSearchTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-fs:AttributiveSearch ;
  rdfs:label "Шаблон для класса v-fs:AttributiveSearch"@ru ;
  rdfs:label "Template for v-fs:AttributiveSearch class"@en ;
  v-ui:template """
<div class="container sheet">
  <style>
    td.number {
      mso-number-format:General;
    }
    td.date {
      mso-number-format:"Short Date";
    }
  </style>
  <div about="@" data-template="v-fs:AttributiveSearchInlineTemplate"></div>
  <span class="additional-actions">
    <button class="btn btn-default xls"><span about="v-fs:Excel" property="rdfs:label"></span></button>
    <button class="btn btn-default files"><span about="v-fs:FilesRegistry" property="rdfs:label"></span></button>
    <span class="text-muted padding-lg" about="v-fs:CtrlEnterBundle" property="rdfs:label"></span>
  </span>
</div>
<script>
  // Append additional actions
  setTimeout(function () {
    var additionalActions = $(".additional-actions", template);
    var searchActions = $(".search-actions", template);
    additionalActions.appendTo(searchActions);
  }, 100);

  // Export table to 'blob' or 'xls'
  var exportTable = (function () {
    var uri = 'data:application/vnd.ms-excel;base64,'
      , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><meta http-equiv="content-type" content="text/plain; charset=UTF-8"/></head><body><table border="1" cellspacing="0" bordercolor="#eee">{table}</table></body></html>'
      , format = function(s, c) { return s.replace(/{([a-z]+)}/g, function(m, p) { return c[p]; }) }
    return function(table, name, exportAs) {
      if (!table.nodeType) table = document.getElementById(table);
      var ctx = {
        worksheet: name || 'Worksheet',
        table: table.innerHTML
      };
      if ( exportAs === "xls" ) {
        // Tags
        var tags = new RegExp("<\\/?(a|span|p|div|button) ?.*?>", "gi");
        // Numbers with decimal point
        var decimal = new RegExp("([^\\d\\.\\:]+\\d+)\\.(\\d+[^\\d\\.\\:]+)", "gi");
        ctx.table = ctx.table.replace(tags, " ").replace(decimal, "$1,$2");
      }
      var formatted = format(template, ctx);
      var blob = new Blob([formatted], {type: "application/vnd.ms-excel;charset=utf-8"});
      if ( exportAs === "blob" ) {
        return blob;
      } else if ( exportAs === "xls" ) {
        saveAs(blob, name + ".xls");
      }
    }
  })();

  $(".xls", template).click(function (e) {
    e.preventDefault();
    var resultTable = $(".search-result table").clone();
    resultTable.find(".hidden").remove();
    resultTable = resultTable.get(0);
    exportTable(resultTable, individual["rdfs:label"].join(", "), "xls");
  });

  $(".files", template).click(function (e) {
    var btn = $(this);
    toggleSpin(btn);
    e.preventDefault();
    var resultTable = $(".search-result table").clone();
    resultTable.find(".hidden").remove();

    var filesPromises = $("[typeof='v-s:File']", resultTable).map(function () {
      var link = $("a", this);
      var fileName = link.text().trim();
      var fileUrl = link.attr("href");
      return filePromise(fileUrl, fileName);
    });

    Promise.all(filesPromises).then(function (files) {
      var zip = new JSZip();
      var folder = zip.folder("files");
      var unique = {};
      files.forEach(function (file) {
        var name = file.name;
        var i = 1;
        while (unique[name]) {
          name = file.name.replace(/(.*?).([^.]*)$/, "$1 ("+ i +").$2");
          if (name === file.name) { name = file.name + " ("+ i +")"; }
          i++;
        }
        file.name = name;
        unique[file.name] = true;
        $("[href=" + veda.Util.escape4$(file.url) + "]", resultTable).attr("href", "/files/" + file.name).text(file.name);
        folder.file(file.name, file);
      });
      var registry = exportTable(resultTable.get(0), individual["rdfs:label"].join(", "), "blob");
      zip.file("registry.html", registry);
      zip.generateAsync({type:"blob"}).then(function(content) {
        saveAs(content, "registry.zip");
        toggleSpin(btn);
      });
    }).catch(function (error) {
      console.log(error, error.stack);
      toggleSpin(btn);
      var notify = new veda.Notify();
      notify("danger", { message: "Ошибка выгрузки реестра. Обратитесь в поддержку." });
    });
  });

  function filePromise(url, name) {
    return new Promise(function (resolve, reject) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url + "?" + Math.random(), true);
      xhr.responseType = 'blob';
      xhr.onload = function(e) {
        if (this.status == 200) {
          var file = new Blob([this.response], {type: 'application/octet-stream'});
          file.name = name;
          file.url = url;
          resolve(file);
        } else {
          reject(xhr.statusText);
        }
      };
      xhr.onerror = function () {
        reject(xhr.statusText);
      }
      xhr.send();
    });
  }

  // Spinner
  function toggleSpin(el) {
    var $el = $(el);
    var hasSpinner = $el.children(".fa-spinner");
    if ( hasSpinner.length ) {
      $el.removeClass("disabled");
      hasSpinner.remove();
    } else {
      $el.addClass("disabled");
      $("<i class='fa fa-spinner fa-pulse fa-lg fa-fw'></i>").appendTo(el);
    }
  }

  //# sourceURL=v-fs:AttributiveSearchTemplate_post
</script>
  """ ;
.

v-fs:PerformOperation
  rdf:type v-s:Bundle ;
  rdfs:label "Выполнить операцию"@ru ;
  rdfs:label "Perform operation"@en ;
.

v-fs:SelectedResultsActionsTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-fs:AttributiveSearch ;
  rdfs:label "Шаблон для класса v-fs:AttributiveSearch"@ru ;
  rdfs:label "Template for v-fs:AttributiveSearch class"@en ;
  v-ui:template """
<script>
  var self = this;
  self.on("v-fs:selected", populateOps);
  template.one("remove", function () {
    self.off("v-fs:selected", populateOps);
  });
  var populated;
  if ( self.hasValue("v-fs:selected") ) {
    populateOps();
  }
  $(".dropdown-menu", template).on("click", "[resource]", createOp);
  $(".single-operation", template).on("click", createOp);

  function populateOps() {
    template.toggleClass("hidden", !self.hasValue("v-fs:selected"));
    if ( populated ) { return; }
    populated = true;
    var multi = $(".multi-operation", template);
    var list = $(".dropdown-menu", template);
    var listTemplate = "<li><a about='@' href='#' property='rdfs:label'></a></li>";
    var single = $(".single-operation", template);
    var singleTemplate = "<span about='@' href='#' property='rdfs:label'></span>";
    var applicableOps = self["v-fs:applicableOperation"];
    return veda.Backend.query({
      ticket: veda.ticket,
      query: "'rdf:type' === 'owl:Class' && 'rdfs:subClassOf' === 'v-s:GenericOperation'"
    })
    .then(function (response) {
      response.result.forEach(function (operation_uri) {
        applicableOps.push(new veda.IndividualModel(operation_uri));
      });
      return Promise.all(applicableOps.map(function (op) {
        return op.canCreate();
      }));
    })
    .then(function (canCreate) {
      applicableOps = applicableOps.filter(function (_, i) {
        return canCreate[i];
      });
      if ( applicableOps.length === 0 ) {
        template.remove();
        return;
      } else if ( applicableOps.length === 1 ) {
        multi.remove();
        applicableOps[0].present(single, singleTemplate);
      } else if ( applicableOps.length > 1 ) {
        single.remove();
        applicableOps.forEach(function (op) {
          op.present(list, listTemplate);
        });
      }
      $(".hidden", template).removeClass("hidden");
    });
  }

  function createOp (e) {
    e.preventDefault();
    var $this = $(this);
    if ( $this.hasClass("disabled") ) { return; }
    var operationClassUri = $this.attr("resource") || $this.children().first().attr("resource"),
        operationClass = new veda.IndividualModel(operationClassUri),
        operation = new veda.IndividualModel(),
        operationContainer = $(".operation-container", template).empty();
    operation["rdf:type"] = [ operationClass ];
    //operation["v-s:dataQuery"] = self["v-fs:query"];
    operation["v-s:data"] = self["v-fs:selected"].slice();
    var modal = veda.Util.showSmallModal(operation);
    modal.on("click", ".action#start", function () {
      self["v-fs:operation"] = [ operation ];
      modal.on("hidden.bs.modal", function () {
        modal.modal("hide").remove();
      });
    });
  }

//# sourceURL=v-fs:SelectedResultsActionsTemplate_pre
</script>
<div class="hidden" style="margin-top:-3px;">
  <button type="button" class="pull-left btn btn-xs btn-primary single-operation hidden"></button>
  <div class="pull-left btn-group multi-operation hidden">
    <button type="button" class="btn btn-xs btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
      <span about="v-fs:PerformOperation" property="rdfs:label"></span> <span class="caret"></span>
    </button>
    <ul class="dropdown-menu operations"></ul>
  </div>
  <div rel="v-fs:operation" data-template="v-s:OperationStatusTemplate" class="pull-left operation-container margin-md-h"></div>
</div>
  """ ;
.

v-fs:AttributiveSearchInlineTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-fs:AttributiveSearch ;
  rdfs:label "Шаблон для класса v-fs:AttributiveSearch"@ru ;
  rdfs:label "Template for v-fs:AttributiveSearch class"@en ;
  v-ui:template """
<script>
  var self = individual,
      searchBlankTemplate = self.hasValue("v-fs:searchBlankTemplate") ? self["v-fs:searchBlankTemplate"][0] : undefined,
      searchResultTemplate = self.hasValue("v-fs:searchResultTemplate") ? self["v-fs:searchResultTemplate"][0] : undefined,
      searchResultContainer = $(".search-result", template);

  if ( !searchBlankTemplate ) {
    $(".results-load-buttons", template).detach().appendTo(template);
    $(".params", template).remove();
    $(".caption", template).removeClass("hidden");
  }
  if ( this.hasValue("v-fs:loadAll", true) ) {
    $(".no-more-results", template).remove();
  }

  // Enable swipe for result table
  $("body").keydown(enableSwipe).keyup(disableSwipe);
  template.one("remove", function () {
    $("body").off("keydown", enableSwipe).off("keyup", disableSwipe);
  });
  function disableSwipe (e) {
    if (e.which === 17) {
      $(".search-result", template).addClass("noSwipe").removeClass("swipe");
    }
  }
  function enableSwipe (e) {
    if (e.ctrlKey) {
      $(".search-result", template).addClass("swipe").removeClass("noSwipe");
    }
  }

  var prevDistance = 0, delta = 0;
  $(".search-result", template).swipe({
    swipeStatus: function (event, phase, direction, distance, duration) {
      if (phase === "move" && event.ctrlKey === true) {
        this.css("cursor", "move");
        if (direction === "left") {
          delta = distance - prevDistance;
          prevDistance = distance;
          this.scrollLeft( this.scrollLeft() + delta );
        } else if (direction === "right") {
          delta = distance - prevDistance;
          prevDistance = distance;
          this.scrollLeft( this.scrollLeft() - delta );
        } else if (direction === "up") {
          window.scrollBy(0, distance);
        } else if (direction === "down") {
          window.scrollBy(0, -distance);
        }
      } else {
        prevDistance = 0;
        delta = 0;
        this.css("cursor", "");
      }
    }
  });
  template.one("remove", function () {
    prevDistance = null;
    delta = null;
    $(".search-result", template).swipe("destroy");
  });

  if ( !searchResultTemplate ) {
    $(".stats-top, .stats-bottom, .result-header", template).remove();
    searchResultTemplate = new veda.IndividualModel("v-fs:MinimalSearchResultTemplate");
  }
  return searchResultTemplate.load().then(function (searchResultTemplate) {
    searchResultTemplate = $( searchResultTemplate["v-ui:template"][0].toString() );
    var resultContainer = $(".result-container", searchResultTemplate);
    var resultTemplate = resultContainer.html();
    individual.resultTemplate = resultTemplate;
    resultContainer.empty();
    searchResultContainer.append( searchResultTemplate );
  });

  //# sourceURL=v-fs:AttributiveSearchInlineTemplate_pre
</script>
<div>
  <style>
    .swipe {
      cursor: move;
    }
    .td-wrapper {
      max-height: 100px;
      overflow: hidden;
      display: inline-block;
      position: relative;
    }
    .td-wrapper::after {
      content: "";
      position: absolute;
      bottom: 0;
      right: 0;
      z-index: 2;
      border-top: 0 solid transparent;
      border-right: 0 solid transparent;
      border-bottom: 7px solid gray;
      border-left: 7px solid transparent;
    }
    .marked {
      outline-offset: -2px;
      outline: 2px solid #aaa;
    }
  </style>
  <h2 class="caption hidden">
    <span about="@" property="rdfs:label"></span>
    <hr class="margin-sm">
  </h2>
  <div class="params">
    <div class="search-form"></div>
    <br>
    <div class="search-actions clearfix">
      <button class="btn btn-primary search-button" id="search-button" about="v-fs:Find" property="rdfs:label"></button>
      <button class="btn btn-default reset-button" id="reset-button" about="v-fs:Reset" property="rdfs:label"></button>
      <span class="results-load-buttons">
        <button class="more-results btn btn-primary hidden" about="v-fs:MoreResults" property="rdfs:label"></button>
        <button class="all-results btn btn-warning hidden" about="v-fs:AllResults" property="rdfs:label"></button>
      </span>
      <div class="pull-right btn-group dropup set-columns-wrapper" style="margin-left:3px;">
        <button type="button" class="btn btn-info dropdown-toggle set-columns" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          <span about="v-fs:SetColumns" property="rdfs:label"></span>
          <span class="caret"></span>
        </button>
        <div class="dropdown-menu" style="padding:15px; width: 300px; max-height: 500px; overflow-y: auto;">
          <div class="checkbox">
            <label>
              <input class="column-check" type="checkbox" checked="true"> <span class="column-name"></span>
            </label>
          </div>
        </div>
      </div>
    </div>
    <br>
  </div>
  <div class="results hidden">
    <div class="result-heading">
      <h4 class="clearfix">
        <span class="pull-left" about="v-fs:Results" property="rdfs:label"></span>
        <div class="pull-left margin-md-h" about="@" data-template="v-fs:SelectedResultsActionsTemplate"></div>
        <small class="stats-top pull-right" style="color:black">
          <span about="v-fs:estimated" property="rdfs:label"></span>
          <span about="@" property="v-fs:estimated" class="badge"></span>&nbsp;&nbsp;
          <span about="v-fs:cursor" property="rdfs:label"></span>
          <span about="@" property="v-fs:cursor" class="badge"></span>&nbsp;&nbsp;
          <strong about="v-fs:authorized" property="rdfs:label"></strong>
          <span about="@" property="v-fs:authorized" class="badge"></span>&nbsp;&nbsp;
        </small>
      </h4>
    </div>
    <div class="search-result table-responsive noSwipe"></div>
    <div class="not-found alert alert-warning hidden">
      <strong about="v-fs:Empty" property="rdfs:label"></strong> <span about="v-fs:NothingFound" property="rdfs:label"></span>
    </div>
    <div class="no-more-results alert alert-success hidden">
      <strong about="v-fs:NoMoreResults" property="rdfs:label"></strong>
    </div>
  </div>
</div>
<script>
  // Make position fixed for buttons bar that doesn't fit the window
  function checkOffset(main, actions, actionsStaticHeight, placeholder) {
    var mainTop = main.offset().top;
    var mainHeight = main.height();
    var windowHeight = window.innerHeight;
    var windowTop = window.scrollY || window.pageYOffset;
    var actionsStaticTop = placeholder.offset().top;
    var actions_inside_viewport = windowTop <= actionsStaticTop && actionsStaticTop < (windowTop + windowHeight);
    var main_inside_viewport = windowTop <= (mainTop + mainHeight - actionsStaticHeight) && (mainTop + actionsStaticHeight) < (windowTop + windowHeight);
    if ( !actions_inside_viewport && main_inside_viewport )  {
      if ( !actions.hasClass("actions-fixed") ) {
        placeholder.css("height", actionsStaticHeight);
        actions.find("br").addClass("hidden");
        actions.addClass("actions-fixed");
      }
    } else {
      if ( actions.hasClass("actions-fixed") ) {
        placeholder.css("height", 0);
        actions.find("br").removeClass("hidden");
        actions.removeClass("actions-fixed");
      }
    }
  }
  setTimeout(function () {
    var main = template;
    var actions = $(".search-actions", template);
    if (!actions.length) { return; }
    var actionsStaticHeight = actions.height();
    var placeholder = $("<div></div>").insertBefore(actions);
    checkOffset(main, actions, actionsStaticHeight, placeholder);
    $(window).on("scroll", scrollHandler);
    template.one("remove", function () {
      $(window).off("scroll", scrollHandler);
    });
    function scrollHandler () {
      checkOffset(main, actions, actionsStaticHeight, placeholder);
    }
  }, 500);

  var self = individual,
      searchBlankContainer = $(".search-form", template),
      searchResultContainer = $(".search-result", template),
      searchButton = $("#search-button.search-button", template),
      moreResults = $(".more-results", template),
      allResults = $(".all-results", template),
      noMoreResults = $(".no-more-results", template),
      searchBlank = self.hasValue("v-fs:searchBlank") ? self["v-fs:searchBlank"][0] : undefined ,
      searchBlankTemplate = self.hasValue("v-fs:searchBlankTemplate") ? self["v-fs:searchBlankTemplate"][0] : undefined ,
      resultContainer = $(".result-container", template),
      notFound = $(".not-found", template),
      statsTop = $(".stats-top", template);

  // Set columns
  individual.hiddenColumns = individual.hiddenColumns || {};
  var checksContainer = $(".set-columns-wrapper .dropdown-menu", template).on('click', function (e) {
    e.stopPropagation();
  });
  var checkTmpl = $(".set-columns-wrapper .dropdown-menu .checkbox", template).remove();
  if (checkTmpl.length) {
    checkTmpl = checkTmpl.get(0).outerHTML;
    $(".search-result table > thead > tr:last > th", template).each(function (index) {
      var th = $(this);
      var check = $(checkTmpl);
      var checkbox = $("input", check);
      var columnName = $(this).find("span").clone();
      if ( columnName.length ) {
        $(".column-name", check).html( columnName );
      } else {
        $(".column-name", check).text( th.text() );
      }
      if (index in individual.hiddenColumns) {
        checkbox.prop("checked", false);
      } else {
        checkbox.prop("checked", true);
      }
      checkbox.change(checkHandler);
      checkHandler.call( checkbox.get(0) );
      checksContainer.append(check);

      // Show/hide result table columns & update resultTemplate accordingly
      function checkHandler() {
        individual.resultTemplate = $(individual.resultTemplate);
        if ( $(this).is(":checked") ) {
          th.removeClass("hidden");
          $("tr td:nth-child(" + (index + 1) + ")", resultContainer).removeClass("hidden");
          individual.resultTemplate.not("script").children().eq(index).removeClass("hidden");
          delete individual.hiddenColumns[index];
        } else {
          th.addClass("hidden");
          $("tr td:nth-child(" + (index + 1) + ")", resultContainer).addClass("hidden");
          individual.resultTemplate.not("script").children().eq(index).addClass("hidden");
          individual.hiddenColumns[index] = true;
        }
        individual.resultTemplate = individual.resultTemplate.map(function () { return this.outerHTML; }).get().join("");
      }
    });
  }

  // Remember scroll position
  template.one("remove", function () {
    self.scroll = $(window).scrollTop();
  });

  // Scroll to position
  function scrollTo(position) {
    if (position > 0) {
      $("html, body").animate({
        scrollTop: position
      });
    }
  }

  // Search handler
  function searchHandler() {
    var searchButtons = $(".search-button", template);
    toggleSpin(searchButtons);
    self.search()
      .then(renderResult)
      .then(clearSelected)
      .then(function () {
        var position = self.scroll || $(".results", template).offset().top;
        scrollTo(position);
        delete self.scroll;
        toggleSpin(searchButtons);
      })
      .catch(function (error) {
        console.log(error);
        toggleSpin(searchButtons);
      });
  }
  self.on("search", searchHandler);
  template.one("remove", function () {
    self.off("search", searchHandler);
  });

  // Search button handler
  searchButton.click(searchHandler);

  // Ctrl + Enter triggers search
  function ctrlEnterHandler (e) {
    if (e.ctrlKey && e.keyCode === 13) {
      searchHandler.call( searchButton.get(0) );
    }
  }
  $(window).on("keyup", ctrlEnterHandler);
  template.one("remove", function () {
    $(window).off("keyup", ctrlEnterHandler);
  });

  // More results handler
  function moreResultsHandler() {
    return self.search( self["v-fs:cursor"][0] )
      .then(renderResult)
      .catch(function (error) {
        console.log(error);
      });
  }

  // More results button
  moreResults.click(moreResultsHandler);

  // All results button
  allResults.click(function () {
    var warn = new veda.IndividualModel("v-s:AreYouSure")["rdfs:label"].map(veda.Util.formatValue).join(" ");
    if ( self["v-fs:estimated"][0] - self["v-fs:cursor"][0] < 100 || confirm(warn) ) {
      loadAll();
    }
  });
  function loadAll() {
    if (self["v-fs:cursor"][0] < self["v-fs:estimated"][0] && template.is(":visible")) {
      moreResultsHandler().then(loadAll);
    }
  }

  // Double click on result table row routes to search result
  $(".search-result", template).on("dblclick", ".result-container > [resource]", function () {
    var uri = $(this).attr("resource");
    riot.route("#/" + uri);
  });
  // Mark clicked row
  $(".search-result", template).on("click", ".result-container > [resource]", function () {
    var that = $(this);
    that.addClass("marked").siblings(".marked").removeClass("marked");
    self.marked = that.attr("resource");
  });

  // Manage sort
  var sortBy = "", dir = "";
  var tmp = self["v-fs:sortOrder"][0].split(" ");
  sortBy = tmp[0]; dir = tmp[1];
  $(".orderby", template).each( function () {
    var header = $(this);
    var a = $("<a href='#' class='text-muted glyphicon glyphicon-sort-by-attributes'></a>");
    header.prepend(a, " ");
    var property_uri = header.attr("data-orderby");
    if (sortBy.indexOf(property_uri) >= 0) {
      a.removeClass("text-muted");
      if (dir === "desc") { a.removeClass("glyphicon-sort-by-attributes").addClass("glyphicon-sort-by-attributes-alt"); }
    }
    a.click(function (e) {
      e.preventDefault();
      e.stopPropagation();
      var $this = $(this);
      $(".orderby a", template).addClass("text-muted");
      var dir = $this.hasClass("glyphicon-sort-by-attributes-alt") ? "asc" : "desc";
      $this.removeClass("text-muted").toggleClass("glyphicon-sort-by-attributes glyphicon-sort-by-attributes-alt");
      self["v-fs:sortOrder"] = [ "'" + property_uri + "' " + dir ];
      searchHandler.call(this);
    });
  });

  // Select results
  var toggleSelectAll = searchResultContainer.find(".toggle-select-all");
  searchResultContainer.on("click", ".toggle-select", toggleSelect);

  toggleSelectAll.click(function () {
    var selectedL = self["v-fs:selected"].length;
    var resultsL = resultContainer.children().length;
    if ( resultsL !== 0 && selectedL !== 0 ) {
      clearSelected();
    } else if ( resultsL !== 0 && selectedL === 0) {
      selectAll();
    }
    setToggleSelectAll();
  });
  function setToggleSelectAll() {
    var selectedL = self["v-fs:selected"].length;
    var resultsL = resultContainer.children().length;
    if ( resultsL !== 0 && resultsL === selectedL ) {
      toggleSelectAll.prop("checked", true);
      toggleSelectAll.prop("indeterminate", false);
    } else if ( resultsL !== 0 && selectedL !== 0 && resultsL !== selectedL ) {
      toggleSelectAll.prop("indeterminate", true);
    } else if ( selectedL === 0 ) {
      toggleSelectAll.prop("indeterminate", false);
      toggleSelectAll.prop("checked", false);
    }
  }
  function clearSelected() {
    self.clearValue("v-fs:selected");
    searchResultContainer.find(".toggle-select:checked").prop("checked", false);
  }
  function selectAll() {
    self.clearValue("v-fs:selected");
    searchResultContainer.find(".toggle-select")
      .prop("checked", true)
      .each(function () {
        var result_uri = $(this).closest("[resource]").attr("resource");
        self.addValue("v-fs:selected", new veda.IndividualModel(result_uri));
      });
  }
  function toggleSelect() {
    var $this = $(this);
    var result_uri = $this.closest("[resource]").attr("resource");
    var result = new veda.IndividualModel(result_uri);
    if ( $this.is(":checked") ) {
      self.addValue("v-fs:selected", result);
    } else {
      self.removeValue("v-fs:selected", result);
    }
  }
  self.on("v-fs:selected", setToggleSelectAll);
  template.one("remove", function () {
    self.off("v-fs:selected", setToggleSelectAll);
  });

  // Render result
  function renderResult(resultDelta) {

    $(".results", template).removeClass("hidden");

    // Toggle "more results" button & "no more results" alert
    if ( self["v-fs:cursor"][0] === self["v-fs:estimated"][0] ) {
      moreResults.addClass("hidden");
      allResults.addClass("hidden");
      noMoreResults.removeClass("hidden");
    } else {
      moreResults.removeClass("hidden");
      allResults.removeClass("hidden");
      noMoreResults.addClass("hidden");
    }
    // Toggle "not found" alert & "no more results" alert
    if ( resultDelta.length ) {
      notFound.addClass("hidden");
    } else {
      notFound.removeClass("hidden");
      noMoreResults.addClass("hidden");
    }

    // Render each result
    var total = self["v-fs:authorized"][0];
    var delta = resultDelta.length;

    // New search triggered
    if ( total === delta ) {
      resultContainer.empty();
    }

    return resultDelta.reduce(function(p, result, i) {
      return p.then(function() {
        return result.present(resultContainer, individual.resultTemplate).then(function (tmpl) {
          $(".serial-number", tmpl).text(total - delta + i + 1);
          if (result.id === self.marked) {
            tmpl.addClass("marked");
          }
          tmpl.find(".toggle-select").prop("checked", self.hasValue("v-fs:selected", result));

          $("td", tmpl).each( function () {
            var text = this.innerText || this.textContent;
            if (text && text.length > 100) {
              var $this = $(this);
              var contents = $this.contents();
              var wrapper = $("<div class='td-wrapper'></div>").append(contents);
              $this.empty().append(wrapper);
              wrapper.popover({
                content: wrapper.html(),
                html: true,
                placement: "top"
              }).tooltip({
                title: new veda.IndividualModel("v-fs:ClickToViewContent")["rdfs:label"].map(veda.Util.formatValue).join(" "),
                placement: "bottom",
                delay: { show: 750, hide: 0 }
              });
            }
          });
          return tmpl;
        });
      });
    }, Promise.resolve()).then(setToggleSelectAll);
  }

  // Spinner
  function toggleSpin(el) {
    var $el = $(el);
    var hasSpinner = $el.children(".fa-spinner");
    if ( hasSpinner.length ) {
      $el.removeClass("disabled");
      hasSpinner.remove();
    } else {
      $el.addClass("disabled");
      $("<i class='fa fa-spinner fa-pulse fa-lg fa-fw'></i>").appendTo(el);
    }
  }

  // Read extra parameters from URL
  var hash = window.location.hash;
  var tokens = decodeURI(hash).slice(2).split("/"),
      uri = tokens[0],
      extra = tokens[4];
  if (uri === self.id) {
    if (extra) {
      extra = extra.split("&").reduce(function (acc, pair) {
        var split = pair.split("="),
            property_uri = split[0] || "",
            values = split[1].split("|") || "";
        acc[property_uri] = acc[property_uri] || [];
        values.forEach(function (value) {
          acc[property_uri].push( parse(property_uri, value) );
        });
        return acc;
      }, {});
    }
  }
  function parse (property_uri, value) {
    var property = new veda.IndividualModel(property_uri);
    var range = property.hasValue("rdfs:range") ? property["rdfs:range"][0].id : "rdfs:Resource";
    var parsed;
    switch (range) {
      case "xsd:string": parsed = value; break;
      case "xsd:integer":
      case "xsd:decimal": parsed = parseFloat( value.split(" ").join("").split(",").join(".") ); break;
      case "xsd:boolean": parsed = value === "true"; break;
      case "xsd:dateTime": parsed = new Date(value); break;
      default: parsed = new veda.IndividualModel(value);
    }
    return parsed;
  }

  // Render search form
  return Promise.resolve().then(function () {
    if ( searchBlank ) {
      return searchBlank.load().then(function(searchBlank) {
        $("#reset-button.reset-button", template).click(function () {
          searchBlank.object.off("*");
          delete searchBlank.object;
          setupBlank();
          hideResults();
        });
        return setupBlank();
      });
    } else {
      $(".params", template).remove();
      $("#reset-button.reset-button", template).remove();
    }
    function setupBlank () {
      return searchBlank.initBlank().then(function (blankObject) {
        blankObject.on("propertyModified", hideResults);
        template.one("remove", function () {
          blankObject.off("propertyModified", hideResults);
        });
        // Populate blank with extra parameters from URL
        if (extra) {
          for (var property_uri in extra) {
            blankObject[property_uri] = extra[property_uri];
          }
        }
        if ( searchBlankTemplate && searchBlankContainer.length ) {
          searchBlankContainer.empty();
          return blankObject.present(searchBlankContainer, searchBlankTemplate, "search");
        }
      });
    }
    function hideResults () {
      $(".results", template).addClass("hidden");
    }
  }).then(function () {
    // Search on load
    if ( individual.hasValue("v-fs:searchOnLoad", true) ) {
      return self.search()
        .then(renderResult)
        .then(clearSelected)
        .then(function () {
          if ( location.hash.indexOf(individual.id) >= 0 ) {
            scrollTo(self.scroll);
          }
        });
    // Show results on load if they are available (e.g. if we came back)
    } else if ( self.hasValue("v-fs:searchResult") ) {
      return renderResult( self["v-fs:searchResult"] )
        .then(function () {
          if ( location.hash.indexOf(individual.id) >= 0 ) {
            scrollTo(self.scroll);
          }
        });
    }
  });

  //# sourceURL=v-fs:AttributiveSearchInlineTemplate_post
</script>
  """ ;
.

### INDIVIDUALS ###

v-fs:MultiFunctionalSearch
  rdf:type rdfs:Resource ;
  rdfs:label "Поиск документов "@ru ;
  rdfs:label "Documents search"@en ;
  v-ui:hasTemplate v-fs:MultiFunctionalSearchTemplate ;
.

v-fs:MultiFunctionalSearchTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Многофункциональные шаблон для поиска документов"@ru ;
  rdfs:label "MultiFunctional documents search template"@en ;
  v-ui:template """
<script>
  var loadIndicator = $("#load-indicator");

  var tabs = $("#box-tabs li[data-search]", template);
  tabs.click(function(e){
    e.preventDefault();
    loadIndicator.show();

    var self = $(this);
    tabs.removeClass("active");
    self.addClass("active");
    individual["activeTab"] = self.data("search");
    $(".tabContainer", template).empty();

    var targetIndidivUri = self.find("a").attr("about");
    var targetIndidiv = new veda.IndividualModel(targetIndidivUri);
    targetIndidiv
      .present($(".tabContainer", template), new veda.IndividualModel("v-fs:AttributiveSearchTemplate"))
      .then(function(){
        loadIndicator.hide();
      });
  });

  if (!individual["activeTab"]) {
    individual["activeTab"] = "fullText";
  }
  $("#box-tabs li[data-search='"+individual["activeTab"]+"']", template).click();

  //# sourceURL=v-s:MultiFunctionalSearchTemplate_pre
</script>
<div class="container sheet">
  <br>
  <ul id="box-tabs" class="nav nav-tabs nav-right" role="tablist">
    <li class="pull-left"><h2 id="currentTab" class="no-margin" about="@" property="rdfs:label"></h2></li>
    <li data-search="fullText" role="presentation" class="active"><a href="#" about="v-fs:FulltextSearch" property="rdfs:label"></a></li>
    <li data-search="advanced" role="presentation"><a href="#" about="v-fs:AdvancedSearch" property="rdfs:label"></a></li>
    <li data-search="my" role="presentation"><a href="#" about="v-fs:DocumentsSearch" property="rdfs:label"></a></li>
  </ul>
  <br>
  <div class="tabContainer"></div>
</div>
"""
.

v-fs:DocumentsSearch
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Мои"@ru ;
  rdfs:label "My"@en ;
  v-fs:searchBlank v-fs:DocumentsBlank ;
  v-fs:searchBlankTemplate v-fs:DocumentsSearchBlankTemplate ;
  v-fs:searchResultTemplate v-fs:FulltextResultTemplate ;
  v-fs:sortOrder "'v-s:created' desc" ;
  v-fs:searchOnLoad true ;
  v-fs:fulltextQuery "('v-s:creator'==='{veda.appointment.id}')" ;
  v-fs:applicableOperation v-ft:SendToIntroductionOperation ;
.

v-fs:DocumentsBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Мои документы"@ru ;
  rdfs:label "My documents"@en ;
  v-fc:targetType v-s:UserSearchableDocument ;
.

v-fs:DocumentsSearchBlankTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон бланка поиска Мои документы"@ru ;
  rdfs:label "My documents search blank template"@en ;
  v-ui:template """
<div>
  <div class="row">
    <div class="col-md-4">
      <em about="v-fs:SearchForContentBundle" property="rdfs:label"></em>
      <veda-control property="rdfs:label" data-type="string" placeholder="Введите запрос"></veda-control>
    </div>
    <div class="col-md-4">
      <em about="v-fs:requiredClass" property="rdfs:label"></em>
      <div rel="v-fs:requiredClass" data-template="v-ui:LabelTemplate"></div>
      <veda-control rel="v-fs:requiredClass" data-type="link" class="fulltext dropdown" data-query-prefix="'rdfs:subClassOf'==='v-s:UserSearchableDocument'"></veda-control>
    </div>
    <div class="col-md-4">
      <em about="v-s:created" property="rdfs:label"></em>
      <div property="v-s:created"></div>
      <veda-control data-type="date" property="v-s:created"></veda-control>
    </div>
  </div>
</div>
<script>
  function searchHandler() {
    var queryString = null;
    if (individual.hasValue("rdfs:label")) {
      queryString = "('*'=='"+individual["rdfs:label"][0]+"')";
    }
    if (individual.hasValue("v-s:created")) {
      var dates = individual["v-s:created"];
      var start = new Date(dates[0]);
      var end = new Date(dates[dates.length-1]);
      start.setHours(0,0,0,0);
      end.setHours(23,59,59,999);
      var createdPart = "('v-s:created'==[" + start.toISOString() + "," + end.toISOString() + "])";

      queryString = queryString == null? createdPart : queryString + " && " + createdPart;
    }

    if (individual.hasValue("v-fs:requiredClass")) {
      var typePart = individual["v-fs:requiredClass"].map(function(type){
        return "('rdf:type'==='" + type.id + "')";
      }).join(" || ");
      typePart = "(" + typePart + ")";

      queryString = queryString == null? typePart : queryString + " && " + typePart;
    } else if (queryString != null) {
      queryString = queryString + " && ('rdf:type'=='v-s:Document')";
    }

    if (queryString != null) {
      individual.set("*", [queryString]);
    } else {
      delete individual.properties["*"];
    }
  }

  individual.on("rdfs:label v-fs:requiredClass v-s:created", searchHandler);
  template.one("remove", function(){
    individual.off("rdfs:label v-fs:requiredClass v-s:created", searchHandler);
  });
  //# sourceURL=v-fs:DocumentsSearchBlankTemplate_post
</script>
  """ ;
.

v-fs:AdvancedSearch
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Реестр"@ru ;
  rdfs:label "Registry"@en ;
  v-fs:searchBlank v-fs:AdvancedSearchBlank ;
  v-fs:searchBlankTemplate v-fs:AdvancedSearchTemplate ;
  v-fs:searchResultTemplate v-fs:FulltextResultTemplate ;
.

v-fs:AdvancedSearchBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Бланк расширенного поиска"@ru ;
  rdfs:label "Advanced search blank"@en ;
  v-fc:targetType v-s:Document ;
.

v-fs:AdvancedSearchTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон бланка полнотекстового поиска"@ru ;
  rdfs:label "Fulltext search blank template"@en ;
  v-ui:template """
<div>
  <div class="row">
    <div class="col-md-3">
      <em about="v-fs:SearchForContentBundle" property="rdfs:label"></em>
      <veda-control property="rdfs:label" data-type="string" placeholder="Введите запрос"></veda-control>
    </div>
    <div class="col-md-3">
      <em about="v-fs:requiredClass" property="rdfs:label"></em>
      <div rel="v-fs:requiredClass" data-template="v-ui:LabelTemplate"></div>
      <veda-control rel="v-fs:requiredClass" data-type="link" class="fulltext dropdown" data-query-prefix="'rdfs:subClassOf'==='v-s:UserSearchableDocument'"></veda-control>
    </div>
    <div class="col-md-3">
      <em about="v-s:created" property="rdfs:label"></em>
      <div property="v-s:created"></div>
      <veda-control data-type="date" property="v-s:created"></veda-control>
    </div>
    <div class="col-md-3">
      <em about="v-s:creator" property="rdfs:label"></em>
      <div property="v-s:creator"></div>
      <veda-control data-type="link" class="fulltext" property="v-s:creator"></veda-control>
    </div>
  </div>
</div>
<script>
  var find = container.siblings(".search-actions").find("#search-button.search-button");

  function searchHandler() {
    var queryString = null;
    if (individual.hasValue("rdfs:label")) {
      queryString = "('*'=='"+individual["rdfs:label"][0]+"')";
    }
    if (individual.hasValue("v-s:created")) {
      var dates = individual["v-s:created"];
      var start = new Date(dates[0]);
      var end = new Date(dates[dates.length-1]);
      start.setHours(0,0,0,0);
      end.setHours(23,59,59,999);
      var createdPart = "('v-s:created'==[" + start.toISOString() + "," + end.toISOString() + "])";

      queryString = queryString == null? createdPart : queryString + " && " + createdPart;
    }
    if (individual.hasValue("v-s:creator")) {
      var creatorPart = individual["v-s:creator"].map(function(creator) {
        return "('v-s:creator'=='" +  creator.id + "')";
      }).join(" || ");
      creatorPart = "(" + creatorPart + ")";

      queryString = queryString == null? creatorPart : queryString + " && " + creatorPart;
    }

    if (individual.hasValue("v-fs:requiredClass")) {
      var typePart = individual["v-fs:requiredClass"].map(function(type){
        return "('rdf:type'==='" + type.id + "')";
      }).join(" || ");
      typePart = "(" + typePart + ")";

      queryString = queryString == null? typePart : queryString + " && " + typePart;
    } else if (queryString != null) {
      queryString = queryString + " && ('rdf:type'=='v-s:Document')";
    }

    if (queryString != null) {
      individual.set("*", [queryString]);
      find.removeAttr("disabled");
    } else {
      find.attr("disabled", "disabled");
      delete individual.properties["*"];

    }
  }
  searchHandler();

  individual.on("rdfs:label v-fs:requiredClass v-s:created v-s:creator", searchHandler);
  template.one("remove", function(){
    individual.off("rdfs:label v-fs:requiredClass v-s:created v-s:creator", searchHandler);
  });
  //# sourceURL=v-fs:AdvancedSearchTemplate_post
</script>
  """ ;
.

v-fs:FulltextSearch
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Полнотекстовый поиск"@ru ;
  rdfs:label "Fulltext search"@en ;
  v-fs:searchBlank v-fs:FulltextBlank ;
  v-fs:searchBlankTemplate v-fs:FulltextBlankTemplate ;
  v-fs:searchResultTemplate v-fs:FulltextResultTemplate ;
.

v-fs:FulltextBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Тестовый бланк"@ru ;
  rdfs:label "Test blank"@en ;
  v-fc:targetType v-s:Document ;
.

v-fs:FulltextBlankTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон бланка полнотекстового поиска"@ru ;
  rdfs:label "Fulltext search blank template"@en ;
  v-ui:template """
<div>
  <style>
    .input-group input {
      border-top-left-radius: 4px!important;
      border-bottom-left-radius: 4px!important;
    }
  </style>
  <em about="v-fs:SearchForContentBundle" property="rdfs:label"></em>
  <div class="input-group">
    <veda-control property="*" data-type="string" placeholder="Введите запрос"></veda-control>
    <span class="input-group-btn">
      <button class="btn btn-primary search-button" id="custom-search-button" type="button" about="v-fs:Find" property="rdfs:label"></button>
    </span>
  </div>
</div>
<script>
  var find = container.siblings(".search-actions").find("#search-button.search-button");
  var customFind = $("#custom-search-button.search-button", template);
  customFind.click(function () {
    find.click();
  });

  $("input", template).keydown(function (e) {
    if (e.which === 13 && this.value) {
      var value = this.value;
      individual.set("*", [value]);
      find.click();
    }
  });
  function propertyModifiedHandler() {
    if (individual.hasValue("*")) {
      customFind.removeAttr("disabled", "disabled");
      find.removeAttr("disabled", "disabled");
    } else {
      customFind.attr("disabled", "disabled");
      find.attr("disabled", "disabled");
    }
  }
  propertyModifiedHandler();
  individual.on("propertyModified", propertyModifiedHandler);
  template.one("remove", function(){
    individual.off("propertyModified", propertyModifiedHandler);
  });
  //# sourceURL=v-fs:FulltextBlankTemplate_post
</script>
  """ ;
.

v-fs:FulltextResultTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон отображения результатов полнотекстового поиска"@ru ;
  rdfs:label "Fulltext search result template"@en ;
  v-ui:template """
<table class="table table-bordered table-condensed">
  <thead class="result-header">
    <tr>
      <th width="1%"><input type="checkbox" class="toggle-select-all"></th>
      <th width="1%">#</th>
      <th width="1%"><span class="glyphicon glyphicon-search"></span></th>
      <th width="1%"><span about="rdf:type" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="rdfs:label"><span about="rdfs:label" property="rdfs:label"></span></th>
      <th width="15%" class="orderby" data-orderby="v-s:created"><span about="v-s:created" property="rdfs:label"></span></th>
      <th width="10%"><span about="v-s:creator" property="rdfs:label"></span></th>
      <th width="10%"><span about="v-s:attachment" property="rdfs:label"></span></th>
    </tr>
  </thead>
  <tbody class="result-container">
    <tr>
      <td><input type="checkbox" class="toggle-select"></td>
      <td class="serial-number"></td>
      <td about="@"><a href="#/@" class="glyphicon glyphicon-search"></a></td>
      <td about="@" rel="rdf:type" data-template="v-ui:LabelTemplate"></td>
      <td about="@" property="rdfs:label"></td>
      <td about="@" property="v-s:created"></td>
      <td about="@" rel="v-s:creator" data-template="v-ui:LabelTemplate"></td>
      <td about="@" rel="v-s:attachment" data-template="v-ui:FileMinTemplate"></td>
    </tr>
  </tbody>
</table>
  """ ;
.

v-fs:MinimalSearch
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Минимальный поиск"@ru ;
  rdfs:label "Minimal search"@en ;
  v-fs:searchBlank v-fs:MinimalSearchBlank ;
  v-fs:searchOnLoad true ;
  v-fs:loadAll true ;
.

v-fs:MinimalSearchBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Тестовый бланк"@ru ;
  rdfs:label "Test blank"@en ;
  v-fc:targetType rdf:Property ;
.

v-fs:MinimalSearchBlankTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Минимальный шаблон бланка поиска"@ru ;
  rdfs:label "Minimal search blank template"@en ;
  v-ui:template """
<div>
  <veda-control property="*" data-type="string"></veda-control>
</div>
<script>
  $("input", template).keydown(function (e) {
    if (e.which === 13) {
      var value = this.value;
      individual.set("*", [value]);
      container.siblings(".search-button").click();
    }
  });
  //# sourceURL=v-ui:MinimalSearchBlankTemplate_post
</script>
  """ ;
.

v-fs:MinimalSearchResultTemplate
  rdf:type v-ui:ClassTemplate ;
  v-ui:forClass v-fs:AttributiveSearch ;
  rdfs:label "Шаблон отображения результатов минимального поиска"@ru ;
  rdfs:label "Minimal search result template"@en ;
  v-ui:template """
<table class="table table-condensed table-striped">
  <thead class="result-header">
    <tr>
      <th width="1%">#</th>
      <th width="1%"><span class="glyphicon glyphicon-search"></span></th>
      <th>@</th>
      <th class="orderby" data-orderby="rdfs:label"><span about="rdfs:label" property="rdfs:label"></span></th>
    </tr>
  </thead>
  <tbody class="result-container">
    <tr>
      <td class="serial-number"></td>
      <td about="@" data-template="v-ui:IconModalTemplate"></td>
      <td property="@"></td>
      <td about="@" property="rdfs:label"></td>
    </tr>
  </tbody>
</table>
  """ ;
.

#################### Operation ######################

v-ft:SendToIntroductionOperation
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:Operation ;
  rdfs:label "Послать на ознакомление"@ru ;
  rdfs:label "Send to introduction"@en ;
  v-ui:hasModel v-ft:MakeDecisionOperationModel ;
  v-ui:hasTemplate v-ft:SendToIntroductionOperationTemplate ;
.

v-ft:SendToIntroductionOperationRights
  rdf:type v-s:PermissionStatement ;
  v-s:permissionObject v-ft:SendToIntroductionOperation ;
  v-s:permissionSubject cfg:AllUsersGroup ;
  v-s:canCreate true ;
.
v-ft:SendToIntroductionOperationModel
  rdf:type v-ui:ClassModel ;
  rdfs:label "Модель операции 'Групповое выполнение задач'"@ru ;
  rdfs:label "'Group complete operation' operation model"@en ;
  v-s:script """
this.fn = function (task_uri) {
  var group_decision_uri = veda.Util.getUri(this["v-wf:takenDecision"]);
  var group_decision = get_individual(veda.ticket, group_decision_uri);

  var task = get_individual(veda.ticket, task_uri);
  if ( veda.Util.hasValue(this, "v-wf:takenDecision") ) {
    task["v-wf:takenDecision"] = this["v-ft:groupDecision"];
    put_individual(veda.ticket, task);
  }
};
  """ ;
.

v-s:TS_SendToIntroductionOperation
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-ft:SendToIntroductionOperationTemplate;
  v-ui:forClass v-ft:SendToIntroductionOperation
.
v-ft:SendToIntroductionOperationTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для класса v-ft:SendToIntroductionOperation"@ru ;
  rdfs:label "Template for v-ft:SendToIntroductionOperation class"@en ;
  v-ui:template """
<div class="container sheet">
  <div class="groupStartForm"></div>
</div>
<script>
  var startFormContainer = $(".groupStartForm", template);
  startFormContainer.empty();

  var startForm = new veda.IndividualModel();
  startForm["rdf:type"] = [new veda.IndividualModel("v-df:TaskRouteStartForm")];
  startForm["v-wf:forNet"] = [new veda.IndividualModel("s-wf:WrapUniversalNet")];
  startForm["v-wf:useTransformation"] = [new veda.IndividualModel("v-df:TaskRouteStartFormToNet")];
  startForm["v-wf:StartForm_setStatus"] = [true];
  startForm["v-wf:StartForm_canEdit"] = [false];
  return startForm.present(startFormContainer, "v-df:TaskRouteStartFormTemplate", "edit").then(function(startFormTemplate) {
    $(".action#send", startFormTemplate).off("click").click(function(){
      var savingPromises = individual["v-s:data"].map(function(doc) {
        startForm.clone().then(function(clonedStartForm){
          clonedStartForm["v-wf:hasStatusWorkflow"] = [new veda.IndividualModel("v-wf:ToBeSent")];
          clonedStartForm["v-wf:processedDocument"] = [doc];
          return clonedStartForm.save();
        })
      });
      return Promise.all(savingPromises).then(function () {
        var successMsg = new veda.IndividualModel("v-s:SuccessBundle").load();
        return successMsg.then(function (successMsg) {
          var notify = veda.Notify ? new veda.Notify() : function () {};
          notify("success", {name: successMsg});
        });
      }).catch(function (error) {
        console.log(error);
        var errorMsg = new veda.IndividualModel("v-s:ErrorBundle").load();
        return errorMsg.then(function (errorMsg) {
          var notify = veda.Notify ? new veda.Notify() : function () {};
          notify("danger", {name: errorMsg});
        });
      }).then(function () {
        startFormContainer.closest(".modal").modal("hide");
        var documentsSearch = new veda.IndividualModel("v-s:DocumentsSearch");
        documentsSearch.clearValue("v-fs:selected");
      });
    })
  });
  //# sourceURL=v-ft:SendToIntroductionOperationTemplate_post
</script>
  """ ;
.

# ------------------------------------------------------------ УПРАВЛЕНИЕ ПРАВАМИ --

v-fs:AttributiveSearch_permission1
  rdf:type v-s:PermissionStatement ;
  v-s:permissionObject v-fs:AttributiveSearch ;
  v-s:permissionSubject cfg:AllUsersGroup ;
  v-s:canCreate "true"^^xsd:boolean ;
  rdfs:label "C. Все пользователи. Класс v-fs:AttributiveSearch" ;
.
v-fs:AttributiveSearch_permission2
  rdf:type v-s:PermissionStatement ;
  v-s:permissionObject v-fs:PersonalSearch ;
  v-s:permissionSubject cfg:AllUsersGroup ;
  v-s:canCreate "true"^^xsd:boolean ;
  rdfs:label "C. Все пользователи. Класс v-fs:PersonalSearch" ;
.
