@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix v-s: <http://semantic-machines.com/veda/veda-schema/> .
@prefix v-ui: <http://semantic-machines.com/veda/veda-ui/> .
@prefix v-fs: <http://semantic-machines.com/veda/veda-function-search/> .
@prefix v-fc: <http://semantic-machines.com/veda/veda-function-create/> .
@prefix v-wf: <http://semantic-machines.com/veda/veda-workflow/> .
@prefix vdi: <http://semantic-machines.com/veda/veda-index/> .
@prefix cfg: <http://semantic-machines.com/veda/config/> .
@prefix bpmn: <http://semantic-machines.com/veda/veda-bpmn/> .

@prefix v-ft: <http://semantic-machines.com/veda/veda-function-tasks/> .
<http://semantic-machines.com/veda/veda-function-tasks>
  rdf:type owl:Ontology ;
  rdfs:label "Онтология функции 'Задачи' системы Веда"@ru ;
  rdfs:label "Veda system function 'Tasks' ontology"@en ;
#  owl:versionInfo "0.1" ;
  v-s:loadPriority 9 ;
.
########## BUNDLE ###########
v-s:TaskBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Задачи"@ru ;
  rdfs:label "Tasks"@en ;
.

v-ft:ToJournalBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Перейти к журналу"@ru ;
  rdfs:label "To journal"@en ;
.
########## TASKS INDEX ###########

v-ft:UserTaskFormIndex_1
  rdf:type vdi:ClassIndex ;
  vdi:forClass v-wf:DecisionForm ;
  vdi:forProperty v-wf:to ;
  vdi:forProperty v-wf:from ;
  vdi:forProperty v-wf:onDocument ;
  vdi:inherited_index v-ft:UserTaskFormIndex_1_1 ;
.
v-ft:UserTaskFormIndex_1_1
  rdf:type vdi:ClassIndex ;
  vdi:indexed_field rdf:type ;
  vdi:indexed_field rdfs:label ;
  vdi:indexed_field v-s:occupation ;
  vdi:indexed_field v-s:employee ;
.
v-ft:UserTaskFormIndex_2
  rdf:type vdi:ClassIndex ;
  vdi:forClass v-wf:DecisionForm ;
  vdi:forProperty v-wf:takenDecision ;
  vdi:inherited_index v-ft:UserTaskFormIndex_2_1 ;
.
v-ft:UserTaskFormIndex_2_1
  rdf:type vdi:ClassIndex ;
  vdi:indexed_field v-s:created ;
.
########## TASKS COUNTERS ###########

v-ft:TaskCounter
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:SystemThing ;
  rdfs:label "Счетчик задач"@ru ;
  rdfs:label "Task counter"@en ;
  v-ui:hasModel v-ft:TaskCounterModel;
.
v-ft:forceUpdate
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ft:TaskCounter ;
  rdfs:range xsd:boolean ;
  rdfs:label "обновить принудительно"@ru ;
  rdfs:label "force update"@en ;
.
v-ft:inboxCount
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ft:TaskCounter ;
  rdfs:range xsd:integer ;
  rdfs:label "количество входящих"@ru ;
  rdfs:label "inbox сount"@en ;
.
v-ft:inboxWeekCount
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ft:TaskCounter ;
  rdfs:range xsd:integer ;
  rdfs:label "количество входящих на текущую неделю"@ru ;
  rdfs:label "inbox сount for current week"@en ;
.
v-ft:outboxCount
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ft:TaskCounter ;
  rdfs:range xsd:integer ;
  rdfs:label "количество исходящих"@ru ;
  rdfs:label "outbox сount"@en ;
.
v-ft:completedCount
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ft:TaskCounter ;
  rdfs:range xsd:integer ;
  rdfs:label "количество выполненных"@ru ;
  rdfs:label "completed сount"@en ;
.

v-ft:Event_UpdateTaskCounter
  rdf:type v-s:Event ;
  v-s:author cfg:VedaSystemAppointment ;
  rdfs:label "Скрипт обновления счетчиков задач" ;
  v-s:triggerByType v-wf:DecisionForm ;
  v-s:runAt "V8.LowPriority" ;
  v-s:deleted true ;
  v-s:disabled true ;
  v-s:script """
/* Available variables:
 * ticket = superuser ticket
 * document = captured document
 * user_uri = user whose actions triggered event
 * prev_state = previous state of the captured document
 * _event_id = id of the event to prevent cycles in triggers. Must be passed to every function that modifies DB.
 * parent_script_id = id of the parent script that triggered this event.
 * parent_document_id = id of the document that triggered this event.
 * super_classes = super classes of the document.
 */

// Update task counter on task
var task = document,
    task_uri = document["@"],
    to_uris = task["v-wf:to"] && task["v-wf:to"].map(function (to) {return to.data}),
    from_uris = task["v-wf:from"] && task["v-wf:from"].map(function (from) {return from.data}),
    isNew = !prev_state,
    isCompleted = !isNew && !veda.Util.hasValue(prev_state, "v-wf:isCompleted", {type: "Boolean", data: true}) && veda.Util.hasValue(task, "v-wf:isCompleted", {type: "Boolean", data: true}),
    isDeleted = !isNew && !veda.Util.hasValue(prev_state, "v-s:deleted", {type: "Boolean", data: true}) && veda.Util.hasValue(task, "v-s:deleted", {type: "Boolean", data: true});

// print("************************** START **************************");

if ( !isNew && !isDeleted && !isCompleted ) { return; }

var today = new Date(),
    monday = getMonday(today),
    sunday = getSunday(today);
var isThisWeekTask = veda.Util.hasValue(task, "v-wf:dateGiven") && (monday < task["v-wf:dateGiven"][0].data && task["v-wf:dateGiven"][0].data < sunday);

// print("task =", task_uri, "| from =", from_uris, "| to =", to_uris, "| isNew =", isNew, "| isDeleted =", isDeleted, "| isCompleted =", isCompleted, "| isThisWeekTask =", isThisWeekTask);

to_uris && to_uris.map(function (to_uri) {
  // get or create task counter
  var toCounter_uri = "d:taskCounter_" + to_uri.split(':').join('_');
  var toCounter = get_individual(ticket, toCounter_uri) || createTaskCounter(to_uri);

  if ( veda.Util.hasValue(toCounter, "rdf:type", { type: "Uri", data: "rdfs:Resource"} ) ) {
    toCounter["rdf:type"] = [{ type: "Uri", data: "v-ft:TaskCounter" }];
  }

  var toInboxCount = toCounter["v-ft:inboxCount"] ? toCounter["v-ft:inboxCount"][0] : toCounter["v-ft:inboxCount"] = [{ type: "Integer", data: 0 }],
      toInboxWeekCount = toCounter["v-ft:inboxWeekCount"] ? toCounter["v-ft:inboxWeekCount"][0] : toCounter["v-ft:inboxWeekCount"] = [{ type: "Integer", data: 0 }],
      toOutboxCount = toCounter["v-ft:outboxCount"] ? toCounter["v-ft:outboxCount"][0] : toCounter["v-ft:outboxCount"] = [{ type: "Integer", data: 0 }],
      toCompletedCount = toCounter["v-ft:completedCount"] ? toCounter["v-ft:completedCount"][0] : toCounter["v-ft:completedCount"] = [{ type: "Integer", data: 0 }];

  switch (true) {
    case isNew:
      toInboxCount.data++;
      if (isThisWeekTask) {
        toInboxWeekCount.data++;
      }
      break;
    case isCompleted:
      toInboxCount.data--;
      toCompletedCount.data++;
      if (isThisWeekTask) {
        toInboxWeekCount.data--;
      }
      break;
    case isDeleted:
      toInboxCount.data--;
      if (isThisWeekTask) {
        toInboxWeekCount.data--;
      }
      break;
  }
  put_individual(ticket, toCounter, _event_id);
//  print("toCounter updated =", JSON.stringify(toCounter));
});

from_uris && from_uris.map(function (from_uri) {
  // get or create task counter
  var fromCounter_uri = "d:taskCounter_" + from_uri.split(':').join('_');
  var fromCounter = get_individual(ticket, fromCounter_uri) || createTaskCounter(from_uri);

  if ( veda.Util.hasValue(fromCounter, "rdf:type", { type: "Uri", data: "rdfs:Resource"} ) ) {
    fromCounter["rdf:type"] = [{ type: "Uri", data: "v-ft:TaskCounter" }];
  }

  var fromInboxCount = fromCounter["v-ft:inboxCount"] ? fromCounter["v-ft:inboxCount"][0] : fromCounter["v-ft:inboxCount"] = [{ type: "Integer", data: 0 }],
      fromOutboxCount = fromCounter["v-ft:outboxCount"] ? fromCounter["v-ft:outboxCount"][0] : fromCounter["v-ft:outboxCount"] = [{ type: "Integer", data: 0 }],
      fromCompletedCount = fromCounter["v-ft:completedCount"] ? fromCounter["v-ft:completedCount"][0] : fromCounter["v-ft:completedCount"] = [{ type: "Integer", data: 0 }];

  switch (true) {
    case isNew:
      fromOutboxCount.data++;
      break;
    case isCompleted:
      fromOutboxCount.data--;
      break;
    case isDeleted:
      fromOutboxCount.data--;
      break;
  }
  put_individual(ticket, fromCounter, _event_id);
//  print("fromCounter updated =", JSON.stringify(fromCounter));
});

//print("************************** END **************************");

function getMonday(date) {
  var monday = new Date(date);
  var day = monday.getDay();
  var diff = monday.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday
  monday.setDate(diff); monday.setHours(0); monday.setMinutes(0); monday.setSeconds(0); monday.setMilliseconds(0);
  return monday;
}
function getSunday(date) {
  var monday = getMonday(date);
  return new Date(monday.valueOf() + 604799999);
}

function createTaskCounter(owner) {
  var uri = "d:taskCounter_" + owner.split(':').join('_'),
      inbox = query(ticket, "('rdf:type' == 'v-wf:DecisionForm' && 'v-wf:isCompleted' == false && 'v-wf:to' == '" + owner + "')").result,
      inboxCount = inbox[0] ? inbox.length : 0,
      outbox = query(ticket, "('rdf:type' == 'v-wf:DecisionForm' && 'v-wf:isCompleted' == false && 'v-wf:from' == '" + owner + "')").result,
      outboxCount = outbox[0] ? outbox.length : 0,
      completed = query(ticket, "('rdf:type' == 'v-wf:DecisionForm' && 'v-wf:isCompleted' == true && 'v-wf:to' == '" + owner + "')").result,
      completedCount = completed[0] ? completed.length : 0;

  var today = new Date(),
      monday = getMonday(today),
      sunday = getSunday(today);

  var inboxWeek = query(ticket, "('rdf:type' == 'v-wf:DecisionForm' && 'v-wf:isCompleted' == false && 'v-wf:to' == '" + owner + "' && 'v-wf:dateGiven' == [" + monday.toISOString() +  "," + sunday.toISOString() + "])").result,
      inboxWeekCount = inboxWeek[0] ? inboxWeek.length : 0;

  var taskCounter = {
    "@": uri,
    "rdf:type": veda.Util.newUri("v-ft:TaskCounter"),
    "v-s:owner": veda.Util.newUri(owner),
    "v-s:created": veda.Util.newDate(today),
    "v-ft:inboxCount": veda.Util.newInt(inboxCount),
    "v-ft:inboxWeekCount": veda.Util.newInt(inboxWeekCount),
    "v-ft:outboxCount": veda.Util.newInt(outboxCount),
    "v-ft:completedCount": veda.Util.newInt(completedCount),
    "rdfs:label": veda.Util.newStr("создано автоматически в обработчике v-ft:Event_UpdateTaskCounter")
  };
  /*if (inboxCount + outboxCount + completedCount + inboxWeekCount) {
    print(
      "Created counter:", uri,
      "| inboxCount =", inboxCount,
      "| outboxCount =", outboxCount,
      "| completedCount =", completedCount,
      "| inboxWeekCount =", inboxWeekCount
    );
  }*/
  put_individual(ticket, taskCounter, _event_id);
  return taskCounter;
}
  """ ;
.

v-ft:FunctionTasksIndicatorTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон индикатора для v-ft:FunctionInbox"@ru ;
  rdfs:label "V-ft:FunctionInbox indicator template"@en ;
  v-ui:template """
<script>
  /*var counter_uri = "d:taskCounter_" + veda.user.id.split(":").join("_");
  $("#counter", template).attr("about", counter_uri);*/
  return new veda.IndividualModel("v-s:TaskBundle").load().then(function(taskBundle) {
    template.tooltip({
      container: template,
      placement: "bottom",
      trigger: "hover",
      title: taskBundle["rdfs:label"].map(veda.Util.formatValue).join(" ")
    });
  })
  //# sourceURL=v-ft:FunctionTasksIndicatorTemplate_pre
</script>
<a href="#/@" data-toggle="tooltip" data-trigger="hover" data-placement="bottom">
  <span class="fa fa-envelope-o fa-lg"></span>
  <!--span id="counter" class="label label-danger" property="v-ft:inboxCount"></span-->
</a>
  """ ;
.

v-s:TS_TaskCounter
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-ft:TaskCounterTemplate;
  v-ui:forClass v-ft:TaskCounter
.
v-ft:TaskCounterTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон индикатора для v-ft:FunctionInbox"@ru ;
  rdfs:label "V-ft:FunctionInbox indicator template"@en ;
  v-ui:forClass v-ft:TaskCounter;
  v-ui:template """
<div class="container sheet">
  <h2 about="@" rel="rdf:type" data-template="v-ui:LabelTemplate"></h2>
  <em about="v-s:owner" property="rdfs:label"></em>
  <div rel="v-s:owner" data-template="v-ui:LabelLinkTemplate"></div>
  <table class="table table-condensed table-bordered table-striped">
    <thead>
      <tr>
        <th about="v-ft:inboxCount" property="rdfs:label"></th>
        <th about="v-ft:completedCount" property="rdfs:label"></th>
        <th about="v-ft:outboxCount" property="rdfs:label"></th>
        <th about="v-ft:inboxWeekCount" property="rdfs:label"></th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td property="v-ft:inboxCount"></td>
        <td property="v-ft:completedCount"></td>
        <td property="v-ft:outboxCount"></td>
        <td property="v-ft:inboxWeekCount"></td>
      </tr>
    </tbody>
  </table>
</div>
  """ ;
.

v-ft:TaskCounterModel
  rdf:type v-ui:ClassModel ;
  rdfs:label "Модель v-ft:TaskCounter"@ru ;
  rdfs:label "v-ft:TaskCounter model"@en ;
  v-s:script """
// Force update outdated counter
/*function getMonday(date) {
  var monday = new Date(date);
  var day = monday.getDay();
  var diff = monday.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday
  monday.setDate(diff); monday.setHours(0); monday.setMinutes(0); monday.setSeconds(0); monday.setMilliseconds(0);
  return monday;
}
var monday = getMonday(new Date());
var created = this["v-s:created"] && this["v-s:created"][0];
var forceUpdate = !created || created < monday;
if ( forceUpdate ) {
  this["v-ft:forceUpdate"] = [true];
  this.save();
}*/
//# sourceURL=v-ft:TaskCounterModel
  """ ;
.

########## TASKS AS ATTRIBUTIVE SEARCH IMPELMENTATION ###########

v-ft:PSfrom_to_DecisionForm
  rdf:type v-ui:ObjectPropertySpecification ;
  rdfs:label "Спецификация свойств v-wf:to v-wf:from для класса v-wf:DecisionForm"@ru ;
  rdfs:label "v-wf:to v-wf:from properties specification for v-wf:DecisionForm class"@en ;
  v-ui:forClass v-wf:DecisionForm ;
  v-ui:forProperty v-wf:to ;
  v-ui:forProperty v-wf:from ;
  v-ui:maxCardinality 1 ;
  v-ui:queryPrefix "('rdf:type'=='v-s:Appointment' && 'v-s:official'=='true' && 'v-s:employee.v-s:hasAccount.isExists'=='true')" ;
.

v-ft:Inbox
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Входящие задачи"@ru ;
  rdfs:label "Inbox tasks"@en ;
  v-fs:searchBlank v-ft:InboxBlank ;
  v-fs:searchBlankTemplate v-ft:TaskBlankTemplate ;
  v-fs:searchResultTemplate v-ft:InboxResultTemplate ;
  v-fs:sortOrder "'v-s:created' desc" ;
  v-ui:hasTemplate v-ft:InboxTemplate ;
  v-fs:applicableOperation v-ft:MakeDecisionOperation ;
  v-fs:queryBuilder "veda.Util.queryInbox" ;
  v-fs:searchOnLoad true ;
.
v-ft:InboxBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Бланк входящих задач"@ru ;
  rdfs:label "Blank inbox task"@en ;
  v-fc:targetType v-wf:DecisionForm ;
  v-fc:targetType bpmn:DecisionForm ;
  v-wf:onDocument v-ft:InboxDocumentBlank ;
  v-wf:takenDecision v-ft:InboxDecisionBlank ;
  v-wf:isCompleted false ;
.
v-ft:InboxDocumentBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Бланк документа по входящей задаче"@ru ;
  rdfs:label "Inbox task document blank "@en ;
.
v-ft:InboxDecisionBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Бланк решения по входящей задаче"@ru ;
  rdfs:label "Inbox task decision blank "@en ;
.

v-ft:Outbox
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Исходящие задачи"@ru ;
  rdfs:label "Outbox tasks"@en ;
  v-fs:searchBlank v-ft:OutboxBlank ;
  v-fs:searchBlankTemplate v-ft:TaskBlankTemplate ;
  v-fs:searchResultTemplate v-ft:TaskResultTemplate ;
  v-fs:sortOrder "'v-s:created' desc"^^xsd:string ;
  v-ui:hasTemplate v-ft:InboxTemplate ;
  v-fs:queryBuilder "veda.Util.queryInbox" ;
  v-fs:searchOnLoad true ;
.
v-ft:OutboxBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Бланк исходящих задач"@ru ;
  rdfs:label "Blank outbox task"@en ;
  v-fc:targetType v-wf:DecisionForm ;
  v-fc:targetType bpmn:DecisionForm ;
  v-wf:onDocument v-ft:OutboxDocumentBlank ;
  v-wf:takenDecision v-ft:OutboxDecisionBlank ;
  v-wf:isCompleted false ;
.
v-ft:OutboxDocumentBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Бланк документа по исходящей задаче"@ru ;
  rdfs:label "Outbox task document blank "@en ;
.
v-ft:OutboxDecisionBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Бланк решения по исходящей задаче"@ru ;
  rdfs:label "Outbox task decision blank "@en ;
.

v-ft:Completed
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Выполненные входящие"@ru ;
  rdfs:label "Completed inbox"@en ;
  v-fs:searchBlank v-ft:CompletedBlank ;
  v-fs:searchBlankTemplate v-ft:TaskBlankTemplate ;
  v-fs:searchResultTemplate v-ft:CompletedResultTemplate ;
  v-fs:sortOrder "'v-s:created' desc"^^xsd:string ;
  v-ui:hasTemplate v-ft:InboxTemplate ;
  v-fs:queryBuilder "veda.Util.queryInbox" ;
  v-fs:searchOnLoad true ;
.
v-ft:CompletedBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Бланк выполненных задач"@ru ;
  rdfs:label "Blank completed task"@en ;
  v-fc:targetType v-wf:DecisionForm ;
  v-fc:targetType bpmn:DecisionForm ;
  v-wf:onDocument v-ft:CompletedDocumentBlank ;
  v-wf:takenDecision v-ft:CompletedDecisionBlank ;
  v-wf:isCompleted true ;
.
v-ft:CompletedDocumentBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Бланк документа по выполненной задаче"@ru ;
  rdfs:label "Completed task document blank "@en ;
.
v-ft:CompletedDecisionBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Бланк решения по выполненной задаче"@ru ;
  rdfs:label "Completed task decision blank "@en ;
.

v-ft:OutboxCompleted
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Выполненные исходящие"@ru ;
  rdfs:label "Completed outbox"@en ;
  v-fs:searchBlank v-ft:OutboxCompletedBlank ;
  v-fs:searchBlankTemplate v-ft:TaskBlankTemplate ;
  v-fs:searchResultTemplate v-ft:CompletedResultTemplate ;
  v-fs:sortOrder "'v-s:created' desc"^^xsd:string ;
  v-ui:hasTemplate v-ft:InboxTemplate ;
  v-fs:queryBuilder "veda.Util.queryInbox" ;
  v-fs:searchOnLoad true ;
.
v-ft:OutboxCompletedBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Бланк выполненных задач"@ru ;
  rdfs:label "Blank completed task"@en ;
  v-fc:targetType v-wf:DecisionForm ;
  v-fc:targetType bpmn:DecisionForm ;
  v-wf:onDocument v-ft:OutboxCompletedDocumentBlank ;
  v-wf:takenDecision v-ft:OutboxCompletedDecisionBlank ;
  v-wf:isCompleted true ;
.
v-ft:OutboxCompletedDocumentBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Бланк документа по выполненной исходящей задаче"@ru ;
  rdfs:label "Completed outbox task document blank "@en ;
.
v-ft:OutboxCompletedDecisionBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Бланк решения по выполненной исходящей задаче"@ru ;
  rdfs:label "Completed outbox task decision blank "@en ;
.

v-ft:MyBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Мои"@ru ;
  rdfs:label "My"@en ;
.
v-ft:DocumentTypeBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Тип документа"@ru ;
  rdfs:label "Document type"@en ;
.
v-ft:DocumentBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Документ"@ru ;
  rdfs:label "Document"@en ;
.

v-ft:DecisionDateBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Дата выполнения"@ru ;
  rdfs:label "Complete date"@en ;
.

v-ft:DecisionCreatorBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Выполнил"@ru ;
  rdfs:label "Decision creator"@en ;
.

v-ft:InboxTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон бланка задачи"@ru ;
  rdfs:label "Task blank template"@en ;
  v-ui:template """
<script>
  template.one("remove", function () {
    if ( individual["v-fs:cursor"][0] >= individual["v-fs:top"][0] ) {
      individual["v-fs:top"] = individual["v-fs:cursor"];
    }
    individual.clearValue("v-fs:searchResult");
  });
//# sourceURL=v-ft:InboxTemplate_pre
</script>
<div class="container sheet" about="@" data-template="v-fs:AttributiveSearchTemplate"></div>
  """ ;
.

v-ft:TaskBlankTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон бланка задачи"@ru ;
  rdfs:label "Task blank template"@en ;
  v-ui:template """
<script>
  var folder = decodeURIComponent(location.hash).substr(2).split("/")[0];
  $("#folder", template).attr("about", folder);
  $("#box-tabs", template)
    .find("a")
    .filter(function () { return this.hash.substr(2) === folder; })
    .parent()
    .addClass("active");

  if (folder === "v-ft:Inbox" || folder === "v-ft:Completed") {
    $(".to", template).remove();
  } else {
    $(".from", template).remove();
  }
  //# sourceURL=v-ft:TaskBlankTemplate_pre
</script>
<div>
  <br>
  <ul id="box-tabs" class="nav nav-tabs nav-right" role="tablist">
    <li class="pull-left"><h2 id="folder" class="no-margin" property="rdfs:label"></h2></li>
    <li role="presentation"><a href="#/v-ft:OutboxCompleted" about="v-ft:OutboxCompleted" property="rdfs:label"></a></li>
    <li role="presentation"><a href="#/v-ft:Completed" about="v-ft:Completed" property="rdfs:label"></a></li>
    <li role="presentation"><a href="#/v-ft:Outbox" about="v-ft:Outbox" property="rdfs:label"></a></li>
    <li role="presentation"><a href="#/v-ft:Inbox" about="v-ft:Inbox" property="rdfs:label"></a></li>
  </ul>
  <br>
  <div about="@" data-template="v-ft:ActorFilterTemplate"></div>
  <div class="row">
    <div class="col-md-4 from">
      <em about="v-wf:from" property="rdfs:label"></em>
      <veda-control property="v-wf:from" data-single="true" data-actor-type="v-s:Person v-s:Position" data-type="actor"></veda-control>
    </div>
    <div class="col-md-4 to">
      <em about="v-wf:to" property="rdfs:label"></em>
      <veda-control property="v-wf:to" data-single="true" data-actor-type="v-s:Person v-s:Position" data-type="actor"></veda-control>
    </div>
    <div class="col-md-4" about="@" rel="v-wf:onDocument">
      <div>
        <em about="v-ft:DocumentTypeBundle" property="rdfs:label"></em>
        <veda-control rel="rdf:type" data-type="link" class="dropdown fulltext" data-single="true" data-placeholder=" " data-query-prefix="'rdfs:subClassOf'==='v-s:UserSearchableDocument'"></veda-control>
      </div>
    </div>
    <div class="col-md-4" about="@" rel="v-wf:onDocument">
      <div>
        <em about="v-ft:DocumentBundle" property="rdfs:label"></em>
        <veda-control property="rdfs:label" data-type="string"></veda-control>
      </div>
    </div>
  </div>
  <small class="advanced-toggle text-muted" about="v-fs:AdvancedSearchBundle" property="rdfs:label" style="border-bottom:1px dashed #707070; cursor:pointer;"></small>
  <div class="advanced-search hidden">
    <div class="row">
      <div class="col-md-4">
        <em about="v-s:description" property="rdfs:label"></em>
        <veda-control property="rdfs:label" data-type="string"></veda-control>
      </div>
      <div class="col-md-4">
        <em about="v-s:created" property="rdfs:label"></em>
        <veda-control property="v-s:created" data-type="date"></veda-control>
        <div property="v-s:created"></div>
      </div>
      <div class="col-md-4">
        <em about="v-wf:dateGiven" property="rdfs:label"></em>
        <veda-control property="v-wf:dateGiven" data-type="date"></veda-control>
        <div property="v-wf:dateGiven"></div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-4" about="@" data-embedded="true" rel="v-wf:takenDecision">
        <div>
          <em about="v-ft:DecisionDateBundle" property="rdfs:label"></em>
          <veda-control property="v-s:created" data-type="date"></veda-control>
          <div property="v-s:created"></div>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  if (individual.advanced) {
    $(".advanced-search", template).removeClass("hidden");
  }
  $(".advanced-toggle", template).click(function (e) {
    e.preventDefault();
    individual.advanced = !individual.advanced;
    if (individual.advanced) {
      $(".advanced-search", template).removeClass("hidden");
    } else {
      $(".advanced-search", template).addClass("hidden");
    }
  });
  //# sourceURL=v-ft:TaskBlankTemplate_post
</script>
  """ ;
.

v-ft:ActorFilterTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон фильтра актора"@ru ;
  rdfs:label "Actor filter template"@en ;
  v-ui:template """
<script>
  var folder = decodeURIComponent(location.hash).substr(2).split("/")[0];

  var actor_property = folder === "v-ft:Outbox" ? "v-wf:from" :
                       folder === "v-ft:OutboxCompleted" ? "v-wf:from" :
                       folder === "v-ft:Inbox" ? "v-wf:to" :
                       folder === "v-ft:Completed" ? "v-wf:to" : "";

  var counter_prop = folder === "v-ft:Inbox" ? "v-ft:inboxCount" :
                     folder === "v-ft:Outbox" ? "v-ft:outboxCount" :
                     folder === "v-ft:Completed" ? "v-ft:completedCount" : "";

  if (!individual.hasValue(actor_property)) {
    individual[actor_property] = [veda.user];
  }

  return veda.Backend.query({
    ticket: veda.ticket,
    query: "('rdf:type'==='v-s:Appointment' && 'v-s:employee'=='" + veda.user.id + "')"
  })
  .then(function (queryResult) {
    var appointments_uris = queryResult.result;
    return veda.Backend.get_individuals(veda.ticket, appointments_uris);
  })
  .then(function (appointments) {

    var actors_uris = [ {uri:"v-ft:MyBundle", official: true} ];

    appointments.forEach(function (appointment) {
      if ( veda.appointment && veda.appointment.id && appointment["@"] === veda.appointment.id ) {
        return;
      } else if ( appointment["v-s:occupation"] && appointment["v-s:occupation"].length ) {
        var delegationPurpose = (appointment["v-s:hasDelegationPurpose"] && appointment["v-s:hasDelegationPurpose"].length) ?
            appointment["v-s:hasDelegationPurpose"][0].data : "";

        var isControlAppointment = delegationPurpose === "d:delegate_Control";
        actors_uris.push( {uri: appointment["v-s:occupation"][0].data, official: !isControlAppointment} );
      }
    });

    actors_uris.map(function (actor_data) {
      //var counter_uri = "d:taskCounter_" + actor_uri.split(":").join("_");
      var notOfficialInject = actor_data.official === false ? " class='not-official'" : "";
      var actor_template =
        "<li>" +
          "<a href='#'" + notOfficialInject + ">" +
            "<span class='actor' about='" + actor_data.uri + "' property='rdfs:label'></span> " +
            //"<span id='counter' about='" + counter_uri + "' class='badge' property='" + counter_prop + "'></span>" +
          "</a>" +
        "</li>";
      actor_template = $(actor_template);
      if (actor_data.official === false) {
        actor_template.popover({
          placement: "top",
          trigger: "hover",
          content: "Не официальное назначение. Только просмотр"
        });
      }
      template.append(actor_template);
    });

    if ( !individual.actor ) {
      individual.actor = "v-ft:MyBundle";
    }
    if (individual.actor === "v-ft:MyBundle") {
      individual[actor_property] = [ veda.user , veda.appointment && veda.appointment.hasValue("v-s:occupation") ? veda.appointment["v-s:occupation"][0] : undefined ];
    } else {
      individual[actor_property] = [ new veda.IndividualModel(individual.actor) ];
    }
    template.find("[about='" + individual.actor + "']").closest("li").addClass("active");

    template.on("click", "li a", function (e) {
      e.preventDefault();
      e.stopPropagation();
      var $this = $(this);
      $this.parent().addClass("active").siblings().removeClass("active");
      var actor_uri = $this.children(".actor").attr("about");
      individual.actor = actor_uri;
      if (actor_uri === "v-ft:MyBundle") {
        individual[actor_property] = [ veda.user , veda.appointment && veda.appointment.hasValue("v-s:occupation") ? veda.appointment["v-s:occupation"][0] : undefined ];
      } else {
        individual[actor_property] = [ new veda.IndividualModel(actor_uri) ];
      }
      new veda.IndividualModel(folder).trigger("search");
    });
  });

  // Update counter if counter & results count do not match
  /*individual.on("search:complete", checkCounter);
  template.one("remove", function () {
    individual.off(checkCounter);
  });
  function checkCounter(results) {
    try {
      var actor_uri = individual[actor_property][0].id;
      var counter_uri = "d:taskCounter_" + actor_uri.split(":").join("_");
      var counter = new veda.IndividualModel(counter_uri);
      counter.load().then(function (counter) {
        if ( counter.isNew() ) {
          counter["rdf:type"] = [ new veda.IndividualModel("v-ft:TaskCounter") ];
        }
        var counter_val = counter[counter_prop][0];
        if ( counter_val !== results.estimated ) {
          counter[counter_prop] = [ results.estimated ];
          counter.save();
        }
      });
    }
  }*/

  //# sourceURL=v-ft:ActorFilterTemplate_pre
</script>
<ul class="nav nav-pills" role="tablist">
  <style scoped>
    a.not-official {
      color: #333333;
    }
    li.active > a.not-official {
      color: #333333 !important;
      background-color: #ffffff !important;
      border: 1px solid;
    }
  </style>
</ul>
  """ ;
.

v-ft:ReadUnreadBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Прочитано / не прочитано"@ru ;
  rdfs:label "Read / unread"@en ;
.

v-ft:CompletedResultTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон результата поиска ВЫПОЛНЕННЫХ задач"@ru ;
  rdfs:label "Complete tasks search results template"@en ;
  v-ui:template """
<div>
  <hr class="no-margin">
  <table class="table table-striped table-condensed">
    <thead>
      <tr>
        <th width="20px">#</th>
        <th width="10px"><span class="glyphicon glyphicon-search"></span></th>
        <th width="12%" data-orderby="v-wf:from.rdfs:label"><span about="v-wf:from" property="rdfs:label"></span></th>
        <th width="12%" data-orderby="v-wf:to.rdfs:label"><span about="v-wf:to" property="rdfs:label"></span></th>
        <th width="30px"></th>
        <th data-orderby="rdfs:label"><span about="v-s:description" property="rdfs:label"></span></th>
        <th data-orderby="v-wf:onDocument.rdfs:label"><span about="v-ft:DocumentBundle" property="rdfs:label"></span></th>
        <th><span about="v-wf:takenDecision" property="rdfs:label"></span></th>
        <th width="20px"></th>
        <th width="10%" class="orderby" data-orderby="v-s:created" about="v-s:created" property="rdfs:label"></th>
        <th width="10%" data-orderby="v-wf:takenDecision.v-s:created">
          <span about="v-ft:DecisionDateBundle" property="rdfs:label"></span>
        </th>
        <th width="10%"><span about="v-ft:DecisionCreatorBundle" property="rdfs:label"></span></th>
      </tr>
    </thead>
    <tbody class="result-container">
      <tr>
        <td class="serial-number"></td>
        <td><a href="#/@" class="glyphicon glyphicon-search"></a></td>
        <td>
          <div about="@" rel="v-wf:from" data-template="v-ui:LabelTemplate"></div>
          <div about="@" rel="v-wf:redirect_from_task">
            <script>
              if ( !individual.hasValue("v-wf:to") ) {
                template.empty();
              }
            </script>
            <div>
              <hr class="no-margin">
              <strong><small about="v-s:TaskIsRedirectedFrom" property="rdfs:label"></small></strong>
              <small about="@" rel="v-wf:to" data-template="v-ui:LabelTemplate"></small>
            </div>
          </div>
        </td>
        <td about="@" rel="v-wf:to" data-template="v-ui:LabelTemplate"></td>
        <td>
          <span class="child-task text-muted"></span>
        </td>
        <td>
          <a href="#/@" about="@" property="rdfs:label"></a><br/>
          <i about="@" property="v-s:description"></i>
        </td>
        <td about="@" rel="v-wf:onDocument" data-template="v-ui:ClassNameLabelTemplate"></td>
        <td about="@" rel="v-wf:takenDecision">
          <div property="rdfs:label"></div>
          <i property="rdfs:comment"></i>
        </td>
        <td>
          <span class="to-journal pointer text-primary glyphicon glyphicon-list"></span>
        </td>
        <td property="v-s:created"></td>
        <td rel="v-wf:takenDecision">
          <div property="v-s:created"></div>
        </td>
        <td rel="v-wf:takenDecision">
          <div rel="v-s:creator" data-template="v-ui:LabelTemplate"></div>
        </td>
      </tr>
      <script>
        $(".to-journal", template).click(function(e){
          e.stopPropagation();
          var journalUri = individual["v-wf:onDocument"][0].id + "j";
          riot.route("#/" + journalUri);
        });
        new veda.IndividualModel("v-ft:ToJournalBundle").load().then(function(bundle) {
          $(".to-journal", template).prop("title", bundle.toString());
        });

        // Child task indicator
        if ( individual.hasValue("v-wf:hasChildTask") ) {
          template.find(".child-task")
            .addClass("glyphicon glyphicon-comment")
            .prop("title", new veda.IndividualModel("v-wf:hasChildTask").toString());
        }
      </script>
    </tbody>
  </table>
</div>
  """ ;
.

v-ft:TaskResultTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон результата поиска задач"@ru ;
  rdfs:label "Tasks search results template"@en ;
  v-ui:template """
<div>
  <hr class="no-margin">
  <table class="table table-striped table-condensed">
    <thead>
      <tr>
        <th width="20px">#</th>
        <th width="10px"><span class="glyphicon glyphicon-search"></span></th>
        <th width="15%" data-orderby="v-wf:from.rdfs:label"><span about="v-wf:from" property="rdfs:label"></span></th>
        <th width="15%" data-orderby="v-wf:to.rdfs:label"><span about="v-wf:to" property="rdfs:label"></span></th>
        <th width="30px" class="orderby" data-orderby="v-wf:read"></th>
        <th data-orderby="rdfs:label"><span about="v-s:description" property="rdfs:label"></span></th>
        <th data-orderby="v-wf:onDocument.rdfs:label"><span about="v-ft:DocumentBundle" property="rdfs:label"></span></th>
        <th width="20px"></th>
        <th width="10%" class="orderby" data-orderby="v-s:created"><span about="v-s:created" property="rdfs:label"></span></th>
        <th width="10%" class="orderby" data-orderby="v-wf:dateGiven"><span about="v-wf:dateGiven" property="rdfs:label"></span></th>
      </tr>
    </thead>
    <tbody class="result-container">
      <tr>
        <td class="serial-number"></td>
        <td><a href="#/@" class="glyphicon glyphicon-search"></a></td>
        <td>
          <div about="@" rel="v-wf:from" data-template="v-ui:LabelTemplate"></div>
          <div about="@" rel="v-wf:redirect_from_task">
            <script>
              if ( !individual.hasValue("v-wf:to") ) {
                template.empty();
              }
            </script>
            <div>
              <hr class="no-margin">
              <strong><small about="v-s:TaskIsRedirectedFrom" property="rdfs:label"></small></strong>
              <small about="@" rel="v-wf:to" data-template="v-ui:LabelTemplate"></small>
            </div>
          </div>
        </td>
        <td about="@" rel="v-wf:to" data-template="v-ui:LabelTemplate"></td>
        <td>
          <span class="toggle-read glyphicon glyphicon-exclamation-sign"></span>
          <span class="child-task text-muted"></span>
        </td>
        <td>
          <a href="#/@" about="@" property="rdfs:label"></a><br/>
          <i about="@" property="v-s:description"></i>
        </td>
        <td about="@" rel="v-wf:onDocument" data-template="v-ui:ClassNameLabelTemplate"></td>
        <td>
          <span class="to-journal pointer text-primary glyphicon glyphicon-list"></span>
        </td>
        <td about="@" property="v-s:created"></td>
        <td about="@" property="v-wf:dateGiven" class="date-given"></td>
      </tr>
      <script>
        // Remove completed tasks from inbox & outbox
        var folder = decodeURIComponent(location.hash).substr(2).split("/")[0];
        var remove = (folder !== "v-ft:Completed");
        removeCompleted.call(this);
        function removeCompleted() {
          if (remove && this.hasValue("v-wf:isCompleted", true)) {
            template.remove();
          }
        }
        individual.on("v-wf:isCompleted", removeCompleted);
        template.one("remove", function () {
          individual.off("v-wf:isCompleted", removeCompleted);
        });

        $(".to-journal", template).click(function(e){
          e.stopPropagation();
          var journalUri = individual["v-wf:onDocument"][0].id + "j";
          riot.route("#/" + journalUri);
        });
        new veda.IndividualModel("v-ft:ToJournalBundle").load().then(function(bundle) {
          $(".to-journal", template).prop("title", bundle.toString());
        });

        // Toggle read/unread
        var toggler = $(".toggle-read", template);
        toggler.prop("title", new veda.IndividualModel("v-ft:ReadUnreadBundle").toString());
        if (folder === "v-ft:Inbox") {
          toggler.addClass("pointer").click(toggleReadClickHandler);
        }
        function toggleReadClickHandler(e) {
          e.stopPropagation();
          var isRead = individual.hasValue("v-wf:read", true);
          toggleRead(!isRead);
          veda.Backend.set_in_individual({
            ticket: veda.ticket,
            individual: {
              "@": individual.id,
              "v-wf:read": [{
                data: !isRead,
                type: "Boolean"
              }]
            },
            async: true
          });
        }
        function readHandler () {
          var isRead = individual.hasValue("v-wf:read", true);
          toggleRead(isRead);
        }
        function toggleRead (isRead) {
          if ( isRead ) {
            template.css("font-weight", "normal");
            toggler.removeClass("text-primary").addClass("text-muted");
          } else {
            template.css("font-weight", "bold");
            toggler.removeClass("text-muted").addClass("text-primary");
          }
        };
        readHandler();
        individual.on("v-wf:read", readHandler);
        template.one("remove", function () {
          individual.off("v-wf:read", readHandler);
        });

        // Child task indicator
        if ( individual.hasValue("v-wf:hasChildTask") ) {
          template.find(".child-task")
            .addClass("glyphicon glyphicon-comment")
            .prop("title", new veda.IndividualModel("v-wf:hasChildTask").toString());
        }

        // Due date indicator
        var dateGivenCell = $(".date-given", template);
        var now = new Date();
        var yesterday = new Date().setHours(0,0,0,1);
        var tomorrow = new Date().setHours(23,59,59,999);
        var dateGiven = individual["v-wf:dateGiven"][0];
        var dateGivenYesterday = new Date(dateGiven).setHours(0,0,0,1);
        var dateGivenTomorrow = new Date(dateGiven).setHours(23,59,59,999);
        var dateDone = individual.hasValue("v-wf:takenDecision") && individual["v-wf:takenDecision"][0]["v-s:created"][0];
        if ( individual.hasValue("v-wf:isCompleted", false) ) {
          if (dateGiven < yesterday) {
            dateGivenCell.toggleClass("bg-danger");
          } else if (yesterday < dateGiven && dateGiven <= tomorrow) {
            dateGivenCell.toggleClass("bg-warning");
          } else if (tomorrow < dateGiven) {
            dateGivenCell.toggleClass("bg-success");
          }
        } else {
          if (dateGivenYesterday < dateDone && dateDone <= dateGivenTomorrow) {
            dateGivenCell.toggleClass("bg-warning");
          } else if (dateDone < dateGiven) {
            dateGivenCell.toggleClass("bg-success");
          } else if (dateGiven < dateDone ) {
            dateGivenCell.toggleClass("bg-danger");
          }
        }
      </script>
    </tbody>
  </table>
</div>
  """ ;
.

v-ft:InboxResultTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон результата поиска задач"@ru ;
  rdfs:label "Tasks search results template"@en ;
  v-ui:template """
<div>
  <hr class="no-margin">
  <table class="table table-striped table-condensed">
    <thead>
      <tr>
        <th width="1%"><input type="checkbox" class="toggle-select-all"></th>
        <th width="20px">#</th>
        <th width="10px"><span class="glyphicon glyphicon-search"></span></th>
        <th width="15%" data-orderby="v-wf:from.rdfs:label"><span about="v-wf:from" property="rdfs:label"></span></th>
        <th width="15%" data-orderby="v-wf:to.rdfs:label"><span about="v-wf:to" property="rdfs:label"></span></th>
        <th width="30px" class="orderby" data-orderby="v-wf:read"></th>
        <th data-orderby="rdfs:label"><span about="v-s:description" property="rdfs:label"></span></th>
        <th data-orderby="v-wf:onDocument.rdfs:label"><span about="v-ft:DocumentBundle" property="rdfs:label"></span></th>
        <th width="20px"></th>
        <th width="10%" class="orderby" data-orderby="v-s:created"><span about="v-s:created" property="rdfs:label"></span></th>
        <th width="10%" class="orderby" data-orderby="v-wf:dateGiven"><span about="v-wf:dateGiven" property="rdfs:label"></span></th>
      </tr>
    </thead>
    <tbody class="result-container">
      <tr>
        <td width="1%"><input type="checkbox" class="toggle-select"></td>
        <td class="serial-number"></td>
        <td><a href="#/@" class="glyphicon glyphicon-search"></a></td>
        <td>
          <div about="@" rel="v-wf:from" data-template="v-ui:LabelTemplate"></div>
          <div about="@" rel="v-wf:redirect_from_task">
            <script>
              if ( !individual.hasValue("v-wf:to") ) {
                template.empty();
              }
            </script>
            <div>
              <hr class="no-margin">
              <strong><small about="v-s:TaskIsRedirectedFrom" property="rdfs:label"></small></strong>
              <small about="@" rel="v-wf:to" data-template="v-ui:LabelTemplate"></small>
            </div>
          </div>
        </td>
        <td about="@" rel="v-wf:to" data-template="v-ui:LabelTemplate"></td>
        <td>
          <span class="toggle-read glyphicon glyphicon-exclamation-sign"></span>
          <span class="child-task text-muted"></span>
        </td>
        <td>
          <a href="#/@" about="@" property="rdfs:label"></a><br/>
          <i about="@" property="v-s:description"></i>
        </td>
        <td about="@" rel="v-wf:onDocument" data-template="v-ui:ClassNameLabelTemplate"></td>
        <td>
          <span class="to-journal pointer text-primary glyphicon glyphicon-list"></span>
        </td>
        <td about="@" property="v-s:created"></td>
        <td about="@" property="v-wf:dateGiven" class="date-given"></td>
      </tr>
      <script>
        // Remove completed tasks from inbox & outbox
        var folder = decodeURIComponent(location.hash).substr(2).split("/")[0];
        var remove = (folder !== "v-ft:Completed");
        removeCompleted.call(this);
        function removeCompleted() {
          if (remove && this.hasValue("v-wf:isCompleted", true)) {
            template.remove();
          }
        }
        individual.on("v-wf:isCompleted", removeCompleted);
        template.one("remove", function () {
          individual.off("v-wf:isCompleted", removeCompleted);
        });

        $(".to-journal", template).click(function(e){
          e.stopPropagation();
          var journalUri = individual["v-wf:onDocument"][0].id + "j";
          riot.route("#/" + journalUri);
        });
        new veda.IndividualModel("v-ft:ToJournalBundle").load().then(function(bundle) {
          $(".to-journal", template).prop("title", bundle.toString());
        });

        // Toggle read/unread
        var toggler = $(".toggle-read", template);
        toggler.prop("title", new veda.IndividualModel("v-ft:ReadUnreadBundle").toString());
        if (folder === "v-ft:Inbox") {
          toggler.addClass("pointer").click(toggleReadClickHandler);
        }
        function toggleReadClickHandler(e) {
          e.stopPropagation();
          var isRead = individual.hasValue("v-wf:read", true);
          toggleRead(!isRead);
          veda.Backend.set_in_individual({
            ticket: veda.ticket,
            individual: {
              "@": individual.id,
              "v-wf:read": [{
                data: !isRead,
                type: "Boolean"
              }]
            },
            async: true
          });
        }
        function readHandler () {
          var isRead = individual.hasValue("v-wf:read", true);
          toggleRead(isRead);
        }
        function toggleRead (isRead) {
          if ( isRead ) {
            template.css("font-weight", "normal");
            toggler.removeClass("text-primary").addClass("text-muted");
          } else {
            template.css("font-weight", "bold");
            toggler.removeClass("text-muted").addClass("text-primary");
          }
        };
        readHandler();
        individual.on("v-wf:read", readHandler);
        template.one("remove", function () {
          individual.off("v-wf:read", readHandler);
        });

        // Child task indicator
        if ( individual.hasValue("v-wf:hasChildTask") ) {
          template.find(".child-task")
            .addClass("glyphicon glyphicon-comment")
            .prop("title", new veda.IndividualModel("v-wf:hasChildTask").toString());
        }

        // Due date indicator
        var dateGivenCell = $(".date-given", template);
        var now = new Date();
        var yesterday = new Date().setHours(0,0,0,1);
        var tomorrow = new Date().setHours(23,59,59,999);
        var dateGiven = individual["v-wf:dateGiven"][0];
        var dateGivenYesterday = new Date(dateGiven).setHours(0,0,0,1);
        var dateGivenTomorrow = new Date(dateGiven).setHours(23,59,59,999);
        var dateDone = individual.hasValue("v-wf:takenDecision") && individual["v-wf:takenDecision"][0]["v-s:created"][0];
        if ( individual.hasValue("v-wf:isCompleted", false) ) {
          if (dateGiven < yesterday) {
            dateGivenCell.toggleClass("bg-danger");
          } else if (yesterday < dateGiven && dateGiven <= tomorrow) {
            dateGivenCell.toggleClass("bg-warning");
          } else if (tomorrow < dateGiven) {
            dateGivenCell.toggleClass("bg-success");
          }
        } else {
          if (dateGivenYesterday < dateDone && dateDone <= dateGivenTomorrow) {
            dateGivenCell.toggleClass("bg-warning");
          } else if (dateDone < dateGiven) {
            dateGivenCell.toggleClass("bg-success");
          } else if (dateGiven < dateDone ) {
            dateGivenCell.toggleClass("bg-danger");
          }
        }
      </script>
    </tbody>
  </table>
</div>
  """ ;
.

# Related tasks for document

v-ft:RelatedTasks
  rdf:type v-fs:AttributiveSearch ;
  rdfs:label "Связанные задачи"@ru ;
  rdfs:label "Related tasks"@en ;
  v-fs:searchResultTemplate v-ft:TaskResultTemplate ;
  v-fs:sortOrder "'v-wf:from' desc,'v-s:created' desc" ;
  v-fs:searchOnLoad true ;
.

v-ft:TaskRelatedTasksTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон связанных задач для задачи"@ru ;
  rdfs:label "Related tasks template for task"@en ;
  v-ui:template """
<script>
  var relatedTasks = new veda.IndividualModel("v-ft:RelatedTasks");
  return relatedTasks.load().then(function (relatedTasks) {
    relatedTasks.clearValue("v-fs:searchResult");
    var taskId = individual.id;
    var docId = individual.hasValue("v-wf:onDocument") && individual["v-wf:onDocument"][0].id;
    var queryStr = [
      "'@' != '" + taskId + "'",
      "'v-wf:onDocument' == '" + docId + "'",
      "'rdf:type'==='v-wf:DecisionForm'",
      "'v-wf:isCompleted'== false "
    ].join(" && ");
    relatedTasks["v-fs:fulltextQuery"] = [ queryStr ];
  });
  //# sourceURL=v-ft:TaskRelatedTasksTemplate_pre
</script>
<div>
  <div about="v-ft:RelatedTasks" data-template="v-fs:AttributiveSearchInlineTemplate"></div>
</div>
  """
.


#################### Inbox operation ######################

v-ft:MakeDecisionOperation
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:Operation ;
  rdfs:label "Принять решение"@ru ;
  rdfs:label "Make decision"@en ;
  v-ui:hasModel v-ft:MakeDecisionOperationModel ;
.

v-ft:MakeDecisionOperationRights
  rdf:type v-s:PermissionStatement ;
  v-s:permissionObject v-ft:MakeDecisionOperation ;
  v-s:permissionSubject cfg:AllUsersGroup ;
  v-s:canCreate true ;
.

v-ft:groupDecisionClass
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ft:MakeDecisionOperation ;
  rdfs:range owl:Class ;
  rdfs:label "Решение"@ru ;
  rdfs:label "Decision"@en ;
.

v-ft:groupDecision
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ft:MakeDecisionOperation ;
  rdfs:range v-wf:Decision ;
  rdfs:label "Решение"@ru ;
  rdfs:label "Decision"@en ;
.

v-ft:MakeDecisionOperationModel
  rdf:type v-ui:ClassModel ;
  rdfs:label "Модель операции 'Групповое выполнение задач'"@ru ;
  rdfs:label "'Group complete operation' operation model"@en ;
  v-s:script """
this.fn = function (task_uri) {
  var group_decision_uri = veda.Util.getUri(this["v-wf:takenDecision"]);
  var group_decision = get_individual(veda.ticket, group_decision_uri);

  var task = get_individual(veda.ticket, task_uri);
  if ( veda.Util.hasValue(this, "v-wf:takenDecision") ) {
    task["v-wf:takenDecision"] = this["v-ft:groupDecision"];
    put_individual(veda.ticket, task);
  }
};
  """ ;
.

v-s:TS_MakeDecisionOperation
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-ft:MakeDecisionOperationTemplate;
  v-ui:forClass v-ft:MakeDecisionOperation
.
v-ft:MakeDecisionOperationTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для класса mnd-s:OperationChangeSupportSpecialist"@ru ;
  rdfs:label "Template for mnd-s:OperationChangeSupportSpecialist class"@en ;
  v-ui:template """
<script>
  function intersect (arr1, arr2) {
    arr1.sort(sorter);
    arr2.sort(sorter);
    var i = 0, j = 0, res = [], el1, el2;
    while ((el1 = arr1[i]) && (el2 = arr2[j])) {
      if (el2 < el1) {
        j++;
      } else if (el2 > el1) {
        i++;
      } else {
        res.push(el1);
        i++;
        j++;
      }
    }
    return res;

    function sorter (a, b) {
      return a.id < b.id ? -1 : a.id > b.id ? 1 : 0;
    }
  }
  var possible = this["v-s:data"].map(function (task) {
    return task["v-wf:possibleDecisionClass"];
  });
  var common = possible.reduce(function (common, possible) {
    return common ? intersect(common, possible) : possible;
  });
  common.push( new veda.IndividualModel("v-wf:DecisionRedirect") );
  this["v-ft:groupDecisionClass"] = common;

  //# sourceURL=v-ft:MakeDecisionOperationTemplate_pre
</script>
<div class="container sheet">
  <h4 about="v-ft:groupDecisionClass" property="rdfs:label"></h4>
  <div class="possible-decisions" about="@" rel="v-ft:groupDecisionClass">
    <div class="radio">
      <label>
        <input type="radio" name="decisionRadios">
        <span property="rdfs:label"></span>
      </label>
    </div>
  </div>
  <div class="well new-decision"></div>
</div>
<script>
  $(".possible-decisions input", template).on("change", function (e) {
    var input = $(this);
    var decisionContainer = $(".new-decision", template);
    var decisionClassId = input.closest("[resource]").attr("resource");
    var decisionClass = new veda.IndividualModel( decisionClassId );
    decision["rdf:type"] = [ decisionClass ];
    decision.properties["rdfs:label"] = decisionClass.properties["rdfs:label"];
    var prevComment = $("veda-control[property='rdfs:comment'] textarea", decisionContainer).val();
    if (prevComment) {
      decision["rdfs:comment"] = [prevComment];
    }
    decisionContainer.empty();
    decision.present(decisionContainer, undefined, "edit").then( function (decisionTemplate) {
      decisionTemplate.find(".action#send")
        .off("click")
        .click(function () {
          Promise.all(individual["v-s:data"].map(function (task) {
            return decision.clone().then(function (task_decision) {
              task_decision["v-s:backwardTarget"] = [ task ];
              task_decision["v-s:backwardProperty"] = [ new veda.IndividualModel("v-wf:takenDecision") ];
              task_decision["v-s:canRead"] = [ true ];
              return task_decision.save();
            });
          })).then(function () {
            var successMsg = new veda.IndividualModel("v-s:SuccessBundle").load();
            return successMsg.then(function (successMsg) {
              var notify = veda.Notify ? new veda.Notify() : function () {};
              notify("success", {name: successMsg});
            });
          }).catch(function (error) {
            console.log(error);
            var errorMsg = new veda.IndividualModel("v-s:ErrorBundle").load();
            return errorMsg.then(function (errorMsg) {
              var notify = veda.Notify ? new veda.Notify() : function () {};
              notify("danger", {name: errorMsg});
            });
          }).then(function () {
            decisionTemplate.closest(".modal").modal("hide");
            var inbox = new veda.IndividualModel("v-ft:Inbox");
            inbox.clearValue("v-fs:selected");
          });
        });
    });
  });
  var decision = new veda.IndividualModel();
  $(".possible-decisions input", template).first().prop("checked", "checked").change();

  //# sourceURL=v-ft:MakeDecisionOperationTemplate_post
</script>
  """ ;
.
