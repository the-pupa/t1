@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix v-fs: <http://semantic-machines.com/veda/veda-search/> .
@prefix v-s: <http://semantic-machines.com/veda/veda-schema/> .
@prefix v-ui: <http://semantic-machines.com/veda/veda-ui/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix cfg: <http://semantic-machines.com/veda/config/> .

<http://semantic-machines.com/veda/veda-numeration>
  rdf:type owl:Ontology ;
  rdfs:label "Онтология нумерации системы Veda"@ru ;
  rdfs:label "Veda system numeration ontology"@en ;
#  owl:versionInfo "1.3" ;
  v-s:loadPriority 7 ;
.
v-s:hasNumeration
  rdf:type owl:ObjectProperty ;
  rdfs:domain owl:Class ;
  rdfs:domain rdfs:Class ;
  rdfs:label "Ссылка на нумерацию"@ru ;
  rdfs:label "Link to numeration"@en ;
  rdfs:range v-s:Numeration;
.
v-s:Numeration
  rdf:type owl:Class ;
  rdfs:subClassOf rdfs:Resource ;
  rdfs:subClassOf v-s:ClassAuthorized ;
  rdfs:label "Нумерация"@ru ;
  rdfs:label "Numeration"@en ;
.
v-s:hasNumerationRule
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-s:Numeration ;
  rdfs:label "Ссылка на правило нумерации"@ru ;
  rdfs:label "Link to numeration rule"@en ;
  rdfs:range v-s:NumerationRule;
.
v-s:enumeratedProperty
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-s:Numeration ;
  rdfs:label "Ссылка на правило нумерации"@ru ;
  rdfs:label "Link to numeration rule"@en ;
  rdfs:range rdf:Property;
.
v-s:Enumerated
  rdf:type owl:Class ;
  rdfs:subClassOf rdfs:Resource ;
  rdfs:label "Перечисляемая сущность"@ru ;
  rdfs:label "Enumerated thing"@en ;
.
#v-s:permission_on_enumerated
#  rdf:type v-s:PermissionStatement ;
#  v-s:canCreate "true"^^xsd:boolean ;
#  v-s:permissionObject v-s:Enumerated ;
#  v-s:permissionSubject cfg:AllUsersGroup ;
#.

v-s:NumerationRule
  rdf:type owl:Class ;
  rdfs:subClassOf rdfs:Resource ;
  rdfs:label "Правило автонумерации"@ru ;
  rdfs:label "Numeration rule"@en ;
.
v-s:numerationScope
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-s:NumerationRule ;
  rdfs:label "Скрипт, возвращает пространство нумерации"@ru ;
  rdfs:label "Script, returns numeration scope"@en ;
  rdfs:range xsd:string ;
.
v-s:numerationGetNextValue
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-s:NumerationRule ;
  rdfs:label "Скрипт, возвращает следующее незанятое значение из пространства нумерации"@ru ;
  rdfs:label "Script, returns next uncommited value for numeration scope"@en ;
  rdfs:range xsd:string ;
.
v-s:NumerationScopeClass
  rdf:type owl:Class ;
  rdfs:subClassOf rdfs:Resource ;
  rdfs:subClassOf v-s:ClassAuthorized ;
  rdfs:label "Пространство автонумерации"@ru ;
  rdfs:label "Numeration scope"@en ;
.
v-s:numerationCommitedInterval
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-s:NumerationScopeClass ;
  rdfs:range v-s:NumerationCommitedIntervalClass;
  rdfs:label "Занятый интервал"@ru ;
  rdfs:label "Numeration commited interval"@en ;
.
v-s:NumerationCommitedIntervalClass
  rdf:type owl:Class ;
  rdfs:subClassOf rdfs:Resource ;
  rdfs:subClassOf v-s:ClassAuthorized ;
  rdfs:label "Занятый интервал"@ru ;
  rdfs:label "Numeration commited interval"@en ;
.
v-s:numerationCommitedIntervalBegin
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-s:NumerationCommitedIntervalClass ;
  rdfs:label "Начало занятого интервала нумерации"@ru ;
  rdfs:label "Numeration commited interval begin"@en ;
  rdfs:range xsd:integer ;
.
v-s:numerationCommitedIntervalEnd
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-s:NumerationCommitedIntervalClass ;
  rdfs:label "Конец занятого интервала нумерации"@ru ;
  rdfs:label "Numeration commited interval end"@en ;
  rdfs:range xsd:integer ;
.

# --- Numerations ---

v-s:RegistrationNumberSimpleNumeration
  rdf:type v-s:Numeration ;
  v-s:enumeratedProperty v-s:registrationNumber ;
  v-s:hasNumerationRule v-s:SimpleNumeration ;
.
v-s:RegistrationNumberYearNumeration8
  rdf:type v-s:Numeration ;
  v-s:enumeratedProperty v-s:registrationNumber ;
  v-s:hasNumerationRule v-s:YearNumeration8 ;
.
v-s:RegistrationNumberYearNumeration2_6
  rdf:type v-s:Numeration ;
  v-s:enumeratedProperty v-s:registrationNumber ;
  v-s:hasNumerationRule v-s:YearNumeration2_6 ;
.
v-s:RegistrationNumberSimpleNumerationYear
  rdf:type v-s:Numeration ;
  v-s:enumeratedProperty v-s:registrationNumber ;
  v-s:hasNumerationRule v-s:SimpleNumerationYear ;
.
v-s:RegistrationNumberSimpleNumerationYearOrganization
  rdf:type v-s:Numeration ;
  v-s:enumeratedProperty v-s:registrationNumber ;
  v-s:hasNumerationRule v-s:SimpleNumerationYearOrganization ;
.
v-s:RegistrationNumberYearNumeration2_4
  rdf:type v-s:Numeration ;
  v-s:enumeratedProperty v-s:registrationNumber ;
  v-s:hasNumerationRule v-s:YearNumeration2_4 ;
.
v-s:RegistrationNumberIdeaAndProjectsNumeration
  rdf:type v-s:Numeration ;
  v-s:enumeratedProperty v-s:registrationNumber ;
  v-s:hasNumerationRule v-s:IdeaAndProjectsNumeration ;
.
# --- Rules ---

v-s:SimpleNumerationYear
  rdf:type v-s:NumerationRule ;
  rdfs:isDefinedBy v-s: ;
  rdfs:label "Нумерация в пределах класса в пределах года"@ru ;
  rdfs:label "Numeration with class as scope"@en ;
  v-s:numerationScope """
  (function (ticket, individual) {
    var year;
    if ( veda.Util.hasValue(individual, "v-s:registrationDate") ) {
      year = (typeof window === "object" ? individual["v-s:registrationDate"][0] : new Date(individual["v-s:registrationDate"][0].data)).getFullYear();
    } else {
      year = new Date().getFullYear();
    }
    var type = (typeof window === "object" ? individual['rdf:type'][0].id : individual['rdf:type'][0].data).replace(':','_');
    return ["numeration-scope", type, year].join("_");
  });
""" ;
  v-s:numerationGetNextValue """
(function getNextValue(ticket, scope) {
  return veda.Numerator.getNextValueSimple(ticket, scope, 1);
})
""" ;
.
v-s:SimpleNumerationYearOrganization
  rdf:type v-s:NumerationRule ;
  rdfs:isDefinedBy v-s: ;
  rdfs:label "Нумерация в пределах класса в пределах года и организации"@ru ;
  rdfs:label "Numeration with class year and organization as scope"@en ;
  v-s:numerationScope """
  (function (ticket, individual) {
    var year;
    if ( veda.Util.hasValue(individual, "v-s:registrationDate") ) {
      year = (typeof window === "object" ? individual["v-s:registrationDate"][0] : new Date(individual["v-s:registrationDate"][0].data)).getFullYear();
    } else {
      year = new Date().getFullYear();
    }
    var type = (typeof window === "object" ? individual['rdf:type'][0].id : individual['rdf:type'][0].data).replace(':','_');
    var org = (typeof window === "object" ? individual['v-s:correspondentOrganization'][0].id : individual['v-s:correspondentOrganization'][0].data).replace(':','_');
    return ["numeration-scope", type, year, org].join("_");
  });
""" ;
  v-s:numerationGetNextValue """
(function getNextValue(ticket, scope) {
  return veda.Numerator.getNextValueSimple(ticket, scope, 1);
})
""" ;
.
v-s:SimpleNumeration
  rdf:type v-s:NumerationRule ;
  rdfs:isDefinedBy v-s: ;
  rdfs:label "Нумерация в пределах класса"@ru ;
  rdfs:label "Numeration with class as scope"@en ;
  v-s:numerationScope """
(function (ticket, individual)
{
    if (!individual['rdf:type']) return '';
  return "numeration-scope_"+((typeof window === "undefined")?individual['rdf:type'][0].data:individual['rdf:type'][0].id).replace(':','_');
})
""" ;
  v-s:numerationGetNextValue """
(function getNextValue(ticket, scope) {
  return veda.Numerator.getNextValueSimple(ticket, scope, 1);
})
""" ;
.
v-s:YearNumeration8
  rdf:type v-s:NumerationRule ;
  rdfs:isDefinedBy v-s: ;
  rdfs:label "Нумерация 4+4 (год+номер) в пределах класса и года"@ru ;
  rdfs:label "Numeration 4+4 (year+number) with class as scope"@en ;
  v-s:numerationScope """
(function (ticket, individual)
{
    if (!individual['rdf:type']) return '';
  return "numeration-scope_"+(new Date()).getFullYear()+((typeof window === "undefined")?individual['rdf:type'][0].data:individual['rdf:type'][0].id).replace(':','_');
})
""" ;
  v-s:numerationGetNextValue """
(function getNextValue(ticket, scope) {
  return veda.Numerator.getNextValueSimple(ticket, scope, (new Date()).getFullYear()*10000+1);
})
""" ;
.
v-s:YearNumeration2_4
  rdf:type v-s:NumerationRule ;
  rdfs:isDefinedBy v-s: ;
  rdfs:label "Нумерация 2+4 (год+номер) в пределах класса и года"@ru ;
  rdfs:label "Numeration 2+4 (year+number) with class as scope"@en ;
  v-s:numerationScope """
(function (ticket, individual)
{
    if (!individual['rdf:type']) return '';
  return "numeration-scope_"+(new Date()).getFullYear()+((typeof window === "undefined")?individual['rdf:type'][0].data:individual['rdf:type'][0].id).replace(':','_');
})
""" ;
  v-s:numerationGetNextValue """
(function getNextValue(ticket, scope) {
  return veda.Numerator.getNextValueSimple(ticket, scope, (parseInt(new Date().getFullYear().toString().substr(2,2), 10))*10000+1);
})
""" ;
.
v-s:YearNumeration2_6
  rdf:type v-s:NumerationRule ;
  rdfs:isDefinedBy v-s: ;
  rdfs:label "Нумерация 2+6 (год+номер) в пределах класса и года"@ru ;
  rdfs:label "Numeration 2+6 (year+number) with class as scope"@en ;
  v-s:numerationScope """
(function (ticket, individual)
{
    if (!individual['rdf:type']) return '';
  return "numeration-scope_"+(new Date()).getFullYear()+((typeof window === "undefined")?individual['rdf:type'][0].data:individual['rdf:type'][0].id).replace(':','_');
})
""" ;
  v-s:numerationGetNextValue """
(function getNextValue(ticket, scope) {
  return veda.Numerator.getNextValueSimple(ticket, scope, (parseInt(new Date().getFullYear().toString().substr(2,2), 10))*1000000+1);
})
""" ;
.
v-s:IdeaAndProjectsNumeration
  rdf:type v-s:NumerationRule ;
  rdfs:isDefinedBy v-s: ;
  rdfs:label "Нумерация среди идей и проектов"@ru ;
  rdfs:label "Numeration among ideas and projects"@en ;
  v-s:numerationScope """
(function (ticket, individual)
{
    if (!individual['rdf:type']) return '';
  return "numeration-scope_ideas_and_projects" + (new Date()).getFullYear();
})
""" ;
  v-s:numerationGetNextValue """
(function getNextValue(ticket, scope) {
  return veda.Numerator.getNextValueSimple(ticket, scope, (new Date()).getFullYear()*10000+1);
})
""" ;
.
v-s:NumerationEvent
  rdf:type v-s:Event ;
  v-s:triggerByType v-s:Enumerated ;
  v-s:preventByType v-s:Version ;
  v-s:script """
/* Available variables:
 * ticket = superuser ticket
 * document = captured document
 * user_uri = user whose actions triggered event
 * prev_state = previous state of the captured document
 * _event_id = id of the event to prevent cycles in triggers. Must be passed to every function that modifies DB.
 * parent_script_id = id of the parent script that triggered this event.
 * parent_document_id = id of the document that triggered this event.
 * super_classes = super classes of the document.
 */
  // First class event only
  if (parent_script_id) {
    // print("Not first class event. Exit.");
    return;
  }
  // Get actual state
  document = get_individual(ticket, document["@"]);
  var result = veda.Numerator.numerate(ticket, document, super_classes, prev_state, _event_id);
"""
.
v-s:Permission1602021330
  rdf:type v-s:PermissionStatement ;
  v-s:permissionObject v-s:NumerationScopeClass_group  ;
  v-s:permissionSubject cfg:AllUsersGroup ;
  v-s:canRead "true"^^xsd:boolean ;
  v-s:created "2016-02-02T13:31:33"^^xsd:dateTime ;
  v-s:published "2016-02-02T13:31:33"^^xsd:dateTime ;
  v-s:startTime "2016-02-02T13:31:33"^^xsd:dateTime ;
  rdfs:label "Чтение. Все пользователи. Все документы класса Пространство автонумерации"@ru ;
  rdfs:label "Read. All read user. All NumerationScopeClass."@en ;
  rdfs:comment "Запись о выдаче прав группе всех пользователей на чтение группы всех документов класса Пространство автонумерации" ;
.
v-s:Permission1602021335
  rdf:type v-s:PermissionStatement ;
  v-s:permissionObject v-s:NumerationCommitedIntervalClass_group  ;
  v-s:permissionSubject cfg:AllUsersGroup ;
  v-s:canRead "true"^^xsd:boolean ;
  v-s:created "2016-02-02T13:35:33"^^xsd:dateTime ;
  v-s:published "2016-02-02T13:35:33"^^xsd:dateTime ;
  v-s:startTime "2016-02-02T13:35:33"^^xsd:dateTime ;
  rdfs:label "Чтение. Все пользователи. Все документы класса Занятый интервал"@ru ;
  rdfs:label "Read. All read user. All NumerationCommitedIntervalClass."@en ;
  rdfs:comment "Запись о выдаче прав группе всех пользователей на чтение группы всех документов класса Занятый интервал" ;
.
