@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix v-s: <http://semantic-machines.com/veda/veda-schema/> .
@prefix v-wf: <http://semantic-machines.com/veda/veda-workflow/> .
@prefix v-fc: <http://semantic-machines.com/veda/veda-function-create/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix td: <http://semantic-machines.com/veda/test-data/> .
@prefix v-fs: <http://semantic-machines.com/veda/veda-function-search/> .
@prefix d: <http://semantic-machines.com/veda/veda-data/> .
@prefix v-ui: <http://semantic-machines.com/veda/veda-ui/> .

<http://semantic-machines.com/veda/veda-ui>
  rdf:type owl:Ontology ;
  rdfs:label "Онтология пользовательского интерфейса системы Веда"@ru ;
  rdfs:label "Veda system user interface ontology"@en ;
#  owl:versionInfo "3.4" ;
  v-s:loadPriority 8 ;
.
v-ui:AvailableLanguage
  rdf:type rdfs:Resource ;
  rdf:value v-ui:RU, v-ui:EN ;
  rdfs:label "Доступный язык"@ru ;
  rdfs:label "Available language"@en ;
.
v-ui:DefaultLanguage
  rdf:type rdfs:Resource ;
  rdf:value v-ui:RU ;
  rdfs:label "Язык по-умолчанию"@ru ;
  rdfs:label "Default language"@en ;
.
v-ui:EN
  rdf:type v-ui:Language ;
  rdfs:label "Eng"^^xsd:string ;
  rdfs:comment "English"^^xsd:string ;
  rdf:value "EN" ;
.
v-ui:RU
  rdf:type v-ui:Language ;
  rdfs:label "Рус"^^xsd:string ;
  rdfs:comment "Русский"^^xsd:string ;
  rdf:value "RU" ;
.
v-ui:preferredLanguage
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:Preferences ;
  rdfs:label "Предпочитаемый язык"@ru ;
  rdfs:label "Preferred language"@en ;
  rdfs:range v-ui:Language ;
.
v-ui:DefaultDisplayedElements
  rdf:type rdfs:Resource ;
  rdf:value 10 ;
  rdfs:label "Количество отображаемых элементов по-умолчанию"@ru ;
  rdfs:label "Default displayed elements count"@en ;
.
v-ui:forClass
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:ClassTemplate ;
  rdfs:domain v-ui:ClassModel ;
  rdfs:domain v-ui:PropertySpecification ;
  rdfs:domain v-s:ReportsForClass ;
  rdfs:label "Для класса"@ru ;
  rdfs:label "For class"@en ;
  rdfs:range owl:Class ;
.
v-ui:forProperty
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:PropertySpecification ;
  rdfs:label "Для свойства"@ru ;
  rdfs:label "For property"@en ;
  rdfs:range owl:DatatypeProperty, owl:ObjectProperty, rdf:Property ;
.
v-ui:hasTemplate
  rdf:type owl:ObjectProperty ;
  rdfs:domain rdfs:Resource ;
  rdfs:label "Шаблон"@ru ;
  rdfs:label "Template"@en ;
  rdfs:range v-ui:ClassTemplate ;
.
v-ui:hasModel
  rdf:type owl:ObjectProperty ;
  rdfs:domain rdfs:Resource ;
  rdfs:label "Модель"@ru ;
  rdfs:label "Model"@en ;
  rdfs:range v-ui:ClassModel ;
.
v-ui:ClassModel
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:SystemThing ;
  rdfs:label "Модель класса"@ru ;
  rdfs:label "Class model"@en ;
.
v-ui:template
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:ClassTemplate ;
  rdfs:label "Шаблон"@ru ;
  rdfs:label "Template"@en ;
  rdfs:range xsd:string ;
.
v-ui:ClassTemplate
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:SystemThing ;
  rdfs:label "Шаблон"@ru ;
  rdfs:label "Template"@en ;
.

v-ui:PropertySpecification
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:SystemThing ;
  rdfs:label "Спецификация свойства"@ru ;
  rdfs:label "Property specification"@en ;
.
v-ui:tooltip
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:PropertySpecification ;
  rdfs:label "Подсказка"@ru ;
  rdfs:label "Tooltip"@en ;
  rdfs:range xsd:string ;
.
v-ui:alternativeName
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:PropertySpecification ;
  rdfs:label "Альтернативное наименование предиката"@ru ;
  rdfs:label "Alternative name for predicate"@en ;
  rdfs:range xsd:string ;
.
v-ui:placeholder
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:PropertySpecification ;
  rdfs:label "Заполнитель"@ru ;
  rdfs:label "Placeholder"@en ;
  rdfs:range xsd:string ;
.
v-ui:trueLabel
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:DatatypePropertySpecification ;
  rdfs:label "Истинное значение"@ru ;
  rdfs:label "True value"@en ;
  rdfs:range xsd:string ;
.
v-ui:falseLabel
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:DatatypePropertySpecification ;
  rdfs:label "Ложное значение"@ru ;
  rdfs:label "False value"@en ;
  rdfs:range xsd:string ;
.
v-ui:minCardinality
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:PropertySpecification ;
  rdfs:label "Минимальная кардинальность"@ru ;
  rdfs:label "Minimal cardinality"@en ;
  rdfs:comment "Значений меньше чем требуется"@ru ;
  rdfs:comment "Less values than required"@en ;
  rdfs:range xsd:integer ;
.
v-ui:maxCardinality
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:PropertySpecification ;
  rdfs:label "Максимальная кардинальность"@ru ;
  rdfs:label "Maximal cardinality"@en ;
  rdfs:comment "Значений больше чем требуется"@ru ;
  rdfs:comment "More values than required"@en ;
  rdfs:range xsd:integer ;
.
v-ui:defaultValue
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:PropertySpecification ;
  rdfs:label "Значение по-умолчанию"@ru ;
  rdfs:label "Default value"@en ;
  rdfs:range rdfs:Resource ;
.
v-ui:optionValue
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:PropertySpecification ;
  rdfs:label "Допустимое значение"@ru ;
  rdfs:label "Option value"@en ;
  rdfs:range rdfs:Resource ;
.
v-ui:DatatypePropertySpecification
  rdf:type owl:Class ;
  rdfs:subClassOf v-ui:PropertySpecification ;
  rdfs:label "Спецификация литерального свойства"@ru ;
  rdfs:label "Datatype property specification"@en ;
.
v-ui:regexp
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:DatatypePropertySpecification ;
  rdfs:label "Регулярное выражение"@ru ;
  rdfs:label "Regular expression"@en ;
  rdfs:comment "Значение не соответствует регулярному выражению"@ru ;
  rdfs:comment "Value does not match the regular expression"@en ;
  rdfs:range xsd:string ;
.
v-ui:minValue
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:DatatypePropertySpecification ;
  rdfs:label "Минимальное значение"@ru ;
  rdfs:label "Minimal value"@en ;
  rdfs:comment "Значение меньше минимума"@ru ;
  rdfs:comment "Value is less than minimum"@en ;
  rdfs:range rdfs:Resource ;
.
v-ui:maxValue
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:DatatypePropertySpecification ;
  rdfs:label "Максимальное значение"@ru ;
  rdfs:label "Maximal value"@en ;
  rdfs:comment "Значение больше максимума"@ru ;
  rdfs:comment "Value is greater than maximum"@en ;
  rdfs:range rdfs:Resource ;
.
v-ui:minLength
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:DatatypePropertySpecification ;
  rdfs:label "Минимальная длина строки"@ru ;
  rdfs:label "Minimal string length"@en ;
  rdfs:comment "Длина строки меньше допустимой"@ru ;
  rdfs:comment "String length is less than allowed"@en ;
  rdfs:range xsd:integer ;
.
v-ui:maxLength
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:DatatypePropertySpecification ;
  rdfs:label "Максимальная длина строки"@ru ;
  rdfs:label "Maximal string length"@en ;
  rdfs:comment "Длина строки больше допустимой"@ru ;
  rdfs:comment "String length is greater than allowed"@en ;
  rdfs:range xsd:integer ;
.
v-ui:ObjectPropertySpecification
  rdf:type owl:Class ;
  rdfs:subClassOf v-ui:PropertySpecification ;
  rdfs:label "Спецификация объектного свойства"@ru ;
  rdfs:label "Object property specification"@en ;
.
v-ui:rangeRestriction
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:ObjectPropertySpecification ;
  rdfs:label "Ограничение области значений"@ru ;
  rdfs:label "Range restriction"@en ;
  rdfs:range owl:Class ;
  rdfs:range rdfs:Class ;
.
v-ui:queryPrefix
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:ObjectPropertySpecification ;
  rdfs:label "Префикс запроса"@ru ;
  rdfs:label "Query prefix"@en ;
  rdfs:range xsd:string ;
.
v-ui:sort
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:ObjectPropertySpecification ;
  rdfs:label "Сортировка"@ru ;
  rdfs:label "Sorting"@en ;
  rdfs:range xsd:string ;
.

v-ui:Tree
  rdf:type owl:Class ;
  rdfs:label "Дерево"@ru ;
  rdfs:label "Tree"@en ;
.

v-ui:treeRoot
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:ObjectPropertySpecification ;
  rdfs:domain v-ui:Tree ;
  rdfs:label "Корень"@ru ;
  rdfs:label "Root"@en ;
  rdfs:range rdfs:Resource ;
.
v-ui:treeInProperty
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:ObjectPropertySpecification ;
  rdfs:domain v-ui:Tree ;
  rdfs:label "Входящая ветвь"@ru ;
  rdfs:label "In edge"@en ;
  rdfs:range owl:ObjectProperty ;
.
v-ui:treeOutProperty
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:ObjectPropertySpecification ;
  rdfs:domain v-ui:Tree ;
  rdfs:label "Исходящая ветвь"@ru ;
  rdfs:label "Out edge"@en ;
  rdfs:range owl:ObjectProperty ;
.
v-ui:treeAllowedClass
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:ObjectPropertySpecification ;
  rdfs:domain v-ui:Tree ;
  rdfs:label "Разрешенный класс"@ru ;
  rdfs:label "Allowed class"@en ;
  rdfs:range owl:Class ;
  rdfs:range rdfs:Class ;
.
v-ui:treeAllowedFilter
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:ObjectPropertySpecification ;
  rdfs:domain v-ui:Tree ;
  rdfs:label "Фильтр отображаемых субъектов"@ru ;
  rdfs:label "Allowed filter"@en ;
  rdfs:range xsd:string ;
.
v-ui:treeSelectableClass
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:ObjectPropertySpecification ;
  rdfs:domain v-ui:Tree ;
  rdfs:label "Выбираемый класс"@ru ;
  rdfs:label "Selectable class"@en ;
  rdfs:range owl:Class ;
  rdfs:range rdfs:Class ;
.
v-ui:treeSelectableFilter
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:ObjectPropertySpecification ;
  rdfs:domain v-ui:Tree ;
  rdfs:label "Фильтр выбираемых субъектов"@ru ;
  rdfs:label "Selectable filter"@en ;
  rdfs:range xsd:string ;
.
v-ui:treeDisplayedProperty
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:ObjectPropertySpecification ;
  rdfs:domain v-ui:Tree ;
  rdfs:label "Отображаемое свойство"@ru ;
  rdfs:label "Displayed property"@en ;
  rdfs:range owl:ObjectProperty ;
  rdfs:range owl:DatatypeProperty ;
.
v-ui:TemplateSpecification
  rdf:type owl:Class ;
  rdfs:subClassOf v-ui:PropertySpecification ;
  rdfs:label "Спецификация шаблона класса"@ru ;
  rdfs:label "Template specification"@en ;
.
v-ui:defaultTemplate
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:TemplateSpecification ;
  rdfs:label "Шаблон по умолчанию"@ru ;
  rdfs:label "Default template"@en ;
  rdfs:range v-ui:ClassTemplate ;
.
v-ui:Language
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:SystemThing ;
  rdfs:label "Язык"@ru ;
  rdfs:label "Language"@en ;
.
v-ui:Preferences
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:SystemThing ;
  rdfs:subClassOf v-s:Embedded ;
  rdfs:label "Предпочтения"@ru ;
  rdfs:label "Preferences"@en ;
.
v-ui:hasPreferences
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-s:Person ;
  rdfs:label "Предпочтения"@ru ;
  rdfs:label "Preferences"@en ;
  rdfs:range v-ui:Preferences ;
.
v-ui:displayedElements
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:Preferences ;
  rdfs:label "Отображать элементов"@ru ;
  rdfs:label "Display elements"@en ;
  rdfs:range xsd:nonNegativeInteger ;
.
v-ui:fullWidth
  rdf:type owl:DatatypeProperty ;
  rdfs:domain v-ui:Preferences ;
  rdfs:label "Во всю ширину"@ru ;
  rdfs:label "Full width"@en ;
  rdfs:range xsd:boolean ;
.
v-ui:receiveMessageType
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:Preferences ;
  rdfs:label "Принимать эти сообщения"@ru ;
  rdfs:label "Receive these messages"@en ;
  rdfs:range v-s:MessageType ;
.
v-ui:rejectMessageType
  rdf:type owl:ObjectProperty ;
  rdfs:domain v-ui:Preferences ;
  rdfs:label "Отказаться от этих сообщений"@ru ;
  rdfs:label "Reject these messages"@en ;
  rdfs:range v-s:MessageType ;
.

#----------------for dropdown----------------------------------
d:2078749d2bcf42e0ae80c5d8287d19d1
  rdf:type v-s:TransportKind ;
  rdfs:label "Авиатранспорт"@ru;
  rdfs:label "Air transport"@en;
  v-s:updateCounter "1"^^xsd:integer.

d:177b4624ed3f4ce6a1c89d7a3bd4f1c1
  rdf:type v-s:TransportKind ;
  rdfs:label "Железнодорожный транспорт"@ru;
  rdfs:label "Railway transport"@en;
  v-s:updateCounter "1"^^xsd:integer.

d:62fbbbc27f8e407c8f51de71e10d0501
  rdf:type v-s:TransportKind ;
  rdfs:label "Автобус"@ru;
  rdfs:label "Bus"@en;
  v-s:updateCounter "1"^^xsd:integer.

v-s:hasTransportKind
  rdf:type owl:ObjectProperty ;
  rdfs:label "Вид транспорта"@ru ;
  rdfs:label "Transport kind"@en ;
  rdfs:range v-s:TransportKind ;
.
v-s:hasTransportKindSingle
  rdf:type owl:ObjectProperty ;
  rdfs:label "Вид транспорта единичный"@ru ;
  rdfs:label "Transport kind single"@en ;
  rdfs:range v-s:TransportKind ;
.
v-s:PS_hasTransportKind_TestUi
  rdf:type v-ui:PropertySpecification ;
  v-ui:forClass v-ui:TestUIClass ;
  v-ui:forProperty v-s:hasTransportKind ;
  v-ui:minCardinality 0 ;
  v-ui:maxCardinality 100 ;
  rdfs:label "Спецификация свойства v-s:hasTransportKind для класса v-ui:TestUIClass"@ru ;
  rdfs:label "v-s:hasTransportKind property specification for v-ui:TestUIClass"@en ;
.
v-s:PS_hasTransportKindSingle_TestUi
  rdf:type v-ui:PropertySpecification ;
  v-ui:forClass v-ui:TestUIClass ;
  v-ui:forProperty v-s:hasTransportKindSingle ;
  v-ui:minCardinality 0 ;
  v-ui:maxCardinality 1 ;
  rdfs:label "Спецификация свойства v-s:hasTransportKind для класса v-ui:TestUIClass"@ru ;
  rdfs:label "v-s:hasTransportKind property specification for v-ui:TestUIClass"@en ;
.
v-s:TransportKind
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:UserThing ;
  rdfs:label "Вид транспорта"@ru ;
  rdfs:label "Transport kind"@en ;
.
# --------------- System properties template ------------------

v-ui:ExitButtonTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон кнопки выхода"@ru ;
  rdfs:label "Exit button template"@en ;
  v-ui:template """
<script>
  template.tooltip({
    container: template,
    placement: "bottom",
    trigger: "hover",
    title: individual["rdfs:label"].map(veda.Util.formatValue).join(" ")
  });
  template.click(function(e) {
    e.preventDefault();
    veda.logout();
  });
  //# sourceURL=v-ui:ExitButtonTemplate_pre
</script>
<a href="#" data-toggle="tooltip" data-trigger="hover" data-placement="bottom">
  <span class="glyphicon glyphicon-log-out"></span> <span class="label label-default"></span>
</a>
  """
.

v-ui:AdministrationIconTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон иконки панели администратора"@ru ;
  rdfs:label "Administration button template"@en ;
  v-ui:template """
<script>
  return veda.user.isMemberOf("cfg:SuperUser").then(function (isSuperUser) {
    if (!isSuperUser) {
      template.hide();
    } else {
      template.tooltip({
        container: template,
        placement: "bottom",
        trigger: "hover",
        title: individual["rdfs:label"].map(veda.Util.formatValue).join(" ")
      });
    }
  });
  //# sourceURL=v-ui:AdministrationIconTemplate_pre
</script>
<a href="#/v-s:AdministrationAspect" data-toggle="tooltip" data-trigger="hover" data-placement="bottom">
  <span class="fa fa-cog fa-lg"></span> <span class="label label-default"></span>
</a>
  """
.

v-ui:LanguageSwitchTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон переключения языка"@ru ;
  rdfs:label "Language switch template"@en ;
  v-ui:template """
<div about="@" class="btn-group" rel="rdf:value">
  <button about="@" property="rdfs:label" class="lang btn btn-xs btn-default navbar-btn"></button>
</div>
<script>
  var switchBehavior = container.attr("data-switch-behavior") || "checkbox";
  var switches = $(".btn", template);
  veda.user.preferences.on("v-ui:preferredLanguage", langHandler);
  template.one("remove", function () {
    veda.user.preferences.off("v-ui:preferredLanguage", langHandler);
  });
  langHandler();
  template.on("click", "button.lang", toggleLanguage);
  function langHandler() {
    var preferredLanguage = veda.user.preferences["v-ui:preferredLanguage"].map(function (language) { return language.id; });
    switches.each(function () {
      var $this = $(this);
      var lang_uri = $this.attr("resource");
      if (preferredLanguage.indexOf(lang_uri) > -1) {
        $this.addClass("active btn-success").removeClass("btn-default");
      } else {
        $this.removeClass("active btn-success").addClass("btn-default");
      }
    });
  }
  function toggleLanguage (e) {
    e.stopPropagation();
    var target = $(e.target);
    var lang_uri = target.attr("resource");
    var lang = new veda.IndividualModel(lang_uri);
    var lang_name = lang["rdf:value"][0].toString();
    var hasLanguage = veda.user.preferences.hasValue("v-ui:preferredLanguage", lang);
    var languageCount = veda.user.preferences["v-ui:preferredLanguage"].length;
    if ( !hasLanguage ) {
      if (switchBehavior === "checkbox") {
        veda.user.preferences.addValue("v-ui:preferredLanguage", lang);
      } else {
        veda.user.preferences.set("v-ui:preferredLanguage", [lang]);
      }
    } else if ( hasLanguage && languageCount > 1 ) {
      veda.user.preferences.removeValue("v-ui:preferredLanguage", lang);
    } else {
      return;
    }
  };
  //# sourceURL=v-ui:LanguageSwitchTemplate
</script>

  """
.
v-ui:FullWidthSwitchTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон переключения режима на всю ширину"@ru ;
  rdfs:label "Full width switch template"@en ;
  v-ui:template """
<script>
  template.click(function () {
    try {
      var value = veda.user.preferences["v-ui:fullWidth"][0];
      veda.user.preferences["v-ui:fullWidth"] = [ !value ];
      veda.user.preferences.save();
    } catch (error) {
      console.log("Full width switch error", error);
    }
  });
  veda.user.preferences.on("v-ui:fullWidth", widthHandler);
  template.one("remove", function () {
    veda.user.preferences.off("v-ui:fullWidth", widthHandler);
  });
  widthHandler();
  function widthHandler() {
    var style = $("#full-width-style", template);
    if (veda.user.preferences.hasValue("v-ui:fullWidth", true) ) {
      style.attr("media", "all");
      template.removeClass("btn-default").addClass("btn-success active");
    } else {
      style.attr("media", "not all");
      template.addClass("btn-default").removeClass("btn-success active");
    }
  }
  return new veda.IndividualModel("v-s:ChangeSizeBundle").load().then(function(changeSizeBundle) {
    template.tooltip({
      container: template,
      placement: "bottom",
      trigger: "hover",
      title: changeSizeBundle["rdfs:label"].map(veda.Util.formatValue).join(" ")
    });
  })
  //# sourceURL=v-ui:FullWidthSwitchTemplate
</script>
<button class="btn btn-xs btn-default navbar-btn">
  <span class="glyphicon glyphicon-fullscreen"></span>
  <style id="full-width-style" media="not all">
    .container {
      width: 98%!important;
      margin-left: 1%!important;
      margin-right: 1%!important;
    }
  </style>
</button>
  """
.

v-ui:SystemPropertiesTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон с набором системных свойств"@ru ;
  rdfs:label "Template with system properties"@en ;
  rdfs:comment "Системные свойства"@ru ;
  rdfs:comment "System properties"@en ;
  v-ui:template """
<div>
  <h3 about="v-ui:SystemPropertiesTemplate" property="rdfs:comment"></h3>
  <div class="row">
    <div class="col-md-3 col-xs-6">
      <em about="v-s:creator" property="rdfs:label"></em>
      <veda-control data-type="link" rel="v-s:creator" class="-view -edit search fulltext"></veda-control>
      <div about="@" rel="v-s:creator" data-template="v-ui:LabelTemplate" class="view edit -search"></div>
      <div rel="v-s:creator" data-template="v-ui:LabelTemplate" class="-view -edit search"></div>
    </div>
    <div class="col-md-3 col-xs-6">
      <em about="v-s:created" property="rdfs:label"></em>
      <veda-control property="v-s:created" data-type="date" class="-view -edit search"></veda-control>
      <div about="@" property="v-s:created" class="view edit -search"></div>
      <div property="v-s:created" class="-view -edit search"></div>
    </div>
    <div class="col-md-3 col-xs-6">
      <em about="v-s:lastEditor" property="rdfs:label"></em>
      <veda-control data-type="link" rel="v-s:lastEditor" class="-view -edit search fulltext"></veda-control>
      <div about="@" rel="v-s:lastEditor" data-template="v-ui:LabelTemplate" class="view edit -search"></div>
      <div rel="v-s:lastEditor" data-template="v-ui:LabelTemplate" class="-view -edit search"></div>
    </div>
    <div class="col-md-3 col-xs-6">
      <em about="v-s:edited" property="rdfs:label"></em>
      <veda-control data-type="date" property="v-s:edited" class="-view -edit search"></veda-control>
      <div about="@" property="v-s:edited" class="view edit -search"></div>
      <div property="v-s:edited" class="-view -edit search"></div>
    </div>
  </div>
</div>
""" ;
.

v-s:CreatedBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Создано"@ru ;
  rdfs:label "Created"@en ;
.
v-s:EditedBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Отредактировано"@ru ;
  rdfs:label "Edited"@en ;
.

v-ui:SystemPropertiesNewTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон с набором системных свойств"@ru ;
  rdfs:label "Template with system properties"@en ;
  rdfs:comment "Системные свойства"@ru ;
  rdfs:comment "System properties"@en ;
  v-ui:template """
<div>
  <section id="SystemProperties">
    <h4 class="section-header" about="v-ui:SystemPropertiesTemplate" property="rdfs:comment"></h4>
    <div class="row row-attribute">
      <div class="col-sm-3 col-xs-5">
        <label about="v-s:CreatedBundle" property="rdfs:label"></label>
      </div>
      <div class="col-sm-9 col-xs-7">
        <div class="row">
          <div class="col-sm-6 col-xs-6">
            <veda-control data-type="link" rel="v-s:creator" class="-view -edit search fulltext"></veda-control>
            <div about="@" rel="v-s:creator" data-template="v-ui:LabelTemplate" class="view edit -search"></div>
            <div rel="v-s:creator" data-template="v-ui:LabelTemplate" class="-view -edit search"></div>
          </div>
          <div class="col-sm-6 col-xs-6">
            <veda-control property="v-s:created" data-type="date" class="-view -edit search"></veda-control>
            <div about="@" property="v-s:created" class="view edit -search"></div>
            <div property="v-s:created" class="-view -edit search"></div>
          </div>
        </div>
      </div>
    </div>
    <div class="row row-attribute">
      <div class="col-sm-3 col-xs-5">
        <label about="v-s:EditedBundle" property="rdfs:label"></label>
      </div>
      <div class="col-sm-9 col-xs-7">
        <div class="row">
          <div class="col-sm-6 col-xs-6">
            <veda-control data-type="link" rel="v-s:lastEditor" class="-view -edit search fulltext"></veda-control>
            <div about="@" rel="v-s:lastEditor" data-template="v-ui:LabelTemplate" class="view edit -search"></div>
            <div rel="v-s:lastEditor" data-template="v-ui:LabelTemplate" class="-view -edit search"></div>
          </div>
          <div class="col-sm-6 col-xs-6">
            <veda-control data-type="date" property="v-s:edited" class="-view -edit search"></veda-control>
            <div about="@" property="v-s:edited" class="view edit -search"></div>
            <div property="v-s:edited" class="-view -edit search"></div>
          </div>
        </div>
      </div>
    </div>
  </section>
</div>
""" ;
.


v-ui:StandardButtonsTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон с набором стандартных кнопок"@ru ;
  rdfs:label "Template with standard buttons"@en ;
  rdfs:comment "Действия"@ru ;
  rdfs:comment "Actions"@en ;
  v-ui:template """
<script>
  $("#refresh", template).on("click", refresh);

  function refresh() {
    template.parent().closest("[resource]").find("[resource]").addBack("[resource]").each(function () {
      var uri = $(this).attr("resource");
      var resource = new veda.IndividualModel(uri);
      resource.is("v-s:UserThing").then(function (isUserThing) {
        if (isUserThing) { resource.reset(); }
      });
    });
  }

  var toRefresh;

  function statusHandler(status) {
    if ( status === "online" || status === "offline" ) {
      toRefresh = false;
      $("#refresh", template).addClass("hidden");
    } else if ( status === "limited" ) {
      toRefresh = true;
      $("#refresh", template).removeClass("hidden");
    }
  }
  veda.on("status", statusHandler);
  template.one("remove", function () {
    veda.off("status", statusHandler);
  });

  // var allButtons = "send edit save cancel delete destroy journal journal-dms task rights";
  var defaultButtons = "send edit save cancel delete journal task";
  individual.rights.then(function (rights) {
    var canUpdate = rights.hasValue("v-s:canUpdate", true);
    var canDelete = rights.hasValue("v-s:canDelete", true);
    var enabledButtons = (container.data("buttons") || defaultButtons).trim().replace(/\\s+/g, " ").split(" ");
    enabledButtons.forEach(function (id) {
      if ( !canUpdate && (id === "save" || id === "edit" || id === "cancel") ) { return; }
      if ( !canDelete && (id === "delete" || id === "destroy") ) { return; }
      $("#" + id, template).removeClass("rm hidden");
    });
    $(".rm", template).remove();
  });

  template.on("click", "#edit, #save, #cancel, #delete, #destroy", function (e) {
    e.preventDefault();
    var action = this.id;
    if (action === "destroy") {
      var warning = new veda.IndividualModel("v-s:AreYouSure");
      warning.load().then(function (warning) {
        if ( confirm( warning["rdfs:label"].map(veda.Util.formatValue).join(" ") ) ) {
          template.parent().closest("[resource]").trigger(action);
        }
      });
    }
    else if(action === "delete"){
      var queryString = "'rdf:type'==='v-wf:DecisionForm' && 'v-wf:onDocument'=='" + individual.id + "' && 'v-wf:isCompleted'==false";
      veda.Backend.query(veda.ticket, queryString).then(function (queryResult) {
        var tmp = queryResult.result;
        if (tmp.length == 0) {
          var warning = new veda.IndividualModel("v-s:AreYouSure");
          warning.load().then(function (warning) {
            if ( confirm( warning["rdfs:label"].map(veda.Util.formatValue).join(" ") ) ) {
              template.parent().closest("[resource]").trigger(action);
            }
          });
        }
        else {
          alert("Документ не может быть удален, так как по нему есть незакрытые задачи. Закройте все задачи и попробуйте ещё раз");
        }
      });
    }
    else {
      template.parent().closest("[resource]").trigger(action);
    }
  });
  $("#cancel", template).on("click", function () {
    template.closest(".modal").modal("hide").remove();
  });
  $("#journal", template).on("click", function (e) {
    e.preventDefault();
    var journal_uri = individual.id + "j",
        journal = new veda.IndividualModel(journal_uri);
    journal.load().then(function (journal) {
      if ( !journal.isNew() ) {
        riot.route("#/" + journal_uri);
      } else {
        var journalEmpty = new veda.IndividualModel("v-s:JournalEmpty").load().then(function (journalEmpty) {
          alert(journalEmpty.toString());
        });
      }
    });
  });
  $("#journal-dms", template).on("click", function (e) {
    var uri = individual.id.substring(2);
    var journalDMS_cfg = new veda.IndividualModel("cfg:JournalDMSUrl").load()
      .then(function (journalDMS_cfg) {
        return journalDMS_cfg["rdf:value"][0];
      })
      .then(function (journalDMS_url) {
        if (journalDMS_url) {
          window.open(journalDMS_url + uri, "journal-dms");
        }
      });
  });
  $("#send", template).on("click", function (e) {
    veda.Util.send(individual, template.parent().closest("[resource]"));
  });
  $("#edit", template).on("click", function (e) {
    if (toRefresh) {
      refresh();
    }
  });
  $("#rights", template).on("click", function () {
    veda.Util.showRights(individual);
  });

  // Standard tasks
  template.on("click", "ul#standard-tasks a", function (e) {
    e.preventDefault();
    var startFormTransform = $(this).attr("about");
    veda.Util.send(individual, template, startFormTransform, true);
  });

  //# sourceURL=v-ui:StandardButtonsTemplate_pre
</script>
<span>
  <button type="refresh" class="btn btn-success view -edit -search hidden" id="refresh"><span class="glyphicon glyphicon-refresh"></span></button>
  <button type="submit" class="rm hidden action btn btn-warning allButtons view edit -search" id="send" about="v-s:Send" property="rdfs:label"></button>
  <button type="button" class="rm hidden action btn btn-primary allButtons view -edit -search" id="edit"><span about="v-s:Edit" property="rdfs:label"></span></button>
  <button type="submit" class="rm hidden action btn btn-success allButtons -view edit -search" id="save" about="v-s:Save" property="rdfs:label"></button>
  <button type="button" class="rm hidden action btn btn-default allButtons -view edit -search" id="cancel"><span about="v-s:Cancel" property="rdfs:label"></span></button>
  <button type="button" class="rm hidden action btn btn-link allButtons view -edit -search" id="delete" about="v-s:Delete" property="rdfs:label"></button>
  <button type="button" class="rm hidden action btn btn-danger allButtons view edit -search" id="destroy" about="v-s:Destroy" property="rdfs:label"></button>
  <button type="button" class="rm hidden action btn btn-default allButtons view -edit -search" id="journal" about="v-s:ViewJournal" property="rdfs:label"></button>
  <button type="button" class="rm hidden action btn btn-default allButtons view -edit -search" id="journal-dms" about="v-s:ViewJournalDMS" property="rdfs:label"></button>
  <button type="button" class="rm hidden action btn btn-default allButtons view -edit -search" id="rights" about="v-s:Rights" property="rdfs:label"></button>
  <div class="rm hidden action btn-group dropup allButtons view -edit -search" id="task">
    <button class="action btn btn-warning btn-block dropdown-toggle" id="task-button" data-toggle="dropdown">
      <span about="v-s:SendTask" property="rdfs:label"> </span>
      <span class="caret"></span>
    </button>
    <ul class="dropdown-menu" id="standard-tasks">
      <li><a href="#" about="v-wf:questionRouteStartForm" property="rdfs:label"></a></li>
      <li><a href="#" about="v-wf:instructionRouteStartForm" property="rdfs:label"></a></li>
      <li><a href="#" about="v-wf:taskRouteStartForm" property="rdfs:label"></a></li>
      <li><a href="#" about="v-wf:coordinationRouteStartForm" property="rdfs:label"></a></li>
      <li><a href="#" about="v-wf:signRouteStartForm" property="rdfs:label"></a></li>
      <li><a href="#" about="v-wf:confirmationRouteStartForm" property="rdfs:label"></a></li>
      <li class="divider"></li>
      <li><a href="#" about="v-wf:distributionRouteStartForm" property="rdfs:label"></a></li>
    </ul>
  </div>
  <button type="button" class="btn btn-link view edit -search action toggle-actions hidden">
    <span class="glyphicon glyphicon-chevron-left"></span>
  </button>
</span>
<script>
  function hiddenButtonsForDeleted(){
    if(individual.hasValue("v-s:deleted",true) && veda.appointment.id !== "cfg:AdministratorAppointment"){
       $(".allButtons", template).addClass("hidden");
    }
    else {$(".allButtons", template).removeClass("hidden");}
  }
  hiddenButtonsForDeleted();
  individual.on("v-s:deleted", hiddenButtonsForDeleted);
  template.one("remove", function () {
    individual.off("v-s:deleted", hiddenButtonsForDeleted);
  });





  $(".toggle-actions", template).click(function () {
    template.closest(".actions").children(":not(.toggle-actions)").toggleClass("hidden");
    var button = $(this);
    button.find(".glyphicon").toggleClass("glyphicon-chevron-left glyphicon-chevron-right");
    button.find(".description").toggleClass("hidden");
    button.toggleClass("btn-link btn-info");
  });

  // Make position fixed for buttons bar that doesn't fit the window
  function checkOffset(main, actions, actionsStaticHeight, placeholder) {
    var mainTop = main.offset().top;
    var mainHeight = main.height();
    var windowHeight = window.innerHeight;
    var windowTop = window.scrollY || window.pageYOffset;
    var actionsStaticTop = placeholder.offset().top;
    var actions_inside_viewport = windowTop <= actionsStaticTop && actionsStaticTop < (windowTop + windowHeight);
    var main_inside_viewport = windowTop <= (mainTop + mainHeight - actionsStaticHeight) && (mainTop + actionsStaticHeight) < (windowTop + windowHeight);
    if ( !actions_inside_viewport && main_inside_viewport ) {
      if ( !actions.hasClass("actions-fixed") ) {
        placeholder.css("height", actionsStaticHeight);
        actions.addClass("actions-fixed");
      }
    } else {
      if ( actions.hasClass("actions-fixed") ) {
        placeholder.css("height", 0);
        actions.removeClass("actions-fixed");
      }
    }
  }
  setTimeout(function () {
    var main = template.parent().closest("[resource]");
    if (!main.length) { return; }
    var actions = template.closest(".actions");
    if (!actions.length) { return; }
    var actionsStaticHeight = actions.height();
    var placeholder = $("<div></div>").insertBefore(actions);
    checkOffset(main, actions, actionsStaticHeight, placeholder);
    $(window).on("scroll", scrollHandler);
    template.one("remove", function () {
      $(window).off("scroll", scrollHandler);
    });
    $(".toggle-actions", template).detach().appendTo(actions).removeClass("hidden");
    function scrollHandler () {
      checkOffset(main, actions, actionsStaticHeight, placeholder);
    }
  }, 500);

  // Respect validation state of parent template
  var closest = template.parent().closest("[resource]");
  closest.on("internal-validated", function (e, validation) {
    if (validation.state) {
      $(".action#save", template).removeAttr("disabled");
      $(".action#send", template).removeAttr("disabled");
      $(".action#task-button", template).removeAttr("disabled");
    } else {
      $(".action#save", template).attr("disabled", "disabled");
      $(".action#send", template).attr("disabled", "disabled");
      $(".action#task-button", template).attr("disabled", "disabled");
    }
    e.stopPropagation();
  });
  //# sourceURL=v-ui:StandardButtonsTemplate_post
</script>
""" ;
.
v-ui:IconButtonsTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон с набором стандартных кнопок"@ru ;
  rdfs:label "Template with standard buttons"@en ;
  v-ui:template """
<script>
  // var allButtons = "edit save cancel delete";
  var defaultButtons = "edit save cancel delete";
  individual.rights.then(function (rights) {
    var canUpdate = rights.hasValue("v-s:canUpdate", true);
    var canDelete = rights.hasValue("v-s:canDelete", true);
    var enabledButtons = (container.data("buttons") || defaultButtons).split(" ");
    enabledButtons.forEach(function (id) {
      if ( !canUpdate && (id === "save" || id === "edit" || id === "cancel") ) { return; }
      if ( !canDelete && (id === "delete") ) { return; }
      $("#" + id, template).removeClass("rm");
    });
    $(".rm", template).remove();
  });

  template.on("click", "#edit, #save, #cancel, #delete", function (e) {
    e.preventDefault();
    var action = this.id;
    if (action === "delete") {
      var warning = new veda.IndividualModel("v-s:AreYouSure");
      warning.load().then(function (warning) {
        if ( confirm( warning["rdfs:label"].map(veda.Util.formatValue).join(" ") ) ) {
          template.parent().closest("[resource]").trigger(action);
        }
      });
    } else {
      template.parent().closest("[resource]").trigger(action);
    }
  });

  //# sourceURL=v-ui:IconButtonsTemplate_pre
</script>
<span>
  <button title="v-s:Edit" type="button" class="action btn btn-xs btn-default view -edit -search glyphicon glyphicon-pencil" id="edit"></button>
  <button title="v-s:Save" type="button" class="action btn btn-xs btn-success -view edit -search glyphicon glyphicon-ok" id="save"></button>
  <button title="v-s:Cancel" type="button" class="action btn btn-xs btn-default -view edit -search glyphicon glyphicon-repeat" id="cancel"></button>
  <button title="v-s:Delete" type="button" class="action btn btn-xs btn-default view edit -search glyphicon glyphicon-remove" id="delete"></button>
</span>
<script>
  // Respect validation state of parent template
  var closest = template.parent().closest("[resource]");
  closest.on("internal-validated", function (e, validation) {
    if (validation.state) {
      $(".action#save", template).removeAttr("disabled");
    } else {
      $(".action#save", template).attr("disabled", "disabled");
    }
    e.stopPropagation();
  });
  //# sourceURL=v-ui:IconButtonsTemplate_post
</script>
""" ;
.

v-s:TS_Version
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-ui:VersionTemplate;
  v-ui:forClass v-s:Version
.
v-ui:VersionTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для класса v-s:Version"@ru ;
  rdfs:label "Template for class v-s:Version"@en ;
  v-ui:forClass v-s:Version ;
  v-ui:template """
<div class="alert alert-warning hidden">
  <p>
    <span about="v-s:VersionAlert" property="rdfs:label"></span>
    <span class="pull-right" about="@" rel="v-s:actualVersion">
      <a href="#/@" class="alert-link">
        <span about="v-s:actualVersion" property="rdfs:label"></span>&rarr;
      </a>
    </span>
  </p>
</div>
<script>
  setTimeout(function () {
    var renderedTemplates = $("[resource$='" + individual.id.substring(2) + "']");
    renderedTemplates.each(function () {
      var renderedTemplate = $(this);
      renderedTemplate.find("a, button").addClass("disabled").attr("disabled", "disabled");
      if ( renderedTemplate.parent().prop("id") === "main" ) {
        var sheet = renderedTemplate.children(".sheet").first();
        template.removeClass("hidden").prependTo(sheet.length ? sheet : renderedTemplate);
      }
    });
  }, 300);
  //# sourceURL=v-ui:VersionTemplate_post
</script>
""" ;
.
v-ui:VersionedTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для отображения версий объекта"@ru ;
  rdfs:label "Template for versions display"@en ;
  rdfs:comment "Версии"@ru ;
  rdfs:comment "Versions"@en ;
  v-ui:template """
<div>
  <h3 about="v-ui:VersionedTemplate" property="rdfs:comment"></h3>
  <div class="panel panel-default">
    <table class="table table-condensed">
      <thead>
        <tr class="active">
          <th width="1%">#</th>
          <th about="rdfs:label" property="rdfs:label"></th>
          <th about="v-s:created" property="rdfs:label"></th>
          <th about="v-s:creator" property="rdfs:label"></th>
        </tr>
      </thead>
      <tbody id="versions"></tbody>
      <tfoot>
        <tr>
          <td colspan="10" class="clearfix">
            <button class="pull-left btn btn-xs btn-primary glyphicon glyphicon-chevron-down"></button>
            <div class="pull-right">
              <span class="bg-info" style="padding:0px 5px;display: inline-block">Актуальная версия</span>
              <strong>Текущая версия</strong>
            </div>
          </td>
        </tr>
      </tfoot>
    </table>
  </div>
</div>
<script>
  var actual = individual.hasValue("v-s:actualVersion") ? individual["v-s:actualVersion"][0] : individual;
  var tmpl = ''
    + '<tr>'
      + '<td>#</td>'
      + '<td about="@" data-template="v-ui:LabelLinkTemplate" class="view edit -search"></td>'
      + '<td about="@" property="v-s:created" class="view edit -search"></td>'
      + '<td about="@" rel="v-s:creator" data-template="v-ui:LabelTemplate" class="view edit -search"></td>'
    + '</tr>';
  var tbody = $("#versions", template);
  var btn = $("button", template).click(function () {
    tbody.empty();
    renderVersion(actual, 1, -1);
  });
  renderVersion(actual, 1, 5);

  individual.on("v-s:previousVersion", versionHandler);
  template.one("remove", function () {
    individual.off("v-s:previousVersion", versionHandler);
  });
  function versionHandler() {
    tbody.empty();
    renderVersion(actual, 1, 5);
  }

  function renderVersion(current, counter, limit) {
    if (!current) { return btn.remove(); }
    if (!limit) { return; }
    return current.load().then(function (current) {
      var previous = current["v-s:previousVersion"][0];
      var row = tmpl.replace("#", counter);
      if (current.id === actual.id) { row = row.replace("<tr>", "<tr class='info'>"); }
      if (current.id === individual.id) { row = row.replace(/td/g, "th").replace("v-ui:LabelLinkTemplate", "v-ui:LabelTemplate"); }
      return current.present(tbody, row).then(function () {
        renderVersion(previous, ++counter, --limit);
      });
    });
  }
  //# sourceURL=v-ui:VersionedTemplate
</script>
""" ;
.

v-ui:IconPersonTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон персоны с иконкой"@ru ;
  rdfs:label "Person template with icon"@en ;
  v-ui:template """
<script>
  if (individual.hasValue("v-s:hasAspect")) {
    template.attr("href", "#/" + individual["v-s:hasAspect"][0].id);
  }
  return new veda.IndividualModel("v-s:PersonalInfo").load().then(function(personalInfo) {
    template.tooltip({
      container: template,
      placement: "bottom",
      trigger: "hover",
      title: personalInfo["rdfs:label"].map(veda.Util.formatValue).join(" ")
    });
  })
</script>
<a href="#/@" about="@" property="rdfs:label"></a>
""" ;
.

v-ui:AppointmentPopoverTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон назначения с фотографией"@ru ;
  rdfs:label "Appointment template with photo"@en ;
  v-ui:template """
<script>
  return individual.getChainValue("v-s:employee", "v-s:hasImage").then(function (image) {
    if (!image.length) {
      $(".media-left", template).remove();
    }
  });
</script>
<div class="media" style="margin-top:0px;">
  <span class="close">&nbsp;&times;</span>
  <div class="media-left" about="@" rel="v-s:employee" style="width:96px">
    <a href="#/@" about="@" rel="v-s:hasImage">
      <div about="@" rel="v-s:thumbnail" data-template="v-ui:ImageTemplate"></div>
    </a>
  </div>
  <div class="media-body" style="width:auto;">
    <strong class="media-heading" about="@" rel="v-s:employee">
      <span about="@" property="v-s:lastName"></span>
      <span about="@" property="v-s:firstName"></span>
      <span about="@" property="v-s:middleName"></span>
    </strong>
    <hr class="no-margin">
    <div about="@" rel="v-s:occupation">
      <div>
        <small about="@" property="v-s:title"></small>
      </div>
      <div>
        <small about="@" rel="v-s:parentUnit" data-template="v-ui:LabelTemplate"></small>
      </div>
    </div>
    <div about="@" rel="v-s:employee">
      <div about="@" rel="v-s:hasCommunicationMean">
        <div>
          <small about="@" property="v-s:description"></small>
        </div>
      </div>
    </div>
  </div>
</div>
  """ ;
.

v-ui:PersonPopoverTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон персоны с фотографией"@ru ;
  rdfs:label "Person template with photo"@en ;
  v-ui:template """
<script>
  if (!individual.hasValue("v-s:hasImage")) {
    $(".media-left", template).remove();
  }
</script>
<div class="media" style="margin-top:0px;">
  <span class="close">&nbsp;&times;</span>
  <div class="media-left" style="width:96px">
    <a href="#/@" about="@" rel="v-s:hasImage">
      <div about="@" rel="v-s:thumbnail" data-template="v-ui:ImageTemplate"></div>
    </a>
  </div>
  <div class="media-body" style="width:auto">
    <strong class="media-heading" about="@" property="rdfs:label"></strong>
    <hr class="no-margin">
    <div about="@" rel="v-s:hasAppointment">
      <small about="@" rel="v-s:occupation">
        <span about="@" property="rdfs:label"></span>
      </small>
    </div>
    <div about="@" rel="v-s:hasCommunicationMean">
      <div>
        <small about="@" property="v-s:description"></small>
      </div>
    </div>
  </div>
</div>
  """ ;
.
v-ui:PositionPopoverTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон должности"@ru ;
  rdfs:label "Position template"@en ;
  v-ui:template """
<script>
  return veda.Backend.query(veda.ticket, "'rdf:type'==='v-s:Appointment' && 'v-s:occupation'=='" + individual.id + "'").then(function(queryResult) {
    var promises = queryResult.result.map(function(uri) {
      return new veda.IndividualModel(uri).load();
    });
    return Promise.all(promises);
  }).then(function(appointments) {
    var personsPromises = appointments.map(function(appointment) {
      return appointment["v-s:employee"].length > 0 ? appointment["v-s:employee"][0].load() : Promise.resolve(false);
    });
    return Promise.all(personsPromises).then(function(persons) {
      var mBody = $("div.media-body", template);
      mBody.append('<hr class="no-margin">');
      appointments.forEach(function(appointment, i) {
        if (persons[i] && !persons[i].hasValue("v-s:deleted", true)) {
          mBody.append("<small>"+appointment["rdfs:label"][0]+"</small><br>");
        }
      });
      return true;
    });0
  })
  //# sourceURL=v-ui:PositionPopoverTemplate_pre
</script>
<div class="media" style="margin-top:0px;">
  <span class="close">&nbsp;&times;</span>
  <div class="media-body" style="width:auto">
    <strong class="media-heading" about="@" property="rdfs:label"></strong>
    <hr class="no-margin">
    <small about="@" rel="v-s:parentUnit" data-template="v-ui:LabelTemplate"></small>
  </div>
</div>
  """ ;
.

v-ui:ResourceTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для класса Ресурс"@ru ;
  rdfs:label "Template for Resource class"@en ;
  v-ui:forClass rdfs:Resource ;
  v-ui:template """
<script>
  var propСontainer = $(".properties-container", template);
  var tmpl = propСontainer.html();
  propСontainer.empty();
  var promises = Object.keys(this.properties).map(function (property_uri) {
    if (property_uri === "@" || property_uri === "rdf:type" || property_uri === "rdfs:label") { return; }
    var propRow = $(tmpl);
    propRow.find(".prop-name").attr({
      "about": property_uri,
      "property": "rdfs:label"
    });
    var property = new veda.IndividualModel(property_uri);
    return property.load().then(function (property) {
      var literalAttrs = {
        "about": "@",
        "property": property_uri
      }
      var objectAttrs = {
        "about": "@",
        "rel": property_uri,
        "data-template": "v-ui:LabelLinkTemplate"
      }
      if ( property.hasValue("rdfs:range") ) {
        if ( ["xsd:string", "xsd:integer", "xsd:decimal", "xsd:boolean", "xsd:Literal", "xsd:dateTime"].indexOf(property["rdfs:range"][0].id) >= 0  ) {
          propRow.find(".prop-value").attr(literalAttrs);
        } else {
          propRow.find(".prop-value").attr(objectAttrs);
        }
      } else {
        propRow.find(".prop-value").attr(literalAttrs);
      }
      propСontainer.append(propRow);
    })
  });
  return Promise.all(promises);
  //# sourceURL=v-ui:ResourceTemplate_pre
</script>
<div class="container sheet">
  <div class="clearfix">
    <h2 class="pull-left">
      <span about="@" rel="rdf:type" data-template="v-ui:LabelTemplate"></span>
      <small about="@" property="rdfs:label"></small>
      <small>(<span about="@" property="@"></span>)</small>
    </h2>
  </div>
  <div class="properties-container">
    <hr class="margin-sm">
    <div class="row">
      <div class="col-md-4 col-sm-6 text-right prop-name"></div>
      <div class="col-md-8 col-sm-6 prop-value"></div>
    </div>
  </div>
</div>
  """ ;
.

v-ui:ResourceSpec
  rdf:type v-ui:ObjectPropertySpecification ;
  rdfs:label "Спецификация типа для класса Resource"@ru ;
  rdfs:label "Type specification for Resource class"@en ;
  v-ui:forClass rdfs:Resource ;
  v-ui:forProperty rdf:type ;
  v-ui:minCardinality "1"^^xsd:integer ;
  v-ui:maxCardinality "10"^^xsd:integer ;
  v-ui:tooltip "Обязательно к заполнению, единственное значение. Ссылка на объект типа Класс."@ru ;
  v-ui:tooltip "Required, single value. Link to object of type Class"@en ;
  v-ui:queryPrefix "('rdf:type'=='owl:Class' || 'rdf:type'=='rdfs:Class')"^^xsd:string ;
.

v-s:TS_Bundle
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-ui:LabelTemplate;
  v-ui:forClass v-s:Bundle
.
v-ui:LabelTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон с меткой"@ru ;
  rdfs:label "Template with label"@en ;
  v-ui:template """
  <span class="label-template" about="@" property="rdfs:label"></span>
  <script>
    if (!individual.hasValue("rdfs:label")) {
      template.text(individual.id);
    }
    var done;
    var initPopoverTimeout;
    var type = individual.hasValue("rdf:type") && individual["rdf:type"][0].id;
    if ( type === "v-s:Appointment" || type === "v-s:Person" || type === "v-s:Position" ) {
      template.mouseenter(function () {
        if (done || initPopoverTimeout) { return; }
        initPopoverTimeout = setTimeout(initPopover, 750);
      }).mouseleave(function () {
        initPopoverTimeout = clearTimeout(initPopoverTimeout);
      }).one("remove", function () {
        template.popover("destroy");
      });
    }
    var initPopover = function () {
      var cntr = $("<div></div>");
      var tmpl;
      if (type === "v-s:Appointment") {
        tmpl = "v-ui:AppointmentPopoverTemplate";
      } else if (type === "v-s:Person") {
        tmpl = "v-ui:PersonPopoverTemplate";
      } else {
        tmpl = "v-ui:PositionPopoverTemplate";
      }
      individual.present(cntr, tmpl).then(function () {
        done = true;
        template.popover({
          trigger: "hover click",
          delay: { "show": 750, "hide": 100 },
          placement: "auto top",
          html: true,
          container: this,
          content: cntr
        }).popover("show");
        cntr.on("click", ".close", function (e) {
          e.stopPropagation();
          template.click();
        });
      });
    }
    //# sourceURL=v-ui:LabelTemplate
  </script>
  """ ;
.
v-ui:LabelTemplateWithEditLink
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон с меткой и ссылкой на страницу редактирования"@ru ;
  rdfs:label "Template with label & edit link"@en ;
  v-ui:template """
  <span class="label-template">
    # <a href="#/@///edit"><span id="label" property="rdfs:label"></span></a>
  </span>
  <script>
    if (!individual.hasValue("rdfs:label")) {
      $("#label", template).text(individual.id);
    }
    //# sourceURL=v-ui:LabelTemplateWithEditLink
  </script>
  """ ;
.
v-ui:LabelLinkTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон с меткой и ссылкой"@ru ;
  rdfs:label "Template with label & link"@en ;
  v-ui:template """
  <a class="label-template" href="#/@"><span about="@" property="rdfs:label"></span></a>
  <script>
    if (!individual.hasValue("rdfs:label")) {
      template.children().first().text(individual.id);
    }
    //# sourceURL=v-ui:LabelLinkTemplate
  </script>
  """ ;
.

v-ui:IconModalTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон с меткой и ссылкой"@ru ;
  rdfs:label "Template with label & link"@en ;
  v-ui:template """
<a href="#" class="glyphicon glyphicon-zoom-in" tabindex="-1"></a>
<script>
  template.on("click", function (e) {
    e.preventDefault();
    var newMode = container.data("mode");
    var parentTmpl = template.parent().closest("[resource]");
    if (!newMode && parentTmpl.attr("resource") === individual.id) {
      newMode = parentTmpl.data("mode");
    }

    if ( $("body").hasClass("modal-open")) {
      $(".modal").modal("hide").remove();
    };

    var modal = $("#notification-modal-template").html();
    modal = $(modal).modal({"show": false});
    $("body").append(modal);
    modal.modal("show");

    modal.find("#follow").click( function () {
      var resourceTemplate = modal.find("[resource]").first();
      var uri = resourceTemplate.attr("resource");
      var mode = resourceTemplate.data("mode");
      modal.modal("hide");
      riot.route( ["#", uri, "#main", undefined, mode].join("/") );
    });

    template.one("remove", function () {
      modal.modal("hide").remove();
    });
    var cntr = $(".modal-body", modal);
    var ok = $("#ok", modal);
    cntr.on("valid", function () {
      ok.removeAttr("disabled");
    });
    cntr.on("invalid", function () {
      ok.attr("disabled", "disabled");
    });

    individual.present(cntr, undefined, newMode).then(function (tmpl) {
      if (newMode === "edit") {
        ok.parent().removeClass("hide");
        tmpl.on("internal-validated", function (e, validation) {
          if (validation.state) {
            ok.removeAttr("disabled");
          } else {
            ok.attr("disabled", "disabled");
          }
          e.stopPropagation();
        });
        $(".actions", tmpl).remove();
      }
    });
    // 21.10.2019 пока временно, если долго не раскоменчено то удалить
    // individual.one("beforeReset", function () {
    //   modal.modal("hide").remove();
    // });
    individual.one("afterSave", function () {
      modal.modal("hide").remove();
    });
  });
  //# sourceURL=v-ui:IconModalTemplate
</script>
  """ ;
.

v-ui:GenericModalTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон отображения в модальном окне"@ru ;
  rdfs:label "Generic modal template"@en ;
  v-ui:template """
<script>
  var lbl = $(".lbl", template);
  var labelUri = container.data("label");
  var modalTemplate = container.data("modal-template");
  if (labelUri) {
    lbl.attr({"about": labelUri, "property": "rdfs:label"});
  }
  template.click(function () {
    veda.Util.showModal(individual, modalTemplate);
  });
  //# sourceURL=v-ui:GenericModalTemplate_pre
</script>
<button class="btn btn-link btn-sm">
  <span class="glyphicon glyphicon-zoom-in"></span>
  <span class="lbl"></span>
</button>
  """ ;
.

v-ui:LabelEmptyLinkTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон без имени класса, но с меткой (модальное окно)"@ru ;
  rdfs:label "Template without class name, with label (modal)"@en ;
  v-ui:template """
<a href="#" property="rdfs:label"></a>
<script>
  if (!individual.hasValue("rdfs:label")) {
    template.text(individual.id);
  }
  //# sourceURL=v-ui:LabelEmptyLinkTemplate
</script>
  """ ;
.
v-ui:LabelBlockLinkTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон без имени класса, но с меткой, блочный"@ru ;
  rdfs:label "Template without class name, with label, blocked"@en ;
  v-ui:template """
<div><a id="label" href="#/@" property="rdfs:label"></a></div>
<script>
  if (!individual.hasValue("rdfs:label")) {
    $("#label", template).text(individual.id);
  }
  //# sourceURL=v-ui:LabelBlockLinkTemplate
</script>
  """ ;
.
v-ui:ClassNameLabelLinkTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон с именем класса и меткой"@ru ;
  rdfs:label "Template with class name and label"@en ;
  v-ui:template """
<a class="label-template" href="#/@"><span about="@" rel="rdf:type"><span about="@" property="rdfs:label"></span></span>: <span id="label" about="@" property="rdfs:label"></span></a>
<script>
  if (!individual.hasValue("rdfs:label")) {
    $("#label", template).text(individual.id);
  }
  //# sourceURL=v-ui:ClassNameLabelLinkTemplate
</script>
  """ ;
.
v-ui:ClassNameLabelLinkEditTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон с именем класса и меткой"@ru ;
  rdfs:label "Template with class name and label"@en ;
  v-ui:template """
<a class="label-template" href="#/@///edit"><span about="@" rel="rdf:type"><span about="@" property="rdfs:label"></span></span>: <span id="label" about="@" property="rdfs:label"></span></a>
<script>
  if (!individual.hasValue("rdfs:label")) {
    $("#label", template).text(individual.id);
  }
  //# sourceURL=v-ui:ClassNameLabelLinkTemplate
</script>
  """ ;
.

v-ui:RabbitHole
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Кроличья нора"@ru ;
  rdfs:label "Rabbit hole"@en ;
  v-ui:template """
<script>
  var defaultProperties = "v-s:backwardTarget v-s:parent";
  var allowedProperties = (container.data("properties") || defaultProperties).split(" ");
  var name = mkName(individual);
  var visited, text;
  for (var i = 0, property; (property = allowedProperties[i]); i++ ) {
    if ( individual.hasValue(property) ) {
      var temp=$("h5", template);
      individual[property].forEach(function(prop){
        text = "<span title='" + name.title + "'>" + name.label + "</span>";
        visited = [ individual.id ];
        var wrapper = temp.clone();
        travel( prop ).then(function(){
          $("small", wrapper).append(text);
          template.append(wrapper);
        });
      })
      break;
    }
  }

  function travel(individual) {
    if ( visited.indexOf(individual.id) >= 0 ) {
      return Promise.resolve();
    } else {
      visited.push(individual.id);
    }
    return individual.load().then(function() {
      var name = mkName(individual);
      text = "<a href='#/" + individual.id + "' title='" + name.title + "'>" + name.label + "</a>" + " / " + text;
      for (var i = 0, property; (property = allowedProperties[i]); i++ ) {
        if ( individual.hasValue(property) ) {
          travel( individual[property][0] );
          break;
        }
      }
    })
  }
  function mkName(individual) {
    var label = individual["rdf:type"][0].toString() + ": " + individual.toString();
    var title = label;
    var re = new RegExp(".*?:");
    if (label.length > 70) {
      label = label.replace(re, function (typeName) {
        return typeName.split(" ").reduce(function (abbr, word) {
          return abbr += word.charAt(0);
        }, "").toUpperCase() + ":";
      });
      label = label.substring(0, 70) + "...";
    }
    return {title: title, label: label};
  }
  //# sourceURL=v-ui:RabbitHole_post
</script>
<div>
  <h5><small></small></h5>
</div>
  """ ;
.

v-ui:ClassNameLabelTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон с именем класса и меткой"@ru ;
  rdfs:label "Template with class name and label"@en ;
  v-ui:template """
<span class="label-template"><span about="@" rel="rdf:type" data-template="v-ui:LabelTemplate"></span>: <span id="label" about="@" property="rdfs:label"></span></span>
<script>
  if (!individual.hasValue("rdfs:label")) {
    $("#label", template).text(individual.id);
  }
  //# sourceURL=v-ui:ClassNameLabelTemplate
</script>
  """ ;
.

v-ui:SectionHeaderTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для заголовка секции с функцией переключения вида"@ru ;
  rdfs:label "Template for section header with view's toggle function"@en ;
  v-ui:template """
<div class="pull-right">
  <span class="glyphicon glyphicon-chevron-down"></span>
</div>
<script>
  $("span.glyphicon", template).click(function(){
    var self = $(this);
    self.toggleClass("glyphicon-chevron-left glyphicon-chevron-down");
    var parentHeader = self.closest(".section-header");
    parentHeader.siblings(".section-content").toggle();
  });
  //# sourceURL=v-ui:SectionHeaderTemplate_post
</script>
"""
.

####### TEST UI #######

v-ui:TestUIClass
  rdf:type owl:Class ;
  rdfs:subClassOf v-s:Document ;
  rdfs:subClassOf v-s:Journaling ;
  rdfs:label "Класс для тестирования интерфейса"@ru ;
  rdfs:label "Test UI class"@en ;
.

v-ui:testBoolean
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Тестовое булево свойство"@ru ;
  rdfs:label "Test boolean property"@en ;
  rdfs:domain v-ui:TestUIClass ;
  rdfs:range xsd:boolean ;
.
v-ui:testInteger
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Тестовое целочисленное свойство"@ru ;
  rdfs:label "Test integer property"@en ;
  rdfs:domain v-ui:TestUIClass ;
  rdfs:range xsd:integer ;
.
v-ui:testDecimal
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Тестовое десятичное свойство"@ru ;
  rdfs:label "Test decimal property"@en ;
  rdfs:domain v-ui:TestUIClass ;
  rdfs:range xsd:decimal ;
.
v-ui:testString
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Тестовое текстовое свойство"@ru ;
  rdfs:label "Test string property"@en ;
  rdfs:domain v-ui:TestUIClass ;
  rdfs:range xsd:string ;
.
v-ui:testDatetime
  rdf:type owl:DatatypeProperty ;
  rdfs:label "Тестовое календарное свойство"@ru ;
  rdfs:label "Test datetime property"@en ;
  rdfs:domain v-ui:TestUIClass ;
  rdfs:range xsd:dateTime ;
.
v-ui:testLink
  rdf:type owl:ObjectProperty ;
  rdfs:label "Тестовое объектное свойство"@ru ;
  rdfs:label "Test object property"@en ;
  rdfs:domain v-ui:TestUIClass ;
  rdfs:range rdfs:Resource ;
.
v-ui:testFile
  rdf:type owl:ObjectProperty ;
  rdfs:label "Тестовое файловое свойство"@ru ;
  rdfs:label "Test file property"@en ;
  rdfs:domain v-ui:TestUIClass ;
  rdfs:range v-s:File ;
.
v-ui:SpecTestBoolean
  rdf:type v-ui:DatatypePropertySpecification ;
  rdfs:label "Спецификация тестового булева свойства"@ru ;
  rdfs:label "Specification for test boolean property"@en ;
  v-ui:forClass v-ui:TestUIClass ;
  v-ui:forProperty v-ui:testBoolean ;
.
v-ui:SpecTestInteger
  rdf:type v-ui:DatatypePropertySpecification ;
  rdfs:label "Спецификация тестового целочисленного свойства"@ru ;
  rdfs:label "Specification for test integer property"@en ;
  v-ui:forClass v-ui:TestUIClass ;
  v-ui:forProperty v-ui:testInteger ;
  v-ui:optionValue "1"^^xsd:integer ;
  v-ui:optionValue "2"^^xsd:integer ;
  v-ui:optionValue "3"^^xsd:integer ;
  v-ui:minCardinality "1"^^xsd:integer ;
  v-ui:maxCardinality "1"^^xsd:integer ;
.
v-ui:SpecTestDecimal
  rdf:type v-ui:DatatypePropertySpecification ;
  rdfs:label "Спецификация тестового десятичного свойства"@ru ;
  rdfs:label "Specification for test decimal property"@en ;
  v-ui:forClass v-ui:TestUIClass ;
  v-ui:forProperty v-ui:testDecimal ;
  v-ui:optionValue "1.1"^^xsd:string ;
  v-ui:optionValue "2.2"^^xsd:string ;
  v-ui:optionValue "3.3"^^xsd:string ;
.
v-ui:SpecTestString
  rdf:type v-ui:DatatypePropertySpecification ;
  rdfs:label "Спецификация тестового текстового свойства"@ru ;
  rdfs:label "Specification for test string property"@en ;
  v-ui:forClass v-ui:TestUIClass ;
  v-ui:forProperty v-ui:testString ;
  v-ui:optionValue "Предопределенное значение 1"^^xsd:string ;
  v-ui:optionValue "Предопределенное значение 2"^^xsd:string ;
  v-ui:optionValue "Предопределенное значение 3"^^xsd:string ;
  v-ui:minCardinality "1"^^xsd:integer ;
  v-ui:maxCardinality "1"^^xsd:integer ;
.
v-ui:SpecTestDatetime
  rdf:type v-ui:DatatypePropertySpecification ;
  rdfs:label "Спецификация тестового календарного свойства"@ru ;
  rdfs:label "Specification for test datetime property"@en ;
  v-ui:forClass v-ui:TestUIClass ;
  v-ui:forProperty v-ui:testDatetime ;
  v-ui:optionValue "2011-01-02"^^xsd:dateTime ;
  v-ui:optionValue "2012-03-04"^^xsd:dateTime ;
  v-ui:optionValue "2013-05-06"^^xsd:dateTime ;
  v-ui:defaultValue "2013-05-06"^^xsd:dateTime ;
.
v-ui:SpecTestLink
  rdf:type v-ui:ObjectPropertySpecification ;
  rdfs:label "Спецификация тестового объектного свойства"@ru ;
  rdfs:label "Specification for test link property"@en ;
  v-ui:forClass v-ui:TestUIClass ;
  v-ui:forProperty v-ui:testLink ;
  v-ui:minCardinality "1"^^xsd:integer ;
  v-ui:maxCardinality "1"^^xsd:integer ;
  v-ui:optionValue v-ui:SpecTestLink ;
  v-ui:optionValue v-ui:SpecTestDatetime ;
  v-ui:optionValue v-ui:SpecTestString ;
.

v-ui:TestUI
  rdf:type v-ui:TestUIClass ;
  rdfs:label "Индивид для тестирования интерфейса"@ru ;
  rdfs:label "Test UI individual"@en ;
  v-ui:testBoolean  "true"^^xsd:boolean ;
  v-ui:testString   "Тестовое значение строкового свойства"@ru ;
  v-ui:testString   "Test string property value"@en ;
  v-ui:testInteger  "999"^^xsd:integer ;
  v-s:creator td:RomanKarpov-Analyst1 ;
#  v-ui:testDatetime "1945-05-09T21:00:00"^^xsd:dateTime ;
#  v-ui:testLink     v-ui:TestUIClass ;
  v-ui:testDecimal  "3.1415926"^^xsd:decimal ;
.

v-ui:TestUIClass_permission
  rdf:type v-s:PermissionStatement ;
  v-s:permissionObject v-ui:TestUIClass ;
  v-s:permissionSubject td:AndreyBychin ;
  v-s:canCreate "true"^^xsd:boolean ;
  rdfs:label "Права на создание тестового шаблона" ;
.

# for search #
v-ui:TestUIRegistry
  a v-fs:AttributiveSearch;
  rdfs:label "Тестовый шаблон"@ru ;
  rdfs:label "Test UI template"@en ;
  v-fs:searchBlank v-ui:TestUIRegistryBlank ;
  v-fs:searchBlankTemplate v-ui:TestUITemplate ;
  v-fs:searchResultTemplate v-ui:TestUIResultTemplate ;
.
v-ui:TestUIRegistryBlank
  rdf:type v-fc:Blank ;
  rdfs:label "Тестовый шаблон"@ru ;
  rdfs:label "Test UI template"@en ;
  v-fc:targetType v-ui:TestUIClass ;
.
v-ui:TestUIResultTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон результатов реестра годовые TestUI"@ru ;
  rdfs:label "TestUI result template"@en ;
  v-ui:template """
<table class="table table-bordered">
  <thead class="result-header">
    <tr>
      <th colspan="15" about="v-ui:TestUI" property="rdfs:label"></th>
    </tr>
    <tr class="active">
      <th width="1%">#</th>
      <th width="1%"><span class="glyphicon glyphicon-search"></span></th>
      <th class="orderby" data-orderby="v-s:creator"><span about="v-s:creator" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="v-s:created"><span about="v-s:created" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="rdfs:label"><span about="rdfs:label" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="rdfs:comment"><span about="rdfs:comment" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="v-ui:testBoolean"><span about="v-ui:testBoolean" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="v-ui:testString"><span about="v-ui:testString" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="v-ui:testInteger"><span about="v-ui:testInteger" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="v-ui:testDecimal"><span about="v-ui:testDecimal" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="v-ui:testDatetime"><span about="v-ui:testDatetime" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="v-ui:testLink"><span about="v-ui:testLink" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="v-ui:template"><span about="v-ui:template" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="v-s:script"><span about="v-s:script" property="rdfs:label"></span></th>
      <th class="orderby" data-orderby="v-ui:testFile"><span about="v-ui:testFile" property="rdfs:label"></span></th>
  </thead>
  <tbody class="result-container">
    <tr>
      <td class="serial-number"></td>
      <td><a href="#/@" class="glyphicon glyphicon-search"></a></td>
      <td rel="v-s:creator" data-template="v-ui:LabelTemplate"></td>
      <td property="v-s:created"></td>
      <td property="rdfs:label"></td>
      <td property="rdfs:comment"></td>
      <td property="v-ui:testBoolean"></td>
      <td property="v-ui:testString"></td>
      <td property="v-ui:testInteger"></td>
      <td property="v-ui:testDecimal"></td>
      <td property="v-ui:testDatetime"></td>
      <td property="v-ui:testLink"></td>
      <td property="v-ui:template"></td>
      <td property="v-s:script"></td>
      <td property="v-ui:testFile"></td>
    </tr>
  </tbody>
</table>
  """ ;
.
##############
v-s:TS_TestUIClass
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-ui:TestUITemplate;
  v-ui:forClass v-ui:TestUIClass
.

v-ui:TestUITemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Тестовый шаблон"@ru ;
  rdfs:label "Test UI template"@en ;
  v-ui:forClass v-ui:TestUIClass ;
  v-ui:template """
<div class="container sheet">
  <div class="clearfix">
    <h2 class="pull-left" about="@" rel="rdf:type" data-template="v-ui:LabelTemplate"></h2>
    <a class="pull-right" href="#/@"><small property="@"></small></a>
  </div>
  <em about="rdfs:label" property="rdfs:label" class="-view edit search"></em>
  <h3 property="rdfs:label"></h3>
  <veda-control property="rdfs:label" data-type="string" class="-view edit search" id="label"></veda-control>
  <br class="-view edit search">
  <em about="rdfs:comment" property="rdfs:label" class="-view edit search"></em>
  <div><em property="rdfs:comment"></em></div>
  <veda-control property="rdfs:comment" data-type="string" class="-view edit search" id="comment"></veda-control>
  <br class="-view edit search">
  <div class="checkbox">
    <label>
      <veda-control property="v-ui:testBoolean" data-type="boolean"></veda-control>
      <em about="v-ui:testBoolean" property="rdfs:label"></em>
    </label>
  </div>
  <hr>
  <em about="v-s:hasTransportKind" property="rdfs:label"></em>
  <div rel="v-s:hasTransportKind" data-template="v-ui:ClassNameLabelLinkTemplate"></div>
  <veda-control data-type="link" rel="v-s:hasTransportKind" class="-view edit search fulltext dropdown"></veda-control>
  <em about="v-s:hasTransportKindSingle" property="rdfs:label"></em>
  <div rel="v-s:hasTransportKindSingle" data-template="v-ui:ClassNameLabelLinkTemplate"></div>
  <veda-control data-type="link" rel="v-s:hasTransportKindSingle" class="-view edit search fulltext dropdown"></veda-control>
  <hr>
  <em about="v-ui:testString" property="rdfs:label"></em>
  <div property="v-ui:testString"></div>
  <veda-control property="v-ui:testString" data-type="string" class="-view edit search" id="testString"></veda-control>
  <veda-control property="v-ui:testString" data-type="multilingualString" class="-view edit search"></veda-control>
  <veda-control property="v-ui:testString" data-type="text" class="-view edit search"></veda-control>
  <veda-control property="v-ui:testString" data-type="multilingualText" class="-view edit search"></veda-control>
  <veda-control property="v-ui:testString" data-type="select" class="-view edit search"></veda-control>
  <veda-control property="v-ui:testString" data-type="checkbox" class="view edit search"></veda-control>
  <veda-control property="v-ui:testString" data-type="radio" class="view edit search"></veda-control>
  <hr>
  <em about="v-ui:testInteger" property="rdfs:label"></em>
  <div property="v-ui:testInteger"></div>
  <veda-control property="v-ui:testInteger" data-type="integer" class="-view edit search"></veda-control>
  <veda-control property="v-ui:testInteger" data-type="select" class="-view edit search"></veda-control>
  <veda-control property="v-ui:testInteger" data-type="checkbox"></veda-control>
  <veda-control property="v-ui:testInteger" data-type="radio"></veda-control>
  <hr>
  <em about="v-ui:testDecimal" property="rdfs:label"></em>
  <div property="v-ui:testDecimal"></div>
  <veda-control property="v-ui:testDecimal" data-type="decimal" class="-view edit search"></veda-control>
  <veda-control property="v-ui:testDecimal" data-type="select" class="-view edit search"></veda-control>
  <hr>
  <em about="v-ui:testDatetime" property="rdfs:label"></em>
  <div property="v-ui:testDatetime" class="view edit -search"></div>
  <veda-control property="v-ui:testDatetime" data-type="date" class="-view edit search" id="date"></veda-control>
  <veda-control property="v-ui:testDatetime" data-type="dateTime" class="-view edit search"></veda-control>
  <veda-control property="v-ui:testDatetime" data-type="select" class="-view edit search"></veda-control>
  <veda-control property="v-ui:testDatetime" data-type="checkbox" class="-view edit search"></veda-control>
  <veda-control property="v-ui:testDatetime" data-type="radio" class="-view edit search"></veda-control>
  <hr>
  <em about="v-ui:testLink" property="rdfs:label"></em>
  <div rel="v-ui:testLink" data-template="v-ui:ClassNameLabelLinkTemplate"></div>
  <veda-control rel="v-ui:testLink" data-type="link" class="-view edit search full"></veda-control>
  <veda-control rel="v-ui:testLink" data-type="checkbox"></veda-control>
  <veda-control rel="v-ui:testLink" data-type="radio"></veda-control>
  <veda-control rel="v-ui:testLink" data-type="select" class="-view edit search"></veda-control>
  <!--hr>
  <em about="v-ui:template" property="rdfs:label"></em>
  <veda-control property="v-ui:template" data-type="source"></veda-control>
  <hr>
  <em about="v-s:script" property="rdfs:label"></em>
  <veda-control property="v-s:script" data-type="source"></veda-control-->
  <hr>
  <em about="v-ui:testFile" property="rdfs:label"></em>
  <div rel="v-ui:testFile" data-template="v-ui:FileTemplate" class="view edit -search"></div>
  <br>
  <veda-control rel="v-ui:testFile" data-type="file" class="-view edit -search"></veda-control>
  <br>
  <div class="actions">
    <span about="@" data-template="v-ui:StandardButtonsTemplate" data-embedded="true" data-buttons="send edit save cancel delete journal task"></span>
  </div>
  <div about="@" class="container sheet view -edit -search" data-template="v-s:CommentsTemplate"></div>
</div>
  """ ;
.
v-ui:PsCommentFile
  rdf:type v-ui:DatatypePropertySpecification ;
  v-ui:forClass v-s:File ;
  v-ui:forProperty rdfs:comment ;
  v-ui:minCardinality 0 ;
  v-ui:maxCardinality 1 ;
  v-ui:maxLength 100 ;
  v-ui:tooltip "Максимум 100 символов"@ru ;
  v-ui:tooltip "100 characters maximum"@en ;
.

v-ui:PSAttachmentThing
  rdf:type v-ui:ObjectPropertySpecification ;
  rdfs:label "Спецификация свойства v-s:attachment для класса v-s:Thing"@ru ;
  rdfs:label "Specification v-s:attachment for v-s:Thing class"@en ;
  v-ui:forClass v-s:Thing ;
  v-ui:forProperty v-s:attachment ;
  v-ui:minCardinality 0 ;
  v-ui:maxCardinality 100 ;
.

v-ui:FileTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для файла"@ru ;
  rdfs:label "File template"@en ;
  v-ui:template """
<div class="panel panel-default" style="word-wrap:break-word; display: inline-block; margin:5px 5px 0 0; overflow: hidden"">
  <div class="panel-body" style="padding:7px;">
    <span id="icon" class="label label-primary"></span>
    <a href="/files/@">
      <span about="@" property="v-s:fileName"></span>
    </a>
  </div>
</div>
<script>
  var fn = individual["v-s:fileName"][0],
    idx = fn.lastIndexOf("."),
    ext = fn.substr(idx + 1);
  $("span#icon", template).text(ext);
  //# sourceURL=v-ui:FileTemplate
</script>
  """ ;
.

v-ui:FileMinTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для файла"@ru ;
  rdfs:label "File template"@en ;
  v-ui:template """
<div>
  <a href="/files/@">
    <span about="@" property="v-s:fileName"></span>
  </a>
</div>
  """ ;
.

v-s:TS_File
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-ui:FileTemplateWithComment;
  v-ui:forClass v-s:File
.
v-ui:FileTemplateWithComment
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для файла"@ru ;
  rdfs:label "File template"@en ;
  v-ui:forClass v-s:File ;
  v-ui:template """
<script>
  var fn = individual["v-s:fileName"][0];
  var img = "jpg|jpeg|gif|png|bmp|svg";
  if (typeof fn === "string" || fn instanceof String) {
    var idx = fn.lastIndexOf("."),
        ext = fn.substr(idx + 1);
    $("span.icon", template).text(ext);
    if ( img.indexOf(ext) < 0 ) {
      $(".thumbnail", template).remove();
    }
  }
  //# sourceURL=v-ui:FileTemplateWithComment
</script>
<div class="horizontal-card">
  <div class="thumbnail" about="@" data-template="v-ui:ModalImageTemplate"></div>
  <div class="description">
    <strong about="rdfs:comment" property="rdfs:label" class="-view edit search"></strong>
    <veda-control data-type="string" property="rdfs:comment" class="-view edit search margin-sm"></veda-control>
    <strong property="rdfs:comment" class="view -edit -search header"></strong>
    <hr class="margin-sm view -edit -search">
    <div class="file-name">
      <span class="icon label label-primary"></span>
      <a href="/files/@">
        <span about="@" property="v-s:fileName"></span>
      </a>
    </div>
    <i class="view -edit -search">
      <small rel="v-s:creator" data-template="v-ui:LabelTemplate"></small><small property="v-s:created"></small>
    </i>
  </div>
</div>
  """ ;
.
v-ui:FileTemplateWithComment2
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для файла 2"@ru ;
  rdfs:label "File template 2"@en ;
  #v-ui:forClass v-s:File ;
  v-ui:template """
<div class="panel panel-default" style="word-wrap:break-word; width:250px; display: inline-block; margin:0 20px 20px 0; overflow: hidden">
  <div class="panel-body">
    <!--Remove-->
    <em about="v-s:fileUri" property="rdfs:label"></em>
    <veda-control data-type="string" property="v-s:fileUri"></veda-control>
    <em about="v-s:filePath" property="rdfs:label"></em>
    <veda-control data-type="string" property="v-s:filePath"></veda-control>
    <!--/Remove-->

    <em about="rdfs:comment" property="rdfs:label" class="-view edit search"></em>
    <strong property="rdfs:comment" class="view -edit -search"></strong>
    <veda-control data-type="string" property="rdfs:comment" class="-view edit search"></veda-control>
    <br>
    <hr class="margin-sm view -edit -search">
    <div>
      <span id="icon" class="label label-primary"></span>
      <a href="/files/@">
        <span about="@" property="v-s:fileName"></span>
      </a>
    </div>
    <div class="view -edit -search" style="font-style:italic">
      <small rel="v-s:creator" data-template="v-ui:LabelTemplate"></small><small property="v-s:created"></small>
    </div>
  </div>
  <!--Remove-->
  <div class="actions panel-footer">
    <span about="@" data-template="v-ui:StandardButtonsTemplate" data-embedded="true" data-buttons="save"></span>
  </div>
  <!--/Remove-->
</div>
<script>
  var fn = individual["v-s:fileName"][0];
  if (typeof fn === "string" || fn instanceof String) {
    var idx = fn.lastIndexOf("."),
        ext = fn.substr(idx + 1);
    $("span#icon", template).text(ext);
  }
  //# sourceURL=v-ui:FileTemplateWithComment
</script>
  """ ;
.
v-ui:ImageTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для изображения"@ru ;
  rdfs:label "Image template"@en ;
  v-ui:template """
<script>
  if (individual.image) {
    template.children().attr("src", individual.image.src);
  } else {
    template.children().attr("src", "/files/" + individual.id);
  }
//# sourceURL=v-ui:ImageTemplate
</script>
<div><img width="100%"></div>
  """ ;
.
v-ui:ModalImageTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для изображения"@ru ;
  rdfs:label "Image template"@en ;
  v-ui:template """
<script>
  if ( !individual.hasValue("v-s:thumbnail") ) {
    template.removeAttr("rel");
  }
  template.click(function (e) {
    e.preventDefault();
    var modal = $( $("#minimal-modal-template").html() ).modal({keyboard: true, show: false}).appendTo("body");
    var modalBody = modal.find(".modal-body");
    individual.present(modalBody, "v-ui:ImageTemplate");
    modal.modal("show");
    template.one("remove", function () {
      modal.modal("hide").remove();
    });
  });
  //# sourceURL=v-ui:ModalImageTemplate
</script>
<a class="show-modal" href="#" about="@" rel="v-s:thumbnail" data-template="v-ui:ImageTemplate"></a>
  """ ;
.

v-s:TS_Journal
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-ui:SimplifiedJournalTemplate;
  v-ui:forClass v-s:Journal
.
v-ui:SimplifiedJournalTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Упрощенный"@ru ;
  rdfs:label "Simplified"@en ;
  v-ui:forClass v-s:Journal ;
  v-ui:template """
<script>
  var renderedCount = 0;
  var tbody = $("#tbody", template);
  var task_template = tbody.html();
  tbody.empty();
  var doc_uri = this.id.replace(/.$/, "");
  var doc = new veda.IndividualModel(doc_uri);
  $("#refresh", template).click(buildJournal);
  buildJournal();

  function buildJournal() {
    renderedCount = 0;
    tbody.empty();
    var tasks = veda.Backend.query({
      ticket: veda.ticket,
      query: "'rdf:type'=='v-wf:DecisionForm' && 'v-wf:onDocument'=='" + doc_uri + "'",
      sort: "'v-s:created' desc"
    })
    .then(function (query_res) {
      var tasks_uris = query_res.result;
      if (tasks_uris.length) {
        return veda.Backend.get_individuals({
          ticket: veda.ticket,
          uris: tasks_uris
        });
      }
    })
    .then(renderTasks);
  };

  function renderTasks(tasksJSONs) {
    if (!tasksJSONs || !tasksJSONs.length) { return; }
    var taskJSON = tasksJSONs.pop();
    var task = new veda.IndividualModel(taskJSON);
    task.present(tbody, task_template).then(function (renderedTemplate) {
      $(".sequence-number", renderedTemplate).text(++renderedCount);
    }).then(function () {
      renderTasks(tasksJSONs);
    });
  };

  $("#on-document", template).attr("about", doc_uri);

  $('.createReport0', template).on('click', function () {
    veda.Util.createReport('v-s:Journal_printBlank', doc);
  });
  //# sourceURL=v-ui:SimplifiedJournalTemplate_pre
</script>
<div class="container sheet">
  <br>
  <ul id="box-tabs" class="nav nav-tabs nav-right" role="tablist">
    <li class="pull-left"><h2 class="no-margin" about="v-s:Journal" property="rdfs:label"></h2></li>
    <li role="presentation"><a href="#/@//v-ui:JournalTemplate" class="btn btn-link"><span about="v-ui:JournalTemplate" property="rdfs:label"></span></a></li>
    <li role="presentation" class="active"><a href="#/@//v-ui:SimplifiedJournalTemplate" class="btn btn-link"><span about="v-ui:SimplifiedJournalTemplate" property="rdfs:label"></span></a></li>
  </ul>
  <br>
  <div class="clearfix">
    <div class="pull-left">
      <h4 id="on-document" data-template="v-ui:ClassNameLabelLinkTemplate"></h4>
    </div>
    <div class="pull-right">
      <button type="button" class="action btn btn-info view -edit -search createReport0" about="v-s:PrintBlank" property="rdfs:label"></button>
    </div>
  </div>
  <br>
  <div id="tasks" class="table-responsive">
    <table class="table">
      <thead>
        <tr>
          <th width="1%">#</th>
          <th width="15%" about="v-wf:from" property="rdfs:label"></th>
          <th width="15%" about="v-wf:to" property="rdfs:label"></th>
          <th width="25%" about="v-s:description" property="rdfs:label"></th>
          <th width="15%" about="v-s:created" property="rdfs:label"></th>
          <th about="v-wf:takenDecision" property="rdfs:label"></th>
        </tr>
      </thead>
      <tbody id="tbody">
        <script>
          if ( individual.hasValue("v-wf:isCompleted", true) ) {
            template.children().first().addClass("success");
            $(".docflow-buttons", template).remove();
          } else {
            var currentEmployee = veda.appointment["v-s:employee"][0];
            var currentOcuppation = veda.appointment["v-s:occupation"][0];
            var targetEmployee = individual["v-wf:from"][0];
            var targetOccupation = individual["v-wf:from"][1]

            Promise.resolve().then(function() {
              var canRevoke = currentEmployee === targetEmployee && currentOcuppation === targetOccupation;
              if (!canRevoke && targetOccupation) {
                var queryString = "'rdf:type'==='v-s:Appointment' && 'v-s:occupation'=='" + targetOccupation.id + "' && 'v-s:employee' == '" + currentEmployee.id + "'";
                return veda.Backend.query(veda.ticket, queryString).then(function (queryResult) {
                  return queryResult.result.length > 0 ;
                });
              } else {
                return canRevoke;
              }
            }).then(function(canRevoke) {
              var isDirectTask = individual.hasValue("v-wf:isDirectTask", true);
              if (!canRevoke || !isDirectTask) {
                $(".docflow-buttons", template).hide();
              } else {
                $(".docflow-buttons", template).show();
                $(".redirect", template).click(takeDecision.bind(null, "v-wf:DecisionRedirect", "Перенаправлено"));
                $(".revoke", template).click(takeDecision.bind(null, "v-wf:DecisionRevokeTask", "Задача отозвана"));
              };
            })
          }

          function takeDecision(takenDecision, label) {
            var decisionClass = new veda.IndividualModel( takenDecision );
            var decision = new veda.IndividualModel();
            decision["rdf:type"] = [ decisionClass ];
            decision["v-s:backwardTarget"] = [ individual ];
            decision["rdfs:label"] = [ label ];
            decision["v-s:backwardProperty"] = [ new veda.IndividualModel("v-wf:takenDecision") ];
            decision["v-s:canRead"] = [ true ];
            var modal = veda.Util.showModal(decision, undefined, "edit");

            decision.one("afterReset", function () {
              modal.modal("hide").remove();
            });
            decision.one("afterSave", function () {
              modal.modal("hide").remove();
              $(".docflow-buttons", template).hide();
            });
          }
          //# sourceURL=v-ui:SimplifiedJournalTemplate_inTbody_pre
        </script>
        <tr>
          <td class="sequence-number"></td>
          <td>
            <div about="@" rel="v-wf:from" data-template="v-ui:LabelTemplate"></div>
              <div about="@" rel="v-wf:redirect_from_task">
                <script>
                  if ( !individual.hasValue("v-wf:to") ) {
                    template.empty();
                  }
                </script>
              <div>
              <hr class="no-margin">
              <strong><small about="v-s:TaskIsRedirectedFrom" property="rdfs:label"></small></strong>
              <small about="@" rel="v-wf:to" data-template="v-ui:LabelTemplate"></small>
            </div>
          </td>
          <td about="@" rel="v-wf:to" data-template="v-ui:LabelTemplate"></td>
          <td><a href="#/@" about="@" property="rdfs:label"></a><div about="@" property="v-s:description"></div></td>
          <td about="@" property="v-s:created"></td>
          <td>
            <div about="@" rel="v-wf:takenDecision">
              <div>
                <strong about="@" property="rdfs:label"></strong>
                <span about="@" rel="v-wf:to">
                  <span>
                    <span>&rarr;</span>
                    <span about="@" data-template="v-ui:LabelTemplate"></span>
                  </span>
                </span>
                <div><i about="@" property="rdfs:comment"></i></div>
                <hr class="margin-sm">
                <small about="@" rel="v-s:creator" data-template="v-ui:LabelTemplate"></small> &middot; <small aboout="@" property="v-s:created"></small>
              </div>
            </div>
            <div class="docflow-buttons" style="display:none">
              <button class="btn btn-sm btn-warning redirect" about="v-wf:DecisionRedirect_Bundle" property="rdfs:label"></button>
              <button class="btn btn-sm btn-info revoke" about="v-wf:DecisionRevoke_Bundle" property="rdfs:label"></button>
            </div>
          </td>
        </tr>
      </tbody>
    </table>
    <button class="btn btn-default" id="refresh" about="v-s:RefreshBundle" property="rdfs:label"></button>
  </div>
</div>
  """ ;
.
v-ui:JournalTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Детальный"@ru ;
  rdfs:label "Detailed"@en ;
  v-ui:forClass v-s:Journal ;
  v-ui:template """
<script>
  //individual.prefetch(50, "v-s:onDocument", "v-wf:onProcess", "v-s:childRecord", "v-s:processJournal", "v-s:subJournal", "v-wf:takenDecision", "v-s:actor", "v-s:creator", "v-wf:executor");

  var doc_uri = this.id.replace(/.$/, "");
  var doc = new veda.IndividualModel(doc_uri);

  $("#on-document", template).attr("about", doc_uri);

  $('.createReport0', template).on('click', function () {
    veda.Util.createReport('v-s:Journal_printBlank', doc);
  });
  //# sourceURL=v-ui:JournalTemplate_pre
</script>
<div class="container journal sheet">
  <style>
    .journal-record > div > .sub-journal {
      margin-left: 5px; padding-left: 20px;
    }
    .journal hr.margin-sm {
      margin: 10px 0px;
    }
  </style>
  <br>
  <ul id="box-tabs" class="nav nav-tabs nav-right" role="tablist">
    <li class="pull-left"><h2 class="no-margin" about="v-s:Journal" property="rdfs:label"></h2></li>
    <li role="presentation" class="active"><a href="#/@//v-ui:JournalTemplate" class="btn btn-link"><span about="v-ui:JournalTemplate" property="rdfs:label"></span></a></li>
    <li role="presentation"><a href="#/@//v-ui:SimplifiedJournalTemplate" class="btn btn-link"><span about="v-ui:SimplifiedJournalTemplate" property="rdfs:label"></span></a></li>
  </ul>
  <br>
  <div class="clearfix">
    <div class="pull-left">
      <h4 id="on-document" data-template="v-ui:ClassNameLabelLinkTemplate"></h4>
    </div>
    <div class="pull-right">
      <button type="button" class="action btn btn-info view -edit -search createReport0" about="v-s:PrintBlank" property="rdfs:label"></button>
    </div>
  </div>
  <div rel="v-wf:onProcess">
    <h4>
      <span about="rdf:type" property="rdfs:label"></span>:
      <span about="@" data-template="v-ui:ClassNameLabelLinkTemplate"></span>
    </h4>
  </div>
  <br>
  <div class="row">
    <div class="col-md-3 col-sm-3">
      <strong about="v-s:JournalRecord" property="rdfs:label"></strong>
    </div>
    <div class="col-md-7 col-sm-6">
      <strong about="v-s:description" property="rdfs:label"></strong>
    </div>
    <div class="col-md-2 col-sm-3 text-right">
      <strong about="v-s:created" property="rdfs:label"></strong>
    </div>
  </div>
  <div id="records">
    <div rel="v-s:childRecord"></div>
  </div>
</div>
  """ ;
.
v-ui:SubJournalTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон поджурнала"@ru ;
  rdfs:label "Subjournal template"@en ;
  v-ui:template """
<div class="sub-journal">
  <div rel="v-s:childRecord"></div>
</div>
  """ ;
.

v-s:TS_DocumentCreated
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-ui:DocumentEventTemplate;
  v-ui:forClass v-s:DocumentCreated
.
v-s:TS_DocumentUpdated
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-ui:DocumentEventTemplate;
  v-ui:forClass v-s:DocumentUpdated
.
v-s:TS_DocumentDeleted
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-ui:DocumentEventTemplate;
  v-ui:forClass v-s:DocumentDeleted
.
v-s:TS_ProcessStarted
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-ui:DocumentEventTemplate;
  v-ui:forClass v-s:ProcessStarted
.
v-ui:DocumentEventTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон события документа"@ru ;
  rdfs:label "Document event template"@en ;
  v-ui:forClass v-s:DocumentCreated, v-s:DocumentUpdated, v-s:DocumentDeleted, v-s:ProcessStarted, v-wf:ProcessStopped ;
  v-ui:template """
<script>
  if (individual.hasValue("v-s:actor", "cfg:VedaSystem")) { template.empty(); }
  $("#exp", template).click(function (e) {
    e.preventDefault();
    $("div[rel='v-s:processJournal']", template).toggle();
    $(this).children(":first").toggleClass("glyphicon-chevron-down glyphicon-chevron-right");
  });
  //# sourceURL=v-ui:DocumentEventTemplate_pre
</script>
<div class="journal-record">
  <hr class="margin-sm">
  <div class="row">
    <div class="col-md-3 col-sm-3 event-type">
      <span class="start-process" href="#" style="display:none">
        <a href="#" id="exp"><span class="glyphicon glyphicon-chevron-down"></span></a>
        <strong about="@" rel="rdf:type" data-template="v-ui:LabelTemplate"></strong>
      </span>
      <span class="non-start-process" about="@" rel="rdf:type" data-template="v-ui:LabelTemplate"></span>
    </div>
    <div class="col-md-7 col-sm-6 event-desc">
      <div about="@" rel="v-s:documentVersion" data-template="v-ui:LabelLinkTemplate"></div>
      <div about="@" rel="v-wf:onProcess">
        <script>
          if ( individual.hasValue("v-wf:hasStartForm") ) {
            var startForm = individual["v-wf:hasStartForm"][0];
            $("[about='start-form']", template).attr("about", startForm.id);
          } else { // Проверим наличие переменной стартовой формы
            var inVars = individual["v-wf:inVars"].map(function (inVar) {
              return inVar.load();
            });
            if (inVars.length) {
              return Promise.all(inVars).then(function (inVars) {
                var startFormVar = inVars.filter(function (inVar) {
                  return inVar.hasValue("v-wf:variableName",  "startForm_id");
                });
                var startForm = startFormVar[0]["v-wf:variableValue"][0];
                $("[about='start-form']", template).attr("about", startForm.id);
              }).catch(function () {
                $("[about='start-form']", template).remove();
              });
            } else {
              $("[about='start-form']", template).remove();
            }
          }
          //# sourceURL=v-ui:DocumentEventTemplate_inline
        </script>
        <div>
          <a about="@" class="process-id" href="#/@" rel="v-wf:instanceOf" data-template="v-ui:LabelTemplate"></a>
          <a href="#" class="stop-process glyphicon glyphicon-remove text-danger" style="display:none;"></a>
          <span class="process-stopped glyphicon glyphicon-minus-sign text-danger" style="display:none;"></span>
          <span about="start-form">
            <span>
              &nbsp;&nbsp;(<a href="#/@" about="@" rel="rdf:type" data-template="v-ui:LabelTemplate"></a>)
            </span>
          </span>
        </div>
      </div>
      <span about="@" rel="v-s:actor" data-template="v-ui:LabelTemplate"></span>
    </div>
    <div class="col-md-2 col-sm-3 event-date text-right">
      <span about="@" property="v-s:created"></span>
    </div>
  </div>
  <div about="@" rel="v-s:processJournal" data-template="v-ui:SubJournalTemplate"></div>
</div>
<script>
  if ( individual.hasValue("rdf:type", "v-s:ProcessStarted") ) {
    $(".start-process", template).show();
    $(".non-start-process", template).hide();
    var process = individual.get('v-wf:onProcess')[0];
    process.load().then(function (process) {
      if (
        (!process.hasValue("v-wf:isStopped") || process.hasValue("v-wf:isStopped", false)) &&
        (!process.hasValue("v-wf:isCompleted") || process.hasValue("v-wf:isCompleted", false))
      ) {
        var actor = individual['v-s:actor'][0];
        var doc = individual['v-s:onDocument'][0];
        doc.canDelete().then(function(canDelete) {
          if (actor) {
            if (veda.appointment.id === actor.id || veda.appointment.id === 'cfg:AdministratorAppointment' || canDelete) {
              $(".stop-process", template).show();
            }
          }
        });
        $(".stop-process", template).on("click", function (e) {
          var self = this;
          e.preventDefault();
          var warn = new veda.IndividualModel("v-s:AreYouSure");
          warn.load().then(function (warn) {
            warn = warn["rdfs:label"].map(veda.Util.formatValue).join(" ");
            if ( confirm(warn) ) {
              process['v-wf:isStopped'] = [ true ];
              $(self).remove();
              process.save();
            }
          });
        });
      }
      if (process.hasValue("v-wf:isStopped", true)) {
        $(".process-id", template).addClass('text-danger');
        $(".process-stopped", template).show();
        $(".start-process > #exp", template).trigger("click");
      }
    });
  }
  //# sourceURL=v-ui:DocumentEventTemplate_post
</script>
  """ ;
.

v-ui:PermissionsTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для отображения прав"@ru ;
  rdfs:label "Individual rights template"@en ;
  v-ui:forClass v-s:PermissionStatement ;
  v-ui:template """
<script>
  var rightsContainer = $(".rights", template);
  var rightsTemplate = rightsContainer.html();
  rightsContainer.empty();
  individual.rights.then(function (rights) {
    rights.present(rightsContainer, rightsTemplate);
  });

  var descriptionContainer = $("#description", template);
  var descriptionTemplate = descriptionContainer.html();
  descriptionContainer.empty();

  var rightsOriginContainer = $(".rightsOrigin", template);
  var rightsOriginTemplate = rightsOriginContainer.html();
  rightsOriginContainer.empty();
  individual.rightsOrigin.then(function (rightsOrigin) {
    rightsOrigin.forEach(function (origin) {
      if ( !origin.hasValue("rdfs:comment") ) {
        origin.present(rightsOriginContainer, rightsOriginTemplate);
      } else {
        origin.present(descriptionContainer, descriptionTemplate);
      }
    });
  });
//# sourceURL=v-ui:PermissionsTemplate_pre
</script>
<div class="container">
  <h3 about="@" data-template="v-ui:ClassNameLabelTemplate"></h3>
  <div class="table-responsive">
    <table class="table">
      <thead>
        <tr class="active">
          <th about="v-s:permissionSubject" property="rdfs:label"></th>
          <th about="v-s:permissionObject" property="rdfs:label"></th>
          <th about="v-s:canCreate" property="rdfs:label"></th>
          <th about="v-s:canRead" property="rdfs:label"></th>
          <th about="v-s:canUpdate" property="rdfs:label"></th>
          <th about="v-s:canDelete" property="rdfs:label"></th>
        </tr>
      </thead>
      <tbody class="rightsOrigin">
        <tr>
          <td about="@" rel="v-s:permissionSubject" data-template="v-ui:LabelLinkTemplate"></td>
          <td about="@" rel="v-s:permissionObject" data-template="v-ui:LabelLinkTemplate"></td>
          <td about="@" property="v-s:canCreate"></td>
          <td about="@" property="v-s:canRead"></td>
          <td about="@" property="v-s:canUpdate"></td>
          <td about="@" property="v-s:canDelete"></td>
        </tr>
      </tbody>
      <tbody class="rights">
        <tr class="active">
          <th></th>
          <th></th>
          <th about="@" property="v-s:canCreate"></th>
          <th about="@" property="v-s:canRead"></th>
          <th about="@" property="v-s:canUpdate"></th>
          <th about="@" property="v-s:canDelete"></th>
        </tr>
      </tbody>
    </table>
  </div>
  <a about="v-s:More" property="rdfs:label" class="btn btn-link" role="button" data-toggle="collapse" href="#description" aria-expanded="false" aria-controls="description"></a>
  <div class="collapse" id="description">
    <pre about="@" property="rdfs:comment" style="border:none;background-color:#fff;"></pre>
  </div>
</div>
  """ ;
.

v-ui:SelectBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Выбрать"@ru ;
  rdfs:label "Select"@en ;
.
v-ui:DeepSelectBundle
  rdf:type v-s:Bundle ;
  rdfs:label "Выбрать вглубь"@ru ;
  rdfs:label "Deep select"@en ;
.

v-s:TS_Tree
  rdf:type v-ui:TemplateSpecification;
  v-s:loadPriority "15"^^xsd:integer;
  v-ui:defaultTemplate v-ui:TreeTemplate;
  v-ui:forClass v-ui:Tree
.
v-ui:TreeTemplate
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для древовоидных структур"@ru ;
  rdfs:label "Template for tree-like structures"@en ;
  v-ui:template """
<script>
  var root = this.hasValue("v-ui:treeRoot") ? this["v-ui:treeRoot"] : undefined,
      inProperty = this.hasValue("v-ui:treeInProperty") ? this["v-ui:treeInProperty"] : undefined,
      outProperty = this.hasValue("v-ui:treeOutProperty") ? this["v-ui:treeOutProperty"] : undefined,
      allowedClass = this.hasValue("v-ui:treeAllowedClass") ? this["v-ui:treeAllowedClass"] : undefined,
      allowedFilter = this.hasValue("v-ui:treeAllowedFilter") ? this["v-ui:treeAllowedFilter"] : undefined,
      selectableClass = this.hasValue("v-ui:treeSelectableClass") ? this["v-ui:treeSelectableClass"] : undefined,
      selectableFilter = this.hasValue("v-ui:treeSelectableFilter") ? this["v-ui:treeSelectableFilter"] : undefined,
      displayedProperty = this.hasValue("v-ui:treeDisplayedProperty") ? this["v-ui:treeDisplayedProperty"] : [ new veda.IndividualModel("rdfs:label") ],

      target = extra && extra.target,
      rel_uri = extra && extra.target_rel_uri,
      isSingle = extra && extra.isSingle,
      withDeleted = extra && extra.withDeleted,
      sort = extra && extra.sort,

      tbody = $(".tbody", template),
      thead = $(".thead", template),
      headTmpl = "",
      rowTmpl = "";

  if (target && rel_uri) {
    if (isSingle) {
      headTmpl += "<th width='1px'></th>";
      rowTmpl += "<td><input type='radio' class='select-row' name='select-row' /></td>";
    } else {
      headTmpl += "<th width='48px'></th>";
      rowTmpl += "<td><div class='checkbox no-margin'><label><input type='checkbox' class='select-row' /> <span style='cursor:pointer' class='select-deep fa fa-sitemap text-muted'></span></label></div></td>";
    }
  } else {
    headTmpl += "<th width='24px'><span class='glyphicon glyphicon-zoom-in'></span></th>";
    rowTmpl += "<td about='@' data-template='v-ui:IconModalTemplate'></td>";
  }

  var allowedFilterFn = (function () {
    if (allowedFilter) {
      return new Function( allowedFilter[0].toString() );
    } else if (allowedClass) {
      return function () {
        var that = this;
        return allowedClass.reduce(function (acc, allowed) {
          return acc || that.hasValue("rdf:type", allowed);
        }, false);
      }
    } else {
      return function () { return true; };
    }
  })();

  var selectableFilterFn = (function () {
    if (selectableFilter) {
      return new Function( selectableFilter[0].toString() );
    } else if (selectableClass) {
      return function () {
        var that = this;
        return selectableClass.reduce(function (acc, selectable) {
          return acc || that.hasValue("rdf:type", selectable);
        }, false);
      }
    } else {
      return function () { return true; };
    }
  })();

  var literals = ["rdfs:Literal", "xsd:string", "xsd:boolean", "xsd:integer", "xsd:nonNegativeInteger", "xsd:decimal", "xsd:dateTime"];

  displayedProperty.forEach( function (property, index) {
    headTmpl += "<th>" + property["rdfs:label"].join(", ") + "</th>";
    var isLiteral = (literals.indexOf(property["rdfs:range"][0].id) >= 0);
    if ( index === 0 ) {
      if (isLiteral) {
        rowTmpl += "<td><div class='spacer'></div><a href='#' class='expand glyphicon glyphicon-chevron-right'></a> <span about='@' property='" + property.id + "'></span></td>";
      } else {
        rowTmpl += "<td><div class='spacer'></div><a href='#' class='expand glyphicon glyphicon-chevron-right'></a> <span about='@' rel='" + property.id + "' data-template='v-ui:LabelTemplate'></span></td>";
      }
      return;
    } else {
      if ( isLiteral ) {
        rowTmpl += "<td about='@' property='" + property.id + "'></td>";
      } else {
        rowTmpl += "<td about='@' rel='" + property.id + "' data-template='v-ui:LabelTemplate'></td>";
      }
    }
  });
  headTmpl = "<tr>" + headTmpl + "</tr>";
  thead.html(headTmpl);

  template.on("click", "a.expand", function (e) {
    e.stopPropagation();
    e.preventDefault();
    var that = $(this),
      thatRow = that.closest("tr"),
      thatLvl = parseInt( thatRow.attr("data-level") ),
      uri = thatRow.attr("resource"),
      value = new veda.IndividualModel(uri);

    that.toggleClass("expanded glyphicon-chevron-right glyphicon-chevron-down");

    if ( that.hasClass("expanded") ) {
      getChildren([], value, false).then(function (children) {
        return renderRows(children, thatRow).then(function () {
          var nextLvl = parseInt(thatRow.next().attr("data-level"));
          if ( isNaN(nextLvl) || nextLvl <= thatLvl ) {
            that.prev().css("width", 16 * (thatLvl + 1) - 2);
            that.remove();
            thatRow.find(".select-deep").remove();
          }
        });
      });
    } else {
      var rowsToRemove = $();
      thatRow.nextAll().each(function () {
        var row = $(this);
        if ( row.data("level") > thatLvl ) {
          rowsToRemove = rowsToRemove.add(row);
        } else {
          return false;
        }
      });
      rowsToRemove.remove();
    }
    return false;
  });

  function renderRows(values_uris, parentRow) {
    var cont = $("<div>");
    var parentLvl = parentRow ? parseInt( parentRow.attr("data-level") ) : -1,
        tmpl = $("<tr class='value-row'>").attr("data-level", parentLvl + 1).append(rowTmpl);
    $(".spacer", tmpl).css({"width": 16 * (parentLvl + 1) + "px", "display": "inline-block"});
    return Promise.all(values_uris.map(function (valueUri, index) {
      var value = new veda.IndividualModel(valueUri);
      return value.load().then(function (value) {
        if ( !allowedFilterFn.call(value) ) {
          return;
        }
        return value.present(cont, tmpl[0].outerHTML).then(function (tmpl) {
          // Pre-check children
          getChildren([], value, false).then(function (children) {
            if (!children.length) {
              tmpl.find(".expand").remove();
              tmpl.find(".select-deep").remove();
            }
          });
          if (target && rel_uri) {
            var selectRow = $(".select-row", tmpl);
            var selectDeep = $(".select-deep", tmpl);
            selectRow.prop("checked", target.hasValue(rel_uri, value));

            if (value.deepSelected) {
              selectDeep.removeClass("text-muted").addClass("text-danger");
            } else {
              selectDeep.addClass("text-muted").removeClass("text-danger");
            }

            if ( !selectableFilterFn.call(value) ) {
              selectRow.remove();
            }
          }
          return tmpl;
        });
      });
    })).then(function (rendered) {
      if ( parentRow ) {
        parentRow.after( rendered );
      } else {
        tbody.append( rendered );
      }
      cont.remove();
    });
  }
  var previousSelected;
  if (target && rel_uri) {

    template.on("click", "td", function (e) {
      e.stopPropagation();
      var row = $(this).parent();
      $(".select-row", row).click();
    });

    template.on("click", ".select-row", function (e) {
      e.stopPropagation();
      var $this = $(this);
      var row = $this.closest("tr"),
          uri = row.attr("resource"),
          value = new veda.IndividualModel(uri);

      $("#create-NewItem", template).remove();
      if ($(".modal").length == 0) {
        var addButton = drawAddButton(row);
        row.children().last().append(addButton);
      }

      if (isSingle) {
        target.set(rel_uri, [value]);
      } else {
        target.toggleValue(rel_uri, value);
      }
    });

    template.on("click", ".select-deep", function (e) {
      e.preventDefault();
      e.stopPropagation();
      var $this = $(this);
      var row = $this.closest("tr"),
          uri = row.attr("resource"),
          value = new veda.IndividualModel(uri);

      getChildren([], value).then(function (branchUris) {
        value.deepSelected = !value.deepSelected;
        var branch = branchUris.map(function (branchUri) {
          var item = new veda.IndividualModel(branchUri);
          item.deepSelected = value.deepSelected;
          return allowedFilterFn.call(item) && selectableFilterFn.call(item) ? item : undefined;
        });
        if (value.deepSelected) {
          target.addValue(rel_uri, branch);
          $this.removeClass("text-muted").addClass("text-danger");
        } else {
          target.removeValue(rel_uri, branch);
          $this.addClass("text-muted").removeClass("text-danger");
        }
      });
    });

    target.on(rel_uri, propertyModifiedHandler);
    template.one("remove", function () {
      target.off(rel_uri, propertyModifiedHandler);
    });
  }

  function redrawBranch(branchRow) {
    var thatLvl = parseInt( branchRow.attr("data-level") );
    branchRow.nextUntil("[data-level=" + thatLvl + "]").remove();

    var value = new veda.IndividualModel(branchRow.attr("resource"));
    if (value && value.children) delete value.children;
    getChildren([], value, false).then(function (children) {
      return renderRows(children, branchRow).then(function () {
        var nextLvl = parseInt(branchRow.next().attr("data-level"));
        if ( isNaN(nextLvl) || nextLvl <= thatLvl ) {
          console.log("unexpected!!!!!!");
        }
      });
    });
  }
  function propertyModifiedHandler(values) {
    $(".value-row", template).each(function () {
      var $this = $(this),
          uri = $this.attr("resource"),
          value = new veda.IndividualModel(uri);
      if ( values.indexOf(value) >=0 ) {
        $this.find(".select-row").prop("checked", true);
      } else {
        $this.find(".select-row").prop("checked", false);
      }
      if (value.deepSelected) {
        $this.find(".select-deep").removeClass("text-muted").addClass("text-danger");
      } else {
        $this.find(".select-deep").addClass("text-muted").removeClass("text-danger");
      }
    });
  }

  // Render tree
  root.forEach( function (root, index, roots) {
    renderRows([root.id]).then(function () {
      if (roots.length === 1) {
        tbody.find(".expand").click();
      }
    });
  });

  function getChildren(acc, root, goDeeper) {
    return new Promise(function (resolve, reject) {
      if (root.children) {
        resolve (root.children);
      } else {
        var outs = getOut(root);
        getIn(root).then(function (ins) {
          root.children = outs.concat(ins);
          resolve (root.children);
        });
      }
    }).then(function (children) {
      return Promise.all(
        children.map(function (childUri) {
          acc.push(childUri);
          if (goDeeper !== false) {
            var child = new veda.IndividualModel(childUri);
            return getChildren(acc, child, goDeeper);
          }
        })
      );
    }).then(function () {
      return acc;
    });
  }

  function getOut(root) {
    var res = [];
    if (outProperty) {
      outProperty.map(function (property) {
        if (root.hasValue(property.id)) {
          root.properties[property.id].map(function (value) {
            res.push(value.data);
          });
        }
      });
    }
    return res;
  }

  function getIn(root) {
    if (!inProperty) {
      return Promise.resolve([]);
    }
    var q = inProperty.map(function (property) {
        return "'" + property.id + "'=='" + root.id + "'";
      }).join(" || ");
    if ( allowedClass ) {
      var allowed = allowedClass.map(function (allowedClass) {
        return "'rdf:type'=='" + allowedClass.id + "'";
      }).join(" || ");
      q = "( " + q + " ) && ( " + allowed + " )";
    }
    var order = sort || "'rdfs:label_ru' asc, 'rdfs:label_en' asc, 'rdfs:label' asc";
    var unique;
    return veda.Backend.query({
      ticket: veda.ticket,
      query: q,
      sort: order,
      async: true
    }).then(function(queryResult) {
      unique = veda.Util.unique( queryResult.result );
      if (withDeleted) {
        q = q + " && ( 'v-s:deleted'== true )";
        return veda.Backend.query({
          ticket: veda.ticket,
          query: q,
          sort: order,
          async: true
        }).then(function(qResult) {
          return unique.concat(qResult.result);
        });
      } else {
        return unique;
      }
    });
  }

  function drawAddButton(currentRow){
    var addButton = $("<div id='create-NewItem'><button class='btn btn-xs btn-primary margin-sm'>Добавить элемент</button></div>");
    addButton.click(function(){
      var currentUri = currentRow.attr("resource");
      var type = $(this).closest("tr").attr("typeof");
      var newItem = new veda.IndividualModel();
      newItem["rdf:type"] = [new veda.IndividualModel(type)];
      newItem["v-s:hasParentLink"] = [new veda.IndividualModel(currentUri)];
      var modal = veda.Util.showModal(newItem, undefined, "edit");
      newItem.one("afterReset", function () {
        modal.modal("hide").remove();
      });
      newItem.one("afterSave", function () {
        setTimeout(function() {
          redrawBranch(currentRow);
        }, 100);
        modal.modal("hide").remove();
      });
    });
    return addButton;
  }

  if (!this.hasValue("rdf:type", "v-ui:Tree")) {
    $(".heading", template).remove();
  }
  //# sourceURL=v-ui:TreeTemplate
</script>
<div class="container sheet table-responsive">
  <style scoped>
    tr > th:first-child, tr > td:first-child {
      border-right: 1px solid #ddd;
    }
  </style>
  <div class="heading">
    <h2 about="@" property="rdfs:label"></h2>
    <hr class="margin-sm">
  </div>
  <table class="table table-condensed table-striped">
    <thead class="thead"></thead>
    <tbody class="tbody"></tbody>
  </table>
</div>
  """ ;
.

v-ui:ttl
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон TTL"@ru ;
  rdfs:label "Template TTL"@en ;
  v-ui:template """
<div class="container sheet">
  <pre style="border:none;background-color:#fff;"></pre>
  <div class="actions pull-left">
    <span about="@" data-template="v-ui:StandardButtonsTemplate" data-embedded="true" data-buttons="delete destroy"></span>
  </div>
  <div class="pull-right">
    <a id="default" class="btn btn-info" href="#/@" about="v-s:Default" property="rdfs:label"></a>
    <a id="generic" class="btn btn-default" href="#/@//v-ui:generic">generic</a>
    <a id="json" class="btn btn-default" href="#/@//v-ui:json">json</a>
    <a id="ttl" class="disabled btn btn-default" href="#/@//v-ui:ttl">ttl</a>
  </div>
</div>
<script>
  var list = [individual];
  veda.Util.toTTL(list, function (error, ttl) {
    var pre = $("pre", template),
        sanitized = sanitize(ttl),
        anchored = sanitized.replace(/([a-zA-Z][\\w-]*:[\\w-]*)(\\s|\\;|\\.)/gi, "<a class='text-black' href='#/$1//v-ui:ttl'>$1</a>$2");
    pre.html(anchored);
  });

  function sanitize(value) {
    var map = {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        "'": '&#x27;',
        "/": '&#x2F;',
    };
    var reg = /[&<>"'/]/ig;
    return value.replace(reg, function (match) { return map[match]; });
  }

  //# sourceURL=v-ui:ttl
</script>
  """ ;
.

v-ui:json
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон JSON"@ru ;
  rdfs:label "Template JSON"@en ;
  v-ui:template """
<div class="container sheet">
  <pre class="view -edit -search" style="border:none;background-color:#fff;"></pre>
  <textarea class="form-control -view edit search" style='font-family:Menlo,Monaco,Consolas,"Courier New",monospace;font-size:13px;color:black;'></textarea>
  <br>
  <div class="pull-right">
    <a id="default" class="btn btn-info" href="#/@" about="v-s:Default" property="rdfs:label"></a>
    <a id="generic" class="btn btn-default" href="#/@//v-ui:generic">generic</a>
    <a id="json" class="disabled btn btn-default" href="#/@//v-ui:json">json</a>
    <a id="ttl" class="btn btn-default" href="#/@//v-ui:ttl">ttl</a>
  </div>
  <div class="actions pull-left">
    <span about="@" data-template="v-ui:StandardButtonsTemplate" data-embedded="true" data-buttons="edit save cancel delete destroy"></span>
  </div>
</div>
<script>
  var pre = $("pre", template),
      textarea = $("textarea", template),
      json = individual.properties;
  var formatted = format(json);
  var anchorized = anchorize(formatted);
  var height = $("#copyright").offset().top - container.offset().top - 120;
  pre.css("height", height);
  pre.html(anchorized);
  textarea.val(formatted);
  textarea.css("min-height", height);
  var notify = veda.Notify ? new veda.Notify() : function () {};
  var original = individual.properties;
  var validationState = true;
  textarea.on("keyup", function () {
    try {
      formatted = textarea.val();
      json = JSON.parse(formatted);
      if (validationState === false) {
        notify("success", {name: "JSON ok"});
      }
      template.trigger("internal-validated", {state: true});
      validationState = true;
    } catch (error) {
      formatted = format(original);
      json = JSON.parse(formatted);
      if (validationState === true) {
        notify("danger", {name: "JSON error"});
      }
      template.trigger("internal-validated", {state: false});
      validationState = false;
    }
    anchorized = anchorize(formatted);
    pre.html(anchorized);
    individual.properties = json;
    individual.isSync(false);
  });

  // Mark not sync to force update on save
  template.on("edit", function () {
    individual.isSync(false);
  });

  individual.on("afterReset", resetView);
  template.one("remove", function () {
    individual.off("afterReset", resetView);
  });
  function resetView() {
    var formatted = format(individual.properties);
    var anchorized = anchorize(formatted);
    pre.html(anchorized);
    textarea.val(formatted);
  }

  function format (json) {
    var ordered = {};
    Object.keys(json).sort().forEach(function(key) {
      ordered[key] = json[key];
    });
    return JSON.stringify(ordered, sanitize, 2);
  };

  function sanitize(key, value) {
    if (typeof value === "string") {
      var map = {
          '&': '&amp;',
          '<': '&lt;',
          '>': '&gt;',
          '"': '&quot;',
          "'": '&#x27;',
          "/": '&#x2F;',
      };
      var reg = /[&<>"'/]/ig;
      return value.replace(reg, function (match) { return map[match]; });
    }
    return value;
  }

  function anchorize (string) {
    return string.replace(/("|')([a-zA-Z][\\w-]*:[\\w-]*)("|')/gi, "$1<a class='text-black' href='#/$2//v-ui:json'>$2</a>$3");
  };

  //# sourceURL=v-ui:json
</script>
  """ ;
.

v-ui:generic
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон общий"@ru ;
  rdfs:label "Template generic"@en ;
  v-ui:template """
<script>
  // Construct generic template
  var props = $("#properties", template);
  var propTmpl = props.html();
  props.empty();

  var ontology = veda.ontology;

  var properties = [].concat.apply(
    [],
    individual["rdf:type"].map( function (_class) {
      return ontology.getClassProperties(_class.id);
    })
  );

  props.append (
    properties.map( function (property_uri, index, array) {

      if (property_uri === "@" || property_uri === "rdfs:label" || property_uri === "rdf:type" || property_uri === "v-s:deleted") { return; }

      var property = new veda.IndividualModel(property_uri);

      var result = $("<div/>").append( propTmpl );
      $(".name", result).append (
          $("<strong/>", {"about": property_uri, "property": "rdfs:label"}).addClass("text-muted")
      );

      var range = property.hasValue("rdfs:range") ? property["rdfs:range"][0].id : "rdfs:Resource";

      switch ( range ) {
        case "rdfs:Literal":
        case "xsd:string":
          if (property_uri === "v-s:script" || property_uri === "v-ui:template") {
            $(".value", result).append (
                "<veda-control property='" + property_uri + "' data-type='source'></veda-control>"
            );
          } else {
            $(".value", result).append (
                "<div property='" + property_uri + "' class='view -edit -search'/>" +
                "<veda-control property='" + property_uri + "' data-type='multilingualText' class='-view edit search'></veda-control>"
            );
          }
          break;
        case "xsd:integer":
        case "xsd:nonNegativeInteger":
          $(".value", result).append (
              "<div property='" + property_uri + "' />" +
              "<veda-control property='" + property_uri + "' data-type='integer' class='-view edit search'></veda-control>"
          );
          break;
        case "xsd:decimal":
          $(".value", result).append (
              "<div property='" + property_uri + "' />" +
              "<veda-control property='" + property_uri + "' data-type='decimal' class='-view edit search'></veda-control>"
          );
          break;
        case "xsd:dateTime":
          $(".value", result).append (
              "<div property='" + property_uri + "' />" +
              "<veda-control property='" + property_uri + "' data-type='dateTime' class='-view edit search'></veda-control>"
          );
          break;
        case "xsd:boolean":
          $(".name", result).empty();
          $(".value", result).append (
              "<div class='checkbox'>" +
              "<label>" +
              "<veda-control property='" + property_uri + "' data-type='boolean'></veda-control>" +
              "<em about='" + property_uri + "' property='rdfs:label' class='text-muted'></em>" +
              "</label>" +
              "</div>"
          );
          break;
        case "rdfs:Resource":
          $(".value", result).append (
              "<div property='" + property_uri + "' />" +
              "<veda-control property='" + property_uri + "' data-type='generic' class='-view edit search'></veda-control>"
          );
          break;
        default:
          if (property_uri === "v-s:attachment") {
            $(".value", result).append (
                "<div rel='" + property_uri + "' data-template='v-ui:FileTemplateWithComment' data-embedded='true' />" +
                "<veda-control rel='" + property_uri + "' data-type='file' class='-view edit -search'></veda-control>"
            );
          } else {
            $(".value", result).append (
                "<div rel='" + property_uri + "' data-template='v-ui:ClassNameLabelLinkTemplate' />" +
                "<veda-control rel='" + property_uri + "' data-type='link' class='-view edit search fulltext dropdown'></veda-control>"
            );
          }
          break;
      }
      if (index < array.length-1) result.append( $("<hr/>").attr("style", "margin: 10px 0px") );

      return result;
    })
  );
  //# sourceURL=v-ui:generic
</script>
<div>
  <div class="container sheet">
    <div class="row">
      <div class="col-md-4 col-xs-5 text-right">
        <h2 class="text-muted" rel="rdf:type" data-template="v-ui:LabelTemplate"></h2>
      </div>
      <div class="col-md-8 col-xs-7">
        <h2 about="@" property="rdfs:label"></h2>
      </div>
    </div>
    <hr style="margin: 10px 0px"/>
    <div class="row">
      <div class="col-md-4 col-xs-5 text-right">
        <strong class="text-muted">@</strong>
      </div>
      <div class="col-md-8 col-xs-7">
        <a href="#/@"><span property="@"></span></a>
        <a href="#/@//v-ui:Graph"><span class="glyphicon glyphicon-link"></span></a>
      </div>
    </div>
    <hr style="margin: 10px 0px"/>
    <div class="row">
      <div class="col-md-4 col-xs-5 text-right">
        <strong about="rdf:type" property="rdfs:label" class="text-muted"></strong>
      </div>
      <div class="col-md-8 col-xs-7">
        <div rel="rdf:type" data-template="v-ui:ClassNameLabelLinkTemplate"></div>
        <veda-control rel="rdf:type" data-type="link" data-template="{individual['rdf:type'][0]['rdfs:label'].join(' ')+': '+individual['rdfs:label'].join(' ')}" class='-view edit search fulltext dropdown'></veda-control>
      </div>
    </div>
    <hr style="margin: 10px 0px"/>
    <div class="row">
      <div class="col-md-4 col-xs-5 text-right">
        <strong about="rdfs:label" property="rdfs:label" class="text-muted"></strong>
      </div>
      <div class="col-md-8 col-xs-7">
        <div property="rdfs:label" class='view -edit -search'></div>
        <veda-control property="rdfs:label" data-type="multilingualString" class='-view edit search'></veda-control>
      </div>
    </div>
    <hr style="margin: 10px 0px"/>
    <div id="properties">
      <div class="row">
        <div class="col-md-4 col-xs-5 text-right name"></div>
        <div class="col-md-8 col-xs-7 value"></div>
      </div>
    </div>
    <br>
    <br>
    <div class="actions">
      <span about="@" data-template="v-ui:StandardButtonsTemplate" data-embedded="true" data-buttons="edit save cancel delete destroy journal task rights"></span>
      <a id="default" class="btn btn-info" href="#/@" about="v-s:Default" property="rdfs:label"></a>
      <a id="generic" class="disabled btn btn-default" href="#/@//v-ui:generic">generic</a>
      <a id="json" class="btn btn-default" href="#/@//v-ui:json">json</a>
      <a id="ttl" class="btn btn-default" href="#/@//v-ui:ttl">ttl</a>
    </div>
  </div>
  <div about="@" class="container sheet view -edit -search" data-template="v-s:CommentsTemplate"></div>
</div>
  """ ;
.

v-ui:ExportToTTL
  rdf:type v-s:Bundle ;
  rdfs:label "Экспорт в TTL"@ru ;
  rdfs:label "Export to TTL"@en ;
.

v-ui:Graph
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон графа"@ru ;
  rdfs:label "Template graph"@en ;
  v-ui:template """
<div class="container-fluid sheet">
  <button type="button" id="freeze" class="btn btn-success"><i class="glyphicon glyphicon-pause"></i></button>
  <button type="button" id="export-ttl" class="btn btn-primary"><i class="glyphicon glyphicon-export"></i> <span about="v-ui:ExportToTTL" property="rdfs:label"></span></button>

  <div id="graph"></div>

  <div id="individual-context-menu">
    <ul class="dropdown-menu" role="menu">
      <li role="presentation" class="dropdown-header">Индивид</li>
      <li role="presentation" class="divider"></li>
      <li><a tabindex="-1" id="out-links">Все исходящие ссылки</a></li>
      <li><a tabindex="-1" id="in-links">Все входящие ссылки</a></li>
      <li role="presentation" class="divider"></li>
      <li><a tabindex="-1" id="delete">Удалить</a></li>
      <li><a tabindex="-1" id="delete-with-out">Удалить с исходящими</a></li>
      <li><a tabindex="-1" id="delete-with-in">Удалить с входящими</a></li>
    </ul>
  </div>
  <div id="class-context-menu">
    <ul class="dropdown-menu" role="menu">
      <li role="presentation" class="dropdown-header">Класс</li>
      <li><a tabindex="-1" id="class-individuals">Все индивиды</a></li>
      <li><a tabindex="-1" id="class-subclasses">Все подклассы</a></li>
      <li><a tabindex="-1" id="class-properties">Свойства класса</a></li>
      <li><a tabindex="-1" id="class-templates">Шаблоны класса</a></li>
      <li><a tabindex="-1" id="class-specifications">Спецификации класса</a></li>
      <li role="presentation" class="divider"></li>
      <li><a tabindex="-1" id="out-links">Все исходящие ссылки</a></li>
      <li><a tabindex="-1" id="in-links">Все входящие ссылки</a></li>
      <li role="presentation" class="divider"></li>
      <li><a tabindex="-1" id="delete">Удалить</a></li>
      <li><a tabindex="-1" id="delete-with-out">Удалить с исходящими</a></li>
      <li><a tabindex="-1" id="delete-with-in">Удалить с входящими</a></li>
    </ul>
  </div>
  <div id="property-context-menu">
    <ul class="dropdown-menu" role="menu">
      <li role="presentation" class="dropdown-header">Свойство</li>
      <li><a tabindex="-1" id="property-specifications">Спецификации свойства</a></li>
      <li role="presentation" class="divider"></li>
      <li><a tabindex="-1" id="out-links">Все исходящие ссылки</a></li>
      <li><a tabindex="-1" id="in-links">Все входящие ссылки</a></li>
      <li role="presentation" class="divider"></li>
      <li><a tabindex="-1" id="delete">Удалить</a></li>
      <li><a tabindex="-1" id="delete-with-out">Удалить с исходящими</a></li>
      <li><a tabindex="-1" id="delete-with-in">Удалить с входящими</a></li>
    </ul>
  </div>
  <div id="ontology-context-menu">
    <ul class="dropdown-menu" role="menu">
      <li role="presentation" class="dropdown-header">Онтология</li>
      <li role="presentation" class="divider"></li>
      <li><a tabindex="-1" id="out-links">Все исходящие ссылки</a></li>
      <li><a tabindex="-1" id="in-links">Все входящие ссылки</a></li>
      <li role="presentation" class="divider"></li>
      <li><a tabindex="-1" id="delete">Удалить</a></li>
      <li><a tabindex="-1" id="delete-with-out">Удалить с исходящими</a></li>
      <li><a tabindex="-1" id="delete-with-in">Удалить с входящими</a></li>
    </ul>
  </div>
  <div id="template-context-menu">
    <ul class="dropdown-menu" role="menu">
      <li role="presentation" class="dropdown-header">Шаблон</li>
      <li role="presentation" class="divider"></li>
      <li><a tabindex="-1" id="out-links">Все исходящие ссылки</a></li>
      <li><a tabindex="-1" id="in-links">Все входящие ссылки</a></li>
      <li role="presentation" class="divider"></li>
      <li><a tabindex="-1" id="delete">Удалить</a></li>
      <li><a tabindex="-1" id="delete-with-out">Удалить с исходящими</a></li>
      <li><a tabindex="-1" id="delete-with-in">Удалить с входящими</a></li>
    </ul>
  </div>
  <div id="specification-context-menu">
    <ul class="dropdown-menu" role="menu">
      <li role="presentation" class="dropdown-header">Спецификация</li>
      <li role="presentation" class="divider"></li>
      <li><a tabindex="-1" id="out-links">Все исходящие ссылки</a></li>
      <li><a tabindex="-1" id="in-links">Все входящие ссылки</a></li>
      <li role="presentation" class="divider"></li>
      <li><a tabindex="-1" id="delete">Удалить</a></li>
      <li><a tabindex="-1" id="delete-with-out">Удалить с исходящими</a></li>
      <li><a tabindex="-1" id="delete-with-in">Удалить с входящими</a></li>
    </ul>
  </div>
</div>
<script>
  function addNode (individual) {
    return individual.load().then(function (individual) {
      if ( nodes.get(individual.id) === null ) {
        var node = {
          id: individual.id,
          label: individual["rdf:type"][0].toString() + String.fromCharCode(10, 13) + individual.toString(),
          individual: individual
        };
        if (individual["rdf:type"][0]) {
          switch ( individual["rdf:type"][0].id ) {
            case "rdfs:Class" :
            case "owl:Class" :
              node.group = "_class";
              break;
            case "rdf:Property" :
            case "owl:ObjectProperty" :
              node.group = "objectProperty";
              break;
            case "owl:DatatypeProperty" :
            case "owl:OntologyProperty" :
            case "owl:AnnotationProperty" :
              node.group = "datatypeProperty";
              break;
            case "v-ui:ClassTemplate" :
              node.group = "template";
              break;
            case "v-ui:PropertySpecification" :
            case "v-ui:DatatypePropertySpecification" :
            case "v-ui:ObjectPropertySpecification" :
              node.group = "specification";
              break;
            case "owl:Ontology" :
              node.group = "ontology";
              break;
            default :
              node.group = "individual";
              break;
          }
        }
        nodes.add ([ node ]);
      }
    });
  }

  function addOutLinks (id) {
    var individual = nodes.get(id).individual;
    Object.getOwnPropertyNames(individual.properties).map(function (property_uri) {
      if (property_uri === "@") { return; }
      individual[property_uri].forEach(function (value) {
        if (value instanceof veda.IndividualModel && value !== individual) {
          addNode(value).then(function () {
            var from = individual.id;
            var to = value.id;
            var label = (new veda.IndividualModel(property_uri))["rdfs:label"].join(", ");
            var options = {
              filter: function (item) {
                return  item.from == from &&
                    item.to == to &&
                    item.label.toString() == label;
              }
            };
            if ( !edges.get(options).length ) {
              edges.add ([
                {
                  from: from,
                  to: to,
                  label: label
                }
              ]);
            }
          });
        }
      });
    });
  }

  function addInLinks (id, queryStr) {
    var q = queryStr || "'*'=='{id}'";
    q = q.replace("{id}", id);
    return veda.Backend.query(veda.ticket, q).then(function (queryResult) {
      var uris = queryResult.result;
      return veda.Backend.get_individuals(veda.ticket, uris).then(function (individualsJSONs) {
        individualsJSONs.forEach(function (individualJSON) {
          var res = new veda.IndividualModel(individualJSON);
          addNode(res);
          var to = id;
          var from = res.id;
          Object.getOwnPropertyNames(res.properties).map(function (property_uri) {
            if (property_uri === "@") { return; }
            if ( res.hasValue(property_uri, id) ) {
              var label = new veda.IndividualModel(property_uri)["rdfs:label"].join(", ");
              var options = {
                filter: function (item) {
                  return  item.from === from &&
                    item.to === to &&
                    item.label.toString() === label;
                }
              };
              if ( !edges.get(options).length ) {
                edges.add([{from: from, to: to, label: label}]);
              }
            }
          });
        });
      });
    });
  }

  function deleteWithOutLinks (id) {
    nodes.remove(id);
    var nodesToRemove = [];
    var edgesToRemove = edges.get({
      filter: function (item) {
        if (item.from == id) {
          nodesToRemove.push(item.to);
        }
        return (item.from == id || item.to == id);
      }
    });
    edges.remove(edgesToRemove);
    nodes.remove(nodesToRemove);
  }

  function deleteWithInLinks (id) {
    nodes.remove(id);
    var nodesToRemove = [];
    var edgesToRemove = edges.get({
      filter: function (item) {
        if (item.to == id) {
          nodesToRemove.push(item.from);
        }
        return (item.from == id || item.to == id);
      }
    });
    edges.remove(edgesToRemove);
    nodes.remove(nodesToRemove);
  }

  // Event handlers
  function onSelect (selected) {
    select = selected;
    body.off("keydown", selectedKeydownHandler);
    body.one("keydown", selected, selectedKeydownHandler);
  }
  function selectedKeydownHandler(e) {
    if (e.which == 46) {
      nodes.remove(e.data.nodes);
      edges.remove(e.data.edges);
    }
    if (e.which == 73) {
      addInLinks(e.data.nodes[0]);
    }
    if (e.which == 79) {
      addOutLinks(e.data.nodes[0]);
    }
  }

  function onDoubleClick (selected) {
    if (!selected.nodes.length) return;
    var individual_uri = selected.nodes[0];
    var modalTmpl = $("#individual-modal-template").html();
    var modal = $(modalTmpl);
    var modalBody = $(".modal-body", modal);
    var individual = new veda.IndividualModel(individual_uri);
    individual.present(modalBody);
    modal.one("remove", function (e) {
      modal.modal("hide");
    });
    modal.modal();
    $("#main").append(modal);
  }

  var graph = $("#graph", template);

  // Context menu for selected node
  graph.contextmenu({
    target: $("#individual-context-menu", template),
    before: function (e, element) {
      if (!select.nodes.length) return false;
      var id = select.nodes[0];
      var node = nodes.get(id);
      switch (node.group) {
        case "_class": this.setMenu($("#class-context-menu", template)); break;
        case "ontology": this.setMenu($("#ontology-context-menu", template)); break;
        case "datatypeProperty":
        case "objectProperty":
          this.setMenu($("#property-context-menu", template)); break;
        case "template": this.setMenu($("#template-context-menu", template)); break;
        case "specification": this.setMenu($("#specification-context-menu", template)); break;
        default: this.setMenu($("#individual-context-menu", template)); break;
      }
      return true;
    },
    onItem: function (context, e) {
      var id = select.nodes[0];
      switch (e.target.id) {
        case "out-links" : addOutLinks( id ); break;
        case "in-links" : addInLinks( id ); break;
        case "delete" :
          nodes.remove(select.nodes);
          edges.remove(select.edges);
          select.nodes = select.edges = [];
          break;
        case "delete-with-out" :
          deleteWithOutLinks (id);
          select.nodes = select.edges = [];
          break;
        case "delete-with-in" :
          deleteWithInLinks (id);
          select.nodes = select.edges = [];
          break;
        case "class-individuals" : addInLinks( id, "'rdf:type'==='{id}'" ); break;
        case "class-subclasses" : addInLinks( id, "('rdf:type'==='owl:Class'||'rdf:type'==='rdfs:Class')&&'rdfs:subClassOf'==='{id}'" ); break;
        case "class-properties" : addInLinks( id, "'rdfs:domain'==='{id}'"); break;
        case "class-templates" : addInLinks( id, "'rdf:type'==='v-ui:ClassTemplate'&&'v-ui:forClass'==='{id}'" ); break;
        case "class-specifications" :
          addInLinks( id, "('rdf:type'==='v-ui:PropertySpecification' || " +
                  "'rdf:type'==='v-ui:DatatypePropertySpecification' || " +
                  "'rdf:type'==='v-ui:ObjectPropertySpecification'" +
                  ")&&'v-ui:forClass'==='{id}'" );
        break;
        case "property-specifications" :
          addInLinks( id, "('rdf:type'==='v-ui:PropertySpecification' || " +
                  "'rdf:type'==='v-ui:DatatypePropertySpecification' || " +
                  "'rdf:type'==='v-ui:ObjectPropertySpecification'" +
                  ")&&'v-ui:forProperty'=='{id}'" );
        break;
      }
    }
  });

  // Create a network

  var root = individual;
  var nodes = new vis.DataSet(), edges = new vis.DataSet();
  var body = $("body");
  var select = {nodes: [], edges: []};
  var data = {
    nodes: nodes,
    edges: edges,
  };

  addNode(root).then(function () {
    addOutLinks(root.id);
    addInLinks(root.id);
  });

  var height = ( $("#copyright").offset().top - graph.offset().top - 50 ) + "px";
  var options = {
    width: "100%",
    height: height,
    nodes: {
      shape: "box"
    },
    edges: {
      style: "arrow",
      arrowScaleFactor: 0.7
    },
    groups: {
      _class: {
        color: {
          border: 'green',
          background: 'lightgreen',
          highlight: {
            border: 'green',
            background: 'lightgreen'
          }
        }
      },
      datatypeProperty: {
        color: {
          border: 'goldenrod',
          background: 'gold',
          highlight: {
            border: 'goldenrod',
            background: 'gold'
          }
        }
      },
      objectProperty: {
        color: {
          border: 'darkorange',
          background: 'orange',
          highlight: {
            border: 'darkorange',
            background: 'orange'
          }
        }
      },
      template: {
        color: {
          border: 'darkviolet',
          background: 'violet',
          highlight: {
            border: 'darkviolet',
            background: 'violet'
          }
        }
      },
      specification: {
        color: {
          border: 'hotpink',
          background: 'lightpink',
          highlight: {
            border: 'hotpink',
            background: 'lightpink'
          }
        }
      },
      ontology: {
        color: {
          border: 'darkgreen',
          background: 'green',
          highlight: {
            border: 'darkgreen',
            background: 'green'
          }
        },
        fontColor: "white"
      },

    },
    physics: {
      barnesHut: {
        enabled: true,
        gravitationalConstant: -4000,
        centralGravity: 0.1,
        springLength: 200,
        springConstant: 0.04,
        damping: 0.09
      },
      /*repulsion: {
        centralGravity: 0.1,
        springLength: 50,
        springConstant: 0.05,
        nodeDistance: 100,
        damping: 0.09
      },*/
      /*hierarchicalRepulsion: {
        centralGravity: 0.5,
        springLength: 150,
        springConstant: 0.01,
        nodeDistance: 300,
        damping: 0.09
      }*/
    },

  };

  var network;

  setTimeout(function () {
    network = new vis.Network(graph.get(0), data, options);
    network.on("doubleClick", onDoubleClick);
    network.on("select", onSelect);
  });

  // Buttons
  var exportBtn = $("#export-ttl", template).click(function () {
    var list = nodes.get().map(function (item) { return item.individual; });
    veda.Util.exportTTL(list);
  });
  var freezeBtn = $("#freeze", template).click(function () {
    network.freezeSimulation = !network.freezeSimulation;
    $("i", this).toggleClass("glyphicon-pause glyphicon-play");
  });

  //# sourceURL=v-ui:Graph
</script>
  """ ;
.
