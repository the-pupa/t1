/*
 * Camunda BPM REST API
 *
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SetRetriesForExternalTasksDto {
    /// The number of retries to set for the external task.  Must be >= 0. If this is 0, an incident is created and the task cannot be fetched anymore unless the retries are increased again. Can not be null.
    #[serde(rename = "retries", skip_serializing_if = "Option::is_none")]
    pub retries: Option<i32>,
    /// The ids of the external tasks to set the number of retries for.
    #[serde(rename = "externalTaskIds", skip_serializing_if = "Option::is_none")]
    pub external_task_ids: Option<Vec<String>>,
    /// The ids of process instances containing the tasks to set the number of retries for.
    #[serde(rename = "processInstanceIds", skip_serializing_if = "Option::is_none")]
    pub process_instance_ids: Option<Vec<String>>,
    #[serde(rename = "externalTaskQuery", skip_serializing_if = "Option::is_none")]
    pub external_task_query: Option<crate::models::ExternalTaskQueryDto>,
    #[serde(rename = "processInstanceQuery", skip_serializing_if = "Option::is_none")]
    pub process_instance_query: Option<crate::models::ProcessInstanceQueryDto>,
    #[serde(rename = "historicProcessInstanceQuery", skip_serializing_if = "Option::is_none")]
    pub historic_process_instance_query: Option<crate::models::HistoricProcessInstanceQueryDto>,
}

impl SetRetriesForExternalTasksDto {
    pub fn new() -> SetRetriesForExternalTasksDto {
        SetRetriesForExternalTasksDto {
            retries: None,
            external_task_ids: None,
            process_instance_ids: None,
            external_task_query: None,
            process_instance_query: None,
            historic_process_instance_query: None,
        }
    }
}


